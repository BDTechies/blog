{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/programmers/source/css/prism (copy).css","path":"css/prism (copy).css","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/prism.css","path":"css/prism.css","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/programmers/source/img/bg.dark.jpg","path":"img/bg.dark.jpg","modified":1,"renderable":1},{"_id":"themes/programmers/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/programmers/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/programmers/source/js/prism.js","path":"js/prism.js","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/material.min.css","path":"css/material.min.css","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/img/bg.dark.jpg","path":"css/img/bg.dark.jpg","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/img/bg.jpg","path":"css/img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/programmers/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"13ec401be1da06329c44c4d3f8f64611cc42979a","modified":1542682993903},{"_id":"source/404.html","hash":"a1facc8673dccdb7e157694ad8ab1bb519c69fae","modified":1542710953766},{"_id":"themes/programmers/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1542682993911},{"_id":"themes/programmers/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1542682993911},{"_id":"themes/programmers/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1542682993911},{"_id":"themes/programmers/_config.yml","hash":"88f467321a4d3426560ffa0fe2ded58ab1b91e3f","modified":1542683926125},{"_id":"themes/programmers/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1542682993911},{"_id":"source/_posts/frontend-guideline-02.md","hash":"50e15e6d507a119101fb1c9f14bac1dbb0328dbc","modified":1542774436673},{"_id":"source/_posts/frontend-guideline-01.md","hash":"b0adeeba9c7ae39dedf877bde0ee01c4c10aaba0","modified":1542682993903},{"_id":"source/_posts/hosting-website-and-react-app-on-github.md","hash":"4ba7c03c46bf2c1f23a1af436cefaaf0e31b1985","modified":1542682993903},{"_id":"source/_posts/html-css-intro-01.md","hash":"7a712cc10a9d0ad16e09fd033f87f2f254b4f076","modified":1542682993903},{"_id":"source/_posts/portfolio-design-guideline.md","hash":"d2e7e5fb1d1eadc7895d3247c35866a4c1532805","modified":1542682993903},{"_id":"source/_posts/জাভাস্ক্রিপ্ট-শিখি-পর্ব-০২.md","hash":"c4752e6abd390055e27aa0da32482f698d87928a","modified":1542774294592},{"_id":"source/_posts/জাভাস্ক্রিপ্ট-শিখি-পর্ব-১.md","hash":"47d6d223a08455b2ca69840ea009cf25bea89648","modified":1542774333188},{"_id":"themes/programmers/languages/bn.yml","hash":"9875b733aefdff6f52984bae9fc55f1066b7dcf4","modified":1542682993911},{"_id":"themes/programmers/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1542682993911},{"_id":"themes/programmers/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1542682993911},{"_id":"themes/programmers/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1542682993911},{"_id":"themes/programmers/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1542682993911},{"_id":"themes/programmers/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1542682993911},{"_id":"themes/programmers/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1542682993911},{"_id":"themes/programmers/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1542682993911},{"_id":"themes/programmers/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1542682993911},{"_id":"themes/programmers/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1542682993911},{"_id":"themes/programmers/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1542682993911},{"_id":"themes/programmers/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1542682993911},{"_id":"themes/programmers/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1542682993911},{"_id":"themes/programmers/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1542682993911},{"_id":"themes/programmers/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1542682993911},{"_id":"themes/programmers/layout/layout.ejs","hash":"2a998d0053d1fe914dce58d5eac7756939af4ab8","modified":1542682993911},{"_id":"themes/programmers/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1542682993911},{"_id":"themes/programmers/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542682993911},{"_id":"themes/programmers/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542682993911},{"_id":"themes/programmers/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1542682993911},{"_id":"themes/programmers/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/after-footer.ejs","hash":"25a8700e253e337775472bdc091defc91d5ad27a","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/archive-post.ejs","hash":"c3a6b8f48290141c32e87b7a554eaeded669ba98","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/archive.ejs","hash":"7dd880ae3df4847672cb9ba9c9c40ba2b6133f75","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/article.ejs","hash":"1cf38a311440957c7d08fb1e3f3c3aa8ae33530a","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/footer.ejs","hash":"c223a0481e5dbb059971ba74d22cfb58205d9214","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/course-card.ejs","hash":"7110649049a7d242f239943dbc6c2e1840b45359","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/google-analytics.ejs","hash":"d1c760708a82ac32b5739a1651719e0b235f5fab","modified":1542684338141},{"_id":"themes/programmers/layout/_partial/head.ejs","hash":"3d43570483e63507226516a225c9780eee84143b","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/header.ejs","hash":"5324d6c7b55d0ca41a90212b3d85d246a0f18420","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/home-posts.ejs","hash":"0cdb73a65bf4e3855a9ebeecba1a9c48f4667c24","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/blog-posts.ejs","hash":"e77826c0c058f2a08d5777cd07b3c95811f7dce7","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/main-nav.ejs","hash":"72ecfb0c6fef3a1bdfc4b3081b67d93d87b040c7","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1542682993911},{"_id":"themes/programmers/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1542682993911},{"_id":"themes/programmers/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1542682993911},{"_id":"themes/programmers/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1542682993911},{"_id":"themes/programmers/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1542682993911},{"_id":"themes/programmers/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1542682993911},{"_id":"themes/programmers/source/css/prism (copy).css","hash":"a415dcc0bbf9676f3ee7f48138a505931a5d52c8","modified":1542682993915},{"_id":"themes/programmers/source/css/prism.css","hash":"2c82536e391169c105061885751f4b66759defee","modified":1542682993915},{"_id":"themes/programmers/source/css/style.scss","hash":"e5a8c66d2c2bde47dccc4745b5e23221764f0260","modified":1542682993915},{"_id":"themes/programmers/source/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1542682993915},{"_id":"themes/programmers/source/js/script.js","hash":"02b1238125d008e56198b045994b30482b7894d0","modified":1542682993919},{"_id":"themes/programmers/layout/_partial/post/share.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1542682993911},{"_id":"themes/programmers/source/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1542682993919},{"_id":"themes/programmers/source/js/prism.js","hash":"b0fc5d5ecb7061e6917fab97abe93882c2451dda","modified":1542682993919},{"_id":"themes/programmers/layout/_partial/post/author.ejs","hash":"178d6249d1037c69897bd980fba226027fcd444b","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/category.ejs","hash":"5002d3307815b96400ea7c3cc8bb78382ec9701a","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/date.ejs","hash":"8a3e750d89555e76086185e51248a0eed7d68547","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/pageview.ejs","hash":"b1fa971daab77857586258fdb09fc7cff983cef9","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/nav.ejs","hash":"08f8baa8efea4bf12fba9c0fabc33514b0a29288","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/reading-time.ejs","hash":"1d6b827b5f9c06d34e8721cb29228235d8f2f667","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1542682993911},{"_id":"themes/programmers/layout/_partial/post/title.ejs","hash":"c2271fb5bd0fa3dc351fa290b9bd4866f11f9e7f","modified":1542682993911},{"_id":"themes/programmers/source/css/material.min.css","hash":"112e9fc902e1b0f0361318cae20beaeddedec9e8","modified":1542682993915},{"_id":"themes/programmers/source/css/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_archive.scss","hash":"d7ba527e024d836b96bc157293d05081f5e9d39e","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_article-nav.scss","hash":"9a8048d9c16e869568d988d21e3477171aa8fc0a","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_article.scss","hash":"dde6e50a4a44e02d4fef2fffe82de9855b225d8c","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_blog-posts.scss","hash":"80e89be99cb7f0c63aee2d0b9b2ef2be9d3716f4","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_code-highlight.scss","hash":"0b8ea8f9888743c9b01565bee8376e94af884d7a","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_colors.scss","hash":"aaa8ff5b5d2f61948fc4c31d5cff54d25b47d57d","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_common.scss","hash":"8d29f860f7054736b51ead127e478508c5efebdf","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_fonts.scss","hash":"a85806362447ff6288d5cbafc7bdec75bc78cad2","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_footer.scss","hash":"72617f7eb4baeac0365e38853d07f7fe4bd68a0f","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_header.scss","hash":"b71e7e6abad782a8bfba3a04cbbd3bdaa0d61ead","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_home-posts.scss","hash":"4b0637b2e37f2c4d962ed2bbbfb0d7ff32fa3910","modified":1542682993915},{"_id":"themes/programmers/source/css/components/_main.scss","hash":"a8e51db7774bb97be9142e1f1c6be34d5f1e8c24","modified":1542774557098},{"_id":"themes/programmers/source/css/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1542682993915},{"_id":"themes/programmers/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1542682993915},{"_id":"public/404.html","hash":"4dc01e7db2cf2eafeff849dcb6c5b707162a9e7f","modified":1542774637861},{"_id":"public/category/ওয়েব-ডেভেলপমেন্ট/index.html","hash":"3d83f8b164ddc6fb2b4187c986048c1502777537","modified":1542774637981},{"_id":"public/category/প্রোগ্রামিং/index.html","hash":"bf693e82f81ac19e6c05a315e1fcfc6e8fad09a1","modified":1542774637981},{"_id":"public/archives/index.html","hash":"9b11660b87ac2382eded17e0f6b6abbd4611cb47","modified":1542774637981},{"_id":"public/archives/2016/index.html","hash":"13e0d65514b0e267f52a8d0ca9d820a4e2ede223","modified":1542774637982},{"_id":"public/archives/2016/12/index.html","hash":"668010ee74a3cb9e64c0dcc54dc8c8fdaac2b461","modified":1542774637982},{"_id":"public/archives/2017/index.html","hash":"faa436ed3848d21a610e316f56e50838e66d593b","modified":1542774637982},{"_id":"public/archives/2017/02/index.html","hash":"0a5b4e4f36c84bbc23df551934a4b6c7cb8f492a","modified":1542774637982},{"_id":"public/archives/2017/03/index.html","hash":"12f443555b6d2fb5614efd64ed147262708ca4b2","modified":1542774637982},{"_id":"public/archives/2018/index.html","hash":"dce52cbd484f4d40534a9d278a849361827f19fa","modified":1542774637982},{"_id":"public/archives/2018/03/index.html","hash":"0adfbc661224d6dbceaf1272a366ffb463fccf4c","modified":1542774637983},{"_id":"public/archives/2018/04/index.html","hash":"44c273c8f0bba06e0486ef444d40fc1b0cd62f79","modified":1542774637983},{"_id":"public/archives/2018/11/index.html","hash":"31d322a36caa120eebd9a1cf8d6ce9f9c666287c","modified":1542774637983},{"_id":"public/course/ওয়েব-ডেভেলপমেন্ট/index.html","hash":"2c372660f8226e30173eca9157ad3ec4bb08d7c9","modified":1542774637983},{"_id":"public/course/html/index.html","hash":"93e3548629e577550719cece8b541962fc282878","modified":1542774637983},{"_id":"public/course/reactjs/index.html","hash":"d51401029bae581d9ad99b8ef3bf4ca8417bda02","modified":1542774637983},{"_id":"public/course/github/index.html","hash":"921b7b7c0fb94876336ff7f85f6058aa1e76bd6e","modified":1542774637984},{"_id":"public/course/javascript/index.html","hash":"8dec92145deff1920a37853776bfe2dd9971ed29","modified":1542774637984},{"_id":"public/course/জাভাস্ক্রিপ্ট/index.html","hash":"9c921a43c9c7943673b2ad319c01b74cd5680627","modified":1542774637984},{"_id":"public/course/প্রোগ্রামিং/index.html","hash":"036fe2c92987036ed466052f1a8a7d10f84518a1","modified":1542774637984},{"_id":"public/2018/11/21/জাভাস্ক্রিপ্ট-শিখি-পর্ব-০২/index.html","hash":"d15b96ea7ee44421047c28624b5f15e9369b30a7","modified":1542774637984},{"_id":"public/2018/04/05/hosting-website-and-react-app-on-github/index.html","hash":"d2a38d7fa4436fcb2bda4013487d329fd8ad3ed5","modified":1542774637984},{"_id":"public/2018/03/22/জাভাস্ক্রিপ্ট-শিখি-পর্ব-১/index.html","hash":"bf4bea9ff17aa3f71f30d6804a2d6d37dd19d01b","modified":1542774637984},{"_id":"public/2017/03/09/html-css-intro-01/index.html","hash":"98756fbf2d0dcc2be513340cab13b0b3a3a742a2","modified":1542774637984},{"_id":"public/2017/02/21/portfolio-design-guideline/index.html","hash":"30de42cca0c812a3e83e0590a2d41b95652b97ff","modified":1542774637984},{"_id":"public/2016/12/31/frontend-guideline-02/index.html","hash":"3b2b62a01383ea989c763b55b06bcedee44a6d40","modified":1542774637985},{"_id":"public/2016/12/13/frontend-guideline-01/index.html","hash":"4d337addd1019a98d597d27cf4de3efac252830d","modified":1542774637985},{"_id":"public/index.html","hash":"10b258cc2e2d6a7889139daf1472049913e22f5e","modified":1542774637985},{"_id":"public/CNAME","hash":"13ec401be1da06329c44c4d3f8f64611cc42979a","modified":1542774637988},{"_id":"public/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1542774637988},{"_id":"public/css/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1542774637988},{"_id":"public/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1542774637995},{"_id":"public/css/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1542774637996},{"_id":"public/css/prism (copy).css","hash":"a415dcc0bbf9676f3ee7f48138a505931a5d52c8","modified":1542774638008},{"_id":"public/css/prism.css","hash":"2c82536e391169c105061885751f4b66759defee","modified":1542774638008},{"_id":"public/js/script.js","hash":"02b1238125d008e56198b045994b30482b7894d0","modified":1542774638009},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1542774638014},{"_id":"public/js/prism.js","hash":"b0fc5d5ecb7061e6917fab97abe93882c2451dda","modified":1542774638027},{"_id":"public/css/material.min.css","hash":"112e9fc902e1b0f0361318cae20beaeddedec9e8","modified":1542774638033},{"_id":"public/css/style.css","hash":"7550f48617f03cfe73446a932fc95f96951df1d3","modified":1542774638043}],"Category":[{"name":"ওয়েব ডেভেলপমেন্ট","_id":"cjoqo6ovt0003gca26d8pra9z"},{"name":"প্রোগ্রামিং","_id":"cjoqo6ow70008gca2wksvypez"}],"Data":[],"Page":[{"layout":"false","_content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>প্রযুক্তি স্কুল | ৪০৪</title>\n  <style media=\"screen\">\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Open Sans Condensed', sans-serif;\n      background: #E2E1DC;\n      min-width: 150px;\n    }\n\n    a {\n      text-decoration: none;\n      color: #7cb342;\n    }\n\n    .circle_filling,\n    .outside_circle .outside_filling,\n    .inner_circle .inner_filling {\n      border-radius: 50%;\n      position: absolute;\n      background: #FFF;\n      width: 95%;\n      padding-bottom: 95%;\n      top: 2.5%;\n      left: 2.5%;\n    }\n\n    .compass_container {\n      position: relative;\n      width: 150px;\n      height: 150px;\n      margin: 20px 0;\n    }\n\n    .outside_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 100%;\n      padding-bottom: 100%;\n      top: 0;\n      left: 0;\n    }\n\n    .inner_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 80%;\n      padding-bottom: 80%;\n      top: 10%;\n      left: 10%;\n    }\n\n    .inner_circle .inner_filling {\n      background: #F6D436;\n    }\n\n    .top_point {\n      width: 5%;\n      height: 0;\n      padding: 7.5% 0 0 5%;\n      overflow: hidden;\n      position: absolute;\n      top: 0;\n      left: 45%;\n    }\n\n    .top_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-top: 50px solid #462B17;\n    }\n\n    .bottom_point {\n      width: 5%;\n      height: 0;\n      padding: 0 0 7.5% 5%;\n      overflow: hidden;\n      position: absolute;\n      bottom: 0;\n      left: 45%;\n    }\n\n    .bottom_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: 0 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-bottom: 50px solid #462B17;\n    }\n\n    .left_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 0 5% 7.5%;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n    }\n\n    .left_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-left: 50px solid #462B17;\n    }\n\n    .right_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 2.5% 5% 0;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n      right: 0;\n    }\n\n    .right_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px -50px 0 0;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-right: 50px solid #462B17;\n    }\n\n    .top_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      bottom: 57px;\n    }\n\n    .top_needle .needle_inside {\n      width: 0;\n      height: 0;\n      border-left: 5px solid transparent;\n      border-right: 5px solid transparent;\n      border-top: 60px solid #F87A6A;\n      position: absolute;\n      bottom: 15px;\n      right: -5px;\n    }\n\n    .bottom_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      top: 57px;\n    }\n\n    .needle {\n      width: 100%;\n      height: 100%;\n      -webkit-animation: search linear 2s infinite alternate;\n      animation: search linear 2s infinite alternate;\n      -webkit-transform-origin: center center;\n      transform-origin: center center;\n      position: absolute;\n    }\n\n    .inner_filling span {\n      font-weight: bold;\n      position: absolute;\n      font-size: 14px;\n    }\n\n    .inner_filling span:nth-child(1) {\n      top: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(2) {\n      right: 5px;\n      top: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(3) {\n      bottom: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(4) {\n      left: 5px;\n      top: calc(50% - 5px);\n    }\n\n    @-webkit-keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    @keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    .container {\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .error_404 {\n      text-align: center;\n    }\n\n    .error_404 h1 {\n      font-size: 24px;\n    }\n\n    .error_404 h2 {\n      font-size: 16px;\n      display: inline-block;\n      background: red;\n      padding: 4px 10px 0 10px;\n      border-radius: 6px;\n      color: #fff;\n      margin-bottom: 20px;\n    }\n\n    .not_north {\n      position: relative;\n      top: 0px;\n      text-align: center;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"error_404\">\n      <h2>৪০৪ | মাইনকার চিপা</h2>\n      <h1>মনে হচ্ছে ভুল করে আপনি মাইনকার চিপায় চলে এসেছেন।</h1>\n    </div>\n    <div class=\"compass_container\">\n      <div class=\"outside_circle\">\n        <div class=\"center\"></div>\n        <div class=\"outside_filling\">\n          <div class=\"top_point\"></div>\n          <div class=\"bottom_point\"></div>\n          <div class=\"left_point\"></div>\n          <div class=\"right_point\"></div>\n        </div>\n        <div class=\"inner_circle\">\n          <div class=\"inner_filling\">\n            <span>N</span>\n            <span>E</span>\n            <span>S</span>\n            <span>W</span>\n            <div class=\"needle\">\n              <div class=\"top_needle\">\n                <div class=\"needle_inside\"></div>\n              </div>\n              <div class=\"bottom_needle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h2 class=\"not_north\">সাইটে ফিরে যেতে <a href=\"http://prozuktischool.com\">এখানে</a> ক্লিক করুন।</h2>\n  </div>\n</body>\n\n</html>\n","source":"404.html","raw":"---\nlayout: false\n---\n\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>প্রযুক্তি স্কুল | ৪০৪</title>\n  <style media=\"screen\">\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Open Sans Condensed', sans-serif;\n      background: #E2E1DC;\n      min-width: 150px;\n    }\n\n    a {\n      text-decoration: none;\n      color: #7cb342;\n    }\n\n    .circle_filling,\n    .outside_circle .outside_filling,\n    .inner_circle .inner_filling {\n      border-radius: 50%;\n      position: absolute;\n      background: #FFF;\n      width: 95%;\n      padding-bottom: 95%;\n      top: 2.5%;\n      left: 2.5%;\n    }\n\n    .compass_container {\n      position: relative;\n      width: 150px;\n      height: 150px;\n      margin: 20px 0;\n    }\n\n    .outside_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 100%;\n      padding-bottom: 100%;\n      top: 0;\n      left: 0;\n    }\n\n    .inner_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 80%;\n      padding-bottom: 80%;\n      top: 10%;\n      left: 10%;\n    }\n\n    .inner_circle .inner_filling {\n      background: #F6D436;\n    }\n\n    .top_point {\n      width: 5%;\n      height: 0;\n      padding: 7.5% 0 0 5%;\n      overflow: hidden;\n      position: absolute;\n      top: 0;\n      left: 45%;\n    }\n\n    .top_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-top: 50px solid #462B17;\n    }\n\n    .bottom_point {\n      width: 5%;\n      height: 0;\n      padding: 0 0 7.5% 5%;\n      overflow: hidden;\n      position: absolute;\n      bottom: 0;\n      left: 45%;\n    }\n\n    .bottom_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: 0 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-bottom: 50px solid #462B17;\n    }\n\n    .left_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 0 5% 7.5%;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n    }\n\n    .left_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-left: 50px solid #462B17;\n    }\n\n    .right_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 2.5% 5% 0;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n      right: 0;\n    }\n\n    .right_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px -50px 0 0;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-right: 50px solid #462B17;\n    }\n\n    .top_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      bottom: 57px;\n    }\n\n    .top_needle .needle_inside {\n      width: 0;\n      height: 0;\n      border-left: 5px solid transparent;\n      border-right: 5px solid transparent;\n      border-top: 60px solid #F87A6A;\n      position: absolute;\n      bottom: 15px;\n      right: -5px;\n    }\n\n    .bottom_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      top: 57px;\n    }\n\n    .needle {\n      width: 100%;\n      height: 100%;\n      -webkit-animation: search linear 2s infinite alternate;\n      animation: search linear 2s infinite alternate;\n      -webkit-transform-origin: center center;\n      transform-origin: center center;\n      position: absolute;\n    }\n\n    .inner_filling span {\n      font-weight: bold;\n      position: absolute;\n      font-size: 14px;\n    }\n\n    .inner_filling span:nth-child(1) {\n      top: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(2) {\n      right: 5px;\n      top: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(3) {\n      bottom: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(4) {\n      left: 5px;\n      top: calc(50% - 5px);\n    }\n\n    @-webkit-keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    @keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    .container {\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .error_404 {\n      text-align: center;\n    }\n\n    .error_404 h1 {\n      font-size: 24px;\n    }\n\n    .error_404 h2 {\n      font-size: 16px;\n      display: inline-block;\n      background: red;\n      padding: 4px 10px 0 10px;\n      border-radius: 6px;\n      color: #fff;\n      margin-bottom: 20px;\n    }\n\n    .not_north {\n      position: relative;\n      top: 0px;\n      text-align: center;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"error_404\">\n      <h2>৪০৪ | মাইনকার চিপা</h2>\n      <h1>মনে হচ্ছে ভুল করে আপনি মাইনকার চিপায় চলে এসেছেন।</h1>\n    </div>\n    <div class=\"compass_container\">\n      <div class=\"outside_circle\">\n        <div class=\"center\"></div>\n        <div class=\"outside_filling\">\n          <div class=\"top_point\"></div>\n          <div class=\"bottom_point\"></div>\n          <div class=\"left_point\"></div>\n          <div class=\"right_point\"></div>\n        </div>\n        <div class=\"inner_circle\">\n          <div class=\"inner_filling\">\n            <span>N</span>\n            <span>E</span>\n            <span>S</span>\n            <span>W</span>\n            <div class=\"needle\">\n              <div class=\"top_needle\">\n                <div class=\"needle_inside\"></div>\n              </div>\n              <div class=\"bottom_needle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h2 class=\"not_north\">সাইটে ফিরে যেতে <a href=\"http://prozuktischool.com\">এখানে</a> ক্লিক করুন।</h2>\n  </div>\n</body>\n\n</html>\n","date":"2018-11-20T10:49:13.766Z","updated":"2018-11-20T10:49:13.766Z","path":"404.html","title":"","comments":1,"_id":"cjoqo6ov20000gca27za1wqbo","content":"\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>প্রযুক্তি স্কুল | ৪০৪</title>\n  <style media=\"screen\">\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Open Sans Condensed', sans-serif;\n      background: #E2E1DC;\n      min-width: 150px;\n    }\n\n    a {\n      text-decoration: none;\n      color: #7cb342;\n    }\n\n    .circle_filling,\n    .outside_circle .outside_filling,\n    .inner_circle .inner_filling {\n      border-radius: 50%;\n      position: absolute;\n      background: #FFF;\n      width: 95%;\n      padding-bottom: 95%;\n      top: 2.5%;\n      left: 2.5%;\n    }\n\n    .compass_container {\n      position: relative;\n      width: 150px;\n      height: 150px;\n      margin: 20px 0;\n    }\n\n    .outside_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 100%;\n      padding-bottom: 100%;\n      top: 0;\n      left: 0;\n    }\n\n    .inner_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 80%;\n      padding-bottom: 80%;\n      top: 10%;\n      left: 10%;\n    }\n\n    .inner_circle .inner_filling {\n      background: #F6D436;\n    }\n\n    .top_point {\n      width: 5%;\n      height: 0;\n      padding: 7.5% 0 0 5%;\n      overflow: hidden;\n      position: absolute;\n      top: 0;\n      left: 45%;\n    }\n\n    .top_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-top: 50px solid #462B17;\n    }\n\n    .bottom_point {\n      width: 5%;\n      height: 0;\n      padding: 0 0 7.5% 5%;\n      overflow: hidden;\n      position: absolute;\n      bottom: 0;\n      left: 45%;\n    }\n\n    .bottom_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: 0 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-bottom: 50px solid #462B17;\n    }\n\n    .left_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 0 5% 7.5%;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n    }\n\n    .left_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-left: 50px solid #462B17;\n    }\n\n    .right_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 2.5% 5% 0;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n      right: 0;\n    }\n\n    .right_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px -50px 0 0;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-right: 50px solid #462B17;\n    }\n\n    .top_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      bottom: 57px;\n    }\n\n    .top_needle .needle_inside {\n      width: 0;\n      height: 0;\n      border-left: 5px solid transparent;\n      border-right: 5px solid transparent;\n      border-top: 60px solid #F87A6A;\n      position: absolute;\n      bottom: 15px;\n      right: -5px;\n    }\n\n    .bottom_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      top: 57px;\n    }\n\n    .needle {\n      width: 100%;\n      height: 100%;\n      -webkit-animation: search linear 2s infinite alternate;\n      animation: search linear 2s infinite alternate;\n      -webkit-transform-origin: center center;\n      transform-origin: center center;\n      position: absolute;\n    }\n\n    .inner_filling span {\n      font-weight: bold;\n      position: absolute;\n      font-size: 14px;\n    }\n\n    .inner_filling span:nth-child(1) {\n      top: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(2) {\n      right: 5px;\n      top: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(3) {\n      bottom: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(4) {\n      left: 5px;\n      top: calc(50% - 5px);\n    }\n\n    @-webkit-keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    @keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    .container {\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .error_404 {\n      text-align: center;\n    }\n\n    .error_404 h1 {\n      font-size: 24px;\n    }\n\n    .error_404 h2 {\n      font-size: 16px;\n      display: inline-block;\n      background: red;\n      padding: 4px 10px 0 10px;\n      border-radius: 6px;\n      color: #fff;\n      margin-bottom: 20px;\n    }\n\n    .not_north {\n      position: relative;\n      top: 0px;\n      text-align: center;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"error_404\">\n      <h2>৪০৪ | মাইনকার চিপা</h2>\n      <h1>মনে হচ্ছে ভুল করে আপনি মাইনকার চিপায় চলে এসেছেন।</h1>\n    </div>\n    <div class=\"compass_container\">\n      <div class=\"outside_circle\">\n        <div class=\"center\"></div>\n        <div class=\"outside_filling\">\n          <div class=\"top_point\"></div>\n          <div class=\"bottom_point\"></div>\n          <div class=\"left_point\"></div>\n          <div class=\"right_point\"></div>\n        </div>\n        <div class=\"inner_circle\">\n          <div class=\"inner_filling\">\n            <span>N</span>\n            <span>E</span>\n            <span>S</span>\n            <span>W</span>\n            <div class=\"needle\">\n              <div class=\"top_needle\">\n                <div class=\"needle_inside\"></div>\n              </div>\n              <div class=\"bottom_needle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h2 class=\"not_north\">সাইটে ফিরে যেতে <a href=\"http://prozuktischool.com\">এখানে</a> ক্লিক করুন।</h2>\n  </div>\n</body>\n\n</html>\n","site":{"data":{}},"excerpt":"","more":"\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <title>প্রযুক্তি স্কুল | ৪০৪</title>\n  <style media=\"screen\">\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Open Sans Condensed', sans-serif;\n      background: #E2E1DC;\n      min-width: 150px;\n    }\n\n    a {\n      text-decoration: none;\n      color: #7cb342;\n    }\n\n    .circle_filling,\n    .outside_circle .outside_filling,\n    .inner_circle .inner_filling {\n      border-radius: 50%;\n      position: absolute;\n      background: #FFF;\n      width: 95%;\n      padding-bottom: 95%;\n      top: 2.5%;\n      left: 2.5%;\n    }\n\n    .compass_container {\n      position: relative;\n      width: 150px;\n      height: 150px;\n      margin: 20px 0;\n    }\n\n    .outside_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 100%;\n      padding-bottom: 100%;\n      top: 0;\n      left: 0;\n    }\n\n    .inner_circle {\n      border-radius: 50%;\n      position: absolute;\n      background: #462B17;\n      width: 80%;\n      padding-bottom: 80%;\n      top: 10%;\n      left: 10%;\n    }\n\n    .inner_circle .inner_filling {\n      background: #F6D436;\n    }\n\n    .top_point {\n      width: 5%;\n      height: 0;\n      padding: 7.5% 0 0 5%;\n      overflow: hidden;\n      position: absolute;\n      top: 0;\n      left: 45%;\n    }\n\n    .top_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-top: 50px solid #462B17;\n    }\n\n    .bottom_point {\n      width: 5%;\n      height: 0;\n      padding: 0 0 7.5% 5%;\n      overflow: hidden;\n      position: absolute;\n      bottom: 0;\n      left: 45%;\n    }\n\n    .bottom_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: 0 0 0 -50px;\n      border-left: 50px solid transparent;\n      border-right: 50px solid transparent;\n      border-bottom: 50px solid #462B17;\n    }\n\n    .left_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 0 5% 7.5%;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n    }\n\n    .left_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px 0 0 -50px;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-left: 50px solid #462B17;\n    }\n\n    .right_point {\n      width: 5%;\n      height: 0;\n      padding: 5% 2.5% 5% 0;\n      overflow: hidden;\n      position: absolute;\n      top: 45%;\n      right: 0;\n    }\n\n    .right_point:after {\n      content: \"\";\n      display: block;\n      width: 0;\n      height: 0;\n      margin: -50px -50px 0 0;\n      border-top: 50px solid transparent;\n      border-bottom: 50px solid transparent;\n      border-right: 50px solid #462B17;\n    }\n\n    .top_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      bottom: 57px;\n    }\n\n    .top_needle .needle_inside {\n      width: 0;\n      height: 0;\n      border-left: 5px solid transparent;\n      border-right: 5px solid transparent;\n      border-top: 60px solid #F87A6A;\n      position: absolute;\n      bottom: 15px;\n      right: -5px;\n    }\n\n    .bottom_needle {\n      width: 0;\n      -webkit-transform: rotate(180deg);\n      transform: rotate(180deg);\n      height: 0;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-bottom: 75px solid #462B17;\n      position: absolute;\n      left: 49px;\n      top: 57px;\n    }\n\n    .needle {\n      width: 100%;\n      height: 100%;\n      -webkit-animation: search linear 2s infinite alternate;\n      animation: search linear 2s infinite alternate;\n      -webkit-transform-origin: center center;\n      transform-origin: center center;\n      position: absolute;\n    }\n\n    .inner_filling span {\n      font-weight: bold;\n      position: absolute;\n      font-size: 14px;\n    }\n\n    .inner_filling span:nth-child(1) {\n      top: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(2) {\n      right: 5px;\n      top: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(3) {\n      bottom: 5px;\n      left: calc(50% - 5px);\n    }\n\n    .inner_filling span:nth-child(4) {\n      left: 5px;\n      top: calc(50% - 5px);\n    }\n\n    @-webkit-keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    @keyframes search {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n\n      50% {\n        -webkit-transform: rotate(80deg);\n        transform: rotate(80deg);\n      }\n\n      100% {\n        -webkit-transform: rotate(-180deg);\n        transform: rotate(-180deg);\n      }\n    }\n\n    .container {\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .error_404 {\n      text-align: center;\n    }\n\n    .error_404 h1 {\n      font-size: 24px;\n    }\n\n    .error_404 h2 {\n      font-size: 16px;\n      display: inline-block;\n      background: red;\n      padding: 4px 10px 0 10px;\n      border-radius: 6px;\n      color: #fff;\n      margin-bottom: 20px;\n    }\n\n    .not_north {\n      position: relative;\n      top: 0px;\n      text-align: center;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"error_404\">\n      <h2>৪০৪ | মাইনকার চিপা</h2>\n      <h1>মনে হচ্ছে ভুল করে আপনি মাইনকার চিপায় চলে এসেছেন।</h1>\n    </div>\n    <div class=\"compass_container\">\n      <div class=\"outside_circle\">\n        <div class=\"center\"></div>\n        <div class=\"outside_filling\">\n          <div class=\"top_point\"></div>\n          <div class=\"bottom_point\"></div>\n          <div class=\"left_point\"></div>\n          <div class=\"right_point\"></div>\n        </div>\n        <div class=\"inner_circle\">\n          <div class=\"inner_filling\">\n            <span>N</span>\n            <span>E</span>\n            <span>S</span>\n            <span>W</span>\n            <div class=\"needle\">\n              <div class=\"top_needle\">\n                <div class=\"needle_inside\"></div>\n              </div>\n              <div class=\"bottom_needle\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h2 class=\"not_north\">সাইটে ফিরে যেতে <a href=\"http://prozuktischool.com\">এখানে</a> ক্লিক করুন।</h2>\n  </div>\n</body>\n\n</html>\n"}],"Post":[{"title":"গিট ও গিটহাব -  গিটহাব-এ (স্ট্যাটিক) ওয়েবসাইট হোস্ট","date":"2018-04-05T03:39:48.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"আমার মতো যারা HTML, CSS, JavaScript কিংবা ReactJS শিখছেন, হয়তো দুয়েকটি প্রজেক্টও করেছেন; কিন্তু টাকা কিংবা ডলারের অভাব অথবা না জানার কারণে হোস্ট করতে পারছেন না - তাদের জন্যই আমার আজকের লেখা। এই টিউটোরিয়ালটিতে আমরা দেখার চেষ্টা করবো কীভাবে গিটহাব ব্যবহার করে যেকোনো স্ট্যাটিক ওয়েবসাইট অর্থাৎ HTML, CSS ও JavaScript এ বানানো সাইট এমনকি ReactJS অ্যাপও হোস্ট করা যায়।\n\nযা কিছু আপনার (ইন্সটল থাকা) লাগবে:\n\n- Git ও Git ব্যবহারের বেসিক ধারণা\n- GitHub অ্যাকাউন্ট\n- NodeJS (React অ্যাপ হোস্ট করার জন্য)\n\n### সাধারণ স্ট্যাটিক সাইট হোস্ট করা\n\nআপনার যদি গিটহাব অ্যাকাউন্ট থাকে তবে লগইন করুন, আর না থাকলে একটি নতুন একাউন্ট তৈরি করে নিন। তারপর গিটহাব সাইটের মেন্যুতে থাকা <span class=\"highlight-text\">+</span> চিহ্নতে ক্লিক করে একটি নতুন রিপোজিটরি বানিয়ে নিন। রিপোজিটরিটি আপনার কম্পিউটারে ডাউনলোড বা ক্লোন করে নিন। এবার কমান্ড লাইনের এইমাত্র ক্লোন করা ফোল্ডারটিতে যান। <span class=\"highlight-text\">git status</span> কমান্ডটির মাধ্যমে সবকিছু ঠিক আছে কিনা চেক করুন।\n\nএবার <span class=\"highlight-text\">gh-pages</span> নামে নতুন একটি ব্রাঞ্চ তৈরি করার জন্য নিচের কমান্ডটি রান করান ($ সাইন কমান্ডের অংশ না):\n\n<pre><code class=\"language-bash\">$ git checkout -b gh-pages</code></pre>\n\nব্রাঞ্চ তৈরি হয়ে গেলে আপনার বানানো সাইটের দরকারি সব ফাইল কপি করে গিট থেকে ক্লোন করা ফোল্ডারটতে পেস্ট করুন। <span class=\"highlight-text\">index.html</span> ফাইলটি যেনো গিট ফোল্ডারটির ভেতরেই থাকে। তারপর নিচের কমান্ডগুলো একে একে রান করান:\n\n<pre><code class=\"language-bash\">$ git add .\n$ git commit -m \"Added site to GitHub pages\"\n$ git push origin gh-pages</code></pre>\n\nবিশ্বাস করুন আর নাইবা করুন। আপনার সাইট কিন্তু লাইভ অর্থাৎ দুনিয়াবাসীর দেখার জন্য উন্মুক্ত। সাইটের লিংকটি পেতে আপনার গিটহাব রিপোজিটরিটি ব্রাউজারে ওপেন করে তার সেটিংস অপশানটিতে ক্লিক করুন কিংবা নিচের ঠিকানাটি আপনার উপযুক্ত করে বদলিয়ে ব্রাউজারে ওপেন করুন।\n\n<pre><code class=\"language-javascript\">https://username.github.io/repo-name</code></pre>\n\n\nএখানে <span class=\"highlight-text\">username</span> এর জায়গায় আপনার গিটহাব ইউজারনেইম এবং <span class=\"highlight-text\">repo-name</span> এর জায়গায় আপনার রিপোজিটরিটির নাম দিন।\n\n### ReactJS সাইট হোস্ট করা\nReactJS হোস্ট করার জন্যও গিটহাবের একটি রিপোজিটরি এবং আপনার কম্পিউটারে তা ক্লোন করা থাকতে হবে। এবার আপনার প্রিয় কোড এডিটরে রিয়েক্ট প্রজেক্টটি ওপেন করুন। প্রজেক্টের <span class=\"highlight-text\">package.json</span> ফাইলের <span class=\"highlight-text\">scripts</span> অংশে নিচের লাইন দুটি যোগ করুন:\n\n<pre><code class=\"language-bash\">\"predeploy\": \"npm run build\",\n\"deploy\": \"gh-pages -d build\"</code></pre>\n\nএকই ফাইলের শেষ <span class=\"highlight-text\">}</span>-টির আগে নিচের লাইনটি যোগ করুন:\n\n<pre><code class=\"language-json\">\"homepage\": \"http://username.github.io/repo-name\"</code></pre>\n\n<span class=\"highlight-text\">package.json</span> ফাইলটি অনেকটা এরকম দেখাবে:\n\n<pre><code class=\"language-json\">{\n  \"name\": \"my-awesome-website\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"^16.3.0\",\n    \"react-dom\": \"^16.3.0\",\n    \"react-scripts\": \"1.1.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  },\n  \"homepage\": \"http://sh4hids.github.io/my-awesome-website\"\n}</code></pre>\n\nএবার গিটহাব থেকে ক্লোন করা ফোল্ডারটিতে আপনার রিয়েক্ট প্রজেক্টের `README.md` ছাড়া বাকি সবগুলো ফাইল কপি করে পেস্ট করুন। পেস্ট করা হলে কমান্ড লাইন থেকে ফোল্ডারটিতে যান এবং নিচের কমান্ডগুলো একে একে রান করান:\n\n<pre><code class=\"language-bash\">$ npm install\n$ npm install -D gh-pages\n$ npm run deploy</code></pre>\n\nসবকিছু ঠিক থাকলে সাইটটি হোস্ট হয়ে যাওয়ার কথা। সাইটটিতে ভিজিট করার জন্য উপরে দেখানো পদ্ধতি অনুসরণ করুন। নির্দেশনাগুলোর মধ্যে কোনোটি বুঝতে অসুবিধা হলে মন্তব্যের ঘরে জানাতে পারেন। ইনশা আল্লাহ সর্বাত্মক সাহায্যের চেষ্টা করবো।\n","source":"_posts/hosting-website-and-react-app-on-github.md","raw":"---\ntitle: গিট ও গিটহাব -  গিটহাব-এ (স্ট্যাটিক) ওয়েবসাইট হোস্ট\ndate: 2018-04-05 09:39:48\nauthor: শহীদুল ইসলাম মজুমদার\ntags:\n- ওয়েব ডেভেলপমেন্ট\n- html\n- reactjs\n- github\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nআমার মতো যারা HTML, CSS, JavaScript কিংবা ReactJS শিখছেন, হয়তো দুয়েকটি প্রজেক্টও করেছেন; কিন্তু টাকা কিংবা ডলারের অভাব অথবা না জানার কারণে হোস্ট করতে পারছেন না - তাদের জন্যই আমার আজকের লেখা। এই টিউটোরিয়ালটিতে আমরা দেখার চেষ্টা করবো কীভাবে গিটহাব ব্যবহার করে যেকোনো স্ট্যাটিক ওয়েবসাইট অর্থাৎ HTML, CSS ও JavaScript এ বানানো সাইট এমনকি ReactJS অ্যাপও হোস্ট করা যায়।\n\nযা কিছু আপনার (ইন্সটল থাকা) লাগবে:\n\n- Git ও Git ব্যবহারের বেসিক ধারণা\n- GitHub অ্যাকাউন্ট\n- NodeJS (React অ্যাপ হোস্ট করার জন্য)\n\n### সাধারণ স্ট্যাটিক সাইট হোস্ট করা\n\nআপনার যদি গিটহাব অ্যাকাউন্ট থাকে তবে লগইন করুন, আর না থাকলে একটি নতুন একাউন্ট তৈরি করে নিন। তারপর গিটহাব সাইটের মেন্যুতে থাকা <span class=\"highlight-text\">+</span> চিহ্নতে ক্লিক করে একটি নতুন রিপোজিটরি বানিয়ে নিন। রিপোজিটরিটি আপনার কম্পিউটারে ডাউনলোড বা ক্লোন করে নিন। এবার কমান্ড লাইনের এইমাত্র ক্লোন করা ফোল্ডারটিতে যান। <span class=\"highlight-text\">git status</span> কমান্ডটির মাধ্যমে সবকিছু ঠিক আছে কিনা চেক করুন।\n\nএবার <span class=\"highlight-text\">gh-pages</span> নামে নতুন একটি ব্রাঞ্চ তৈরি করার জন্য নিচের কমান্ডটি রান করান ($ সাইন কমান্ডের অংশ না):\n\n<pre><code class=\"language-bash\">$ git checkout -b gh-pages</code></pre>\n\nব্রাঞ্চ তৈরি হয়ে গেলে আপনার বানানো সাইটের দরকারি সব ফাইল কপি করে গিট থেকে ক্লোন করা ফোল্ডারটতে পেস্ট করুন। <span class=\"highlight-text\">index.html</span> ফাইলটি যেনো গিট ফোল্ডারটির ভেতরেই থাকে। তারপর নিচের কমান্ডগুলো একে একে রান করান:\n\n<pre><code class=\"language-bash\">$ git add .\n$ git commit -m \"Added site to GitHub pages\"\n$ git push origin gh-pages</code></pre>\n\nবিশ্বাস করুন আর নাইবা করুন। আপনার সাইট কিন্তু লাইভ অর্থাৎ দুনিয়াবাসীর দেখার জন্য উন্মুক্ত। সাইটের লিংকটি পেতে আপনার গিটহাব রিপোজিটরিটি ব্রাউজারে ওপেন করে তার সেটিংস অপশানটিতে ক্লিক করুন কিংবা নিচের ঠিকানাটি আপনার উপযুক্ত করে বদলিয়ে ব্রাউজারে ওপেন করুন।\n\n<pre><code class=\"language-javascript\">https://username.github.io/repo-name</code></pre>\n\n\nএখানে <span class=\"highlight-text\">username</span> এর জায়গায় আপনার গিটহাব ইউজারনেইম এবং <span class=\"highlight-text\">repo-name</span> এর জায়গায় আপনার রিপোজিটরিটির নাম দিন।\n\n### ReactJS সাইট হোস্ট করা\nReactJS হোস্ট করার জন্যও গিটহাবের একটি রিপোজিটরি এবং আপনার কম্পিউটারে তা ক্লোন করা থাকতে হবে। এবার আপনার প্রিয় কোড এডিটরে রিয়েক্ট প্রজেক্টটি ওপেন করুন। প্রজেক্টের <span class=\"highlight-text\">package.json</span> ফাইলের <span class=\"highlight-text\">scripts</span> অংশে নিচের লাইন দুটি যোগ করুন:\n\n<pre><code class=\"language-bash\">\"predeploy\": \"npm run build\",\n\"deploy\": \"gh-pages -d build\"</code></pre>\n\nএকই ফাইলের শেষ <span class=\"highlight-text\">}</span>-টির আগে নিচের লাইনটি যোগ করুন:\n\n<pre><code class=\"language-json\">\"homepage\": \"http://username.github.io/repo-name\"</code></pre>\n\n<span class=\"highlight-text\">package.json</span> ফাইলটি অনেকটা এরকম দেখাবে:\n\n<pre><code class=\"language-json\">{\n  \"name\": \"my-awesome-website\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"^16.3.0\",\n    \"react-dom\": \"^16.3.0\",\n    \"react-scripts\": \"1.1.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  },\n  \"homepage\": \"http://sh4hids.github.io/my-awesome-website\"\n}</code></pre>\n\nএবার গিটহাব থেকে ক্লোন করা ফোল্ডারটিতে আপনার রিয়েক্ট প্রজেক্টের `README.md` ছাড়া বাকি সবগুলো ফাইল কপি করে পেস্ট করুন। পেস্ট করা হলে কমান্ড লাইন থেকে ফোল্ডারটিতে যান এবং নিচের কমান্ডগুলো একে একে রান করান:\n\n<pre><code class=\"language-bash\">$ npm install\n$ npm install -D gh-pages\n$ npm run deploy</code></pre>\n\nসবকিছু ঠিক থাকলে সাইটটি হোস্ট হয়ে যাওয়ার কথা। সাইটটিতে ভিজিট করার জন্য উপরে দেখানো পদ্ধতি অনুসরণ করুন। নির্দেশনাগুলোর মধ্যে কোনোটি বুঝতে অসুবিধা হলে মন্তব্যের ঘরে জানাতে পারেন। ইনশা আল্লাহ সর্বাত্মক সাহায্যের চেষ্টা করবো।\n","slug":"hosting-website-and-react-app-on-github","published":1,"updated":"2018-11-20T03:03:13.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6ovj0001gca26l64pb7b","content":"<p>আমার মতো যারা HTML, CSS, JavaScript কিংবা ReactJS শিখছেন, হয়তো দুয়েকটি প্রজেক্টও করেছেন; কিন্তু টাকা কিংবা ডলারের অভাব অথবা না জানার কারণে হোস্ট করতে পারছেন না - তাদের জন্যই আমার আজকের লেখা। এই টিউটোরিয়ালটিতে আমরা দেখার চেষ্টা করবো কীভাবে গিটহাব ব্যবহার করে যেকোনো স্ট্যাটিক ওয়েবসাইট অর্থাৎ HTML, CSS ও JavaScript এ বানানো সাইট এমনকি ReactJS অ্যাপও হোস্ট করা যায়।</p>\n<p>যা কিছু আপনার (ইন্সটল থাকা) লাগবে:</p>\n<ul>\n<li>Git ও Git ব্যবহারের বেসিক ধারণা</li>\n<li>GitHub অ্যাকাউন্ট</li>\n<li>NodeJS (React অ্যাপ হোস্ট করার জন্য)</li>\n</ul>\n<h3 id=\"সাধারণ-স্ট্যাটিক-সাইট-হোস্ট-করা\"><a href=\"#সাধারণ-স্ট্যাটিক-সাইট-হোস্ট-করা\" class=\"headerlink\" title=\"সাধারণ স্ট্যাটিক সাইট হোস্ট করা\"></a>সাধারণ স্ট্যাটিক সাইট হোস্ট করা</h3><p>আপনার যদি গিটহাব অ্যাকাউন্ট থাকে তবে লগইন করুন, আর না থাকলে একটি নতুন একাউন্ট তৈরি করে নিন। তারপর গিটহাব সাইটের মেন্যুতে থাকা <span class=\"highlight-text\">+</span> চিহ্নতে ক্লিক করে একটি নতুন রিপোজিটরি বানিয়ে নিন। রিপোজিটরিটি আপনার কম্পিউটারে ডাউনলোড বা ক্লোন করে নিন। এবার কমান্ড লাইনের এইমাত্র ক্লোন করা ফোল্ডারটিতে যান। <span class=\"highlight-text\">git status</span> কমান্ডটির মাধ্যমে সবকিছু ঠিক আছে কিনা চেক করুন।</p>\n<p>এবার <span class=\"highlight-text\">gh-pages</span> নামে নতুন একটি ব্রাঞ্চ তৈরি করার জন্য নিচের কমান্ডটি রান করান ($ সাইন কমান্ডের অংশ না):</p>\n<pre><code class=\"language-bash\">$ git checkout -b gh-pages</code></pre>\n\n<p>ব্রাঞ্চ তৈরি হয়ে গেলে আপনার বানানো সাইটের দরকারি সব ফাইল কপি করে গিট থেকে ক্লোন করা ফোল্ডারটতে পেস্ট করুন। <span class=\"highlight-text\">index.html</span> ফাইলটি যেনো গিট ফোল্ডারটির ভেতরেই থাকে। তারপর নিচের কমান্ডগুলো একে একে রান করান:</p>\n<pre><code class=\"language-bash\">$ git add .\n$ git commit -m \"Added site to GitHub pages\"\n$ git push origin gh-pages</code></pre>\n\n<p>বিশ্বাস করুন আর নাইবা করুন। আপনার সাইট কিন্তু লাইভ অর্থাৎ দুনিয়াবাসীর দেখার জন্য উন্মুক্ত। সাইটের লিংকটি পেতে আপনার গিটহাব রিপোজিটরিটি ব্রাউজারে ওপেন করে তার সেটিংস অপশানটিতে ক্লিক করুন কিংবা নিচের ঠিকানাটি আপনার উপযুক্ত করে বদলিয়ে ব্রাউজারে ওপেন করুন।</p>\n<pre><code class=\"language-javascript\">https://username.github.io/repo-name</code></pre>\n\n\n<p>এখানে <span class=\"highlight-text\">username</span> এর জায়গায় আপনার গিটহাব ইউজারনেইম এবং <span class=\"highlight-text\">repo-name</span> এর জায়গায় আপনার রিপোজিটরিটির নাম দিন।</p>\n<h3 id=\"ReactJS-সাইট-হোস্ট-করা\"><a href=\"#ReactJS-সাইট-হোস্ট-করা\" class=\"headerlink\" title=\"ReactJS সাইট হোস্ট করা\"></a>ReactJS সাইট হোস্ট করা</h3><p>ReactJS হোস্ট করার জন্যও গিটহাবের একটি রিপোজিটরি এবং আপনার কম্পিউটারে তা ক্লোন করা থাকতে হবে। এবার আপনার প্রিয় কোড এডিটরে রিয়েক্ট প্রজেক্টটি ওপেন করুন। প্রজেক্টের <span class=\"highlight-text\">package.json</span> ফাইলের <span class=\"highlight-text\">scripts</span> অংশে নিচের লাইন দুটি যোগ করুন:</p>\n<pre><code class=\"language-bash\">\"predeploy\": \"npm run build\",\n\"deploy\": \"gh-pages -d build\"</code></pre>\n\n<p>একই ফাইলের শেষ <span class=\"highlight-text\">}</span>-টির আগে নিচের লাইনটি যোগ করুন:</p>\n<pre><code class=\"language-json\">\"homepage\": \"http://username.github.io/repo-name\"</code></pre>\n\n<p><span class=\"highlight-text\">package.json</span> ফাইলটি অনেকটা এরকম দেখাবে:</p>\n<pre><code class=\"language-json\">{\n  \"name\": \"my-awesome-website\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"^16.3.0\",\n    \"react-dom\": \"^16.3.0\",\n    \"react-scripts\": \"1.1.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  },\n  \"homepage\": \"http://sh4hids.github.io/my-awesome-website\"\n}</code></pre>\n\n<p>এবার গিটহাব থেকে ক্লোন করা ফোল্ডারটিতে আপনার রিয়েক্ট প্রজেক্টের <code>README.md</code> ছাড়া বাকি সবগুলো ফাইল কপি করে পেস্ট করুন। পেস্ট করা হলে কমান্ড লাইন থেকে ফোল্ডারটিতে যান এবং নিচের কমান্ডগুলো একে একে রান করান:</p>\n<pre><code class=\"language-bash\">$ npm install\n$ npm install -D gh-pages\n$ npm run deploy</code></pre>\n\n<p>সবকিছু ঠিক থাকলে সাইটটি হোস্ট হয়ে যাওয়ার কথা। সাইটটিতে ভিজিট করার জন্য উপরে দেখানো পদ্ধতি অনুসরণ করুন। নির্দেশনাগুলোর মধ্যে কোনোটি বুঝতে অসুবিধা হলে মন্তব্যের ঘরে জানাতে পারেন। ইনশা আল্লাহ সর্বাত্মক সাহায্যের চেষ্টা করবো।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>আমার মতো যারা HTML, CSS, JavaScript কিংবা ReactJS শিখছেন, হয়তো দুয়েকটি প্রজেক্টও করেছেন; কিন্তু টাকা কিংবা ডলারের অভাব অথবা না জানার কারণে হোস্ট করতে পারছেন না - তাদের জন্যই আমার আজকের লেখা। এই টিউটোরিয়ালটিতে আমরা দেখার চেষ্টা করবো কীভাবে গিটহাব ব্যবহার করে যেকোনো স্ট্যাটিক ওয়েবসাইট অর্থাৎ HTML, CSS ও JavaScript এ বানানো সাইট এমনকি ReactJS অ্যাপও হোস্ট করা যায়।</p>\n<p>যা কিছু আপনার (ইন্সটল থাকা) লাগবে:</p>\n<ul>\n<li>Git ও Git ব্যবহারের বেসিক ধারণা</li>\n<li>GitHub অ্যাকাউন্ট</li>\n<li>NodeJS (React অ্যাপ হোস্ট করার জন্য)</li>\n</ul>\n<h3 id=\"সাধারণ-স্ট্যাটিক-সাইট-হোস্ট-করা\"><a href=\"#সাধারণ-স্ট্যাটিক-সাইট-হোস্ট-করা\" class=\"headerlink\" title=\"সাধারণ স্ট্যাটিক সাইট হোস্ট করা\"></a>সাধারণ স্ট্যাটিক সাইট হোস্ট করা</h3><p>আপনার যদি গিটহাব অ্যাকাউন্ট থাকে তবে লগইন করুন, আর না থাকলে একটি নতুন একাউন্ট তৈরি করে নিন। তারপর গিটহাব সাইটের মেন্যুতে থাকা <span class=\"highlight-text\">+</span> চিহ্নতে ক্লিক করে একটি নতুন রিপোজিটরি বানিয়ে নিন। রিপোজিটরিটি আপনার কম্পিউটারে ডাউনলোড বা ক্লোন করে নিন। এবার কমান্ড লাইনের এইমাত্র ক্লোন করা ফোল্ডারটিতে যান। <span class=\"highlight-text\">git status</span> কমান্ডটির মাধ্যমে সবকিছু ঠিক আছে কিনা চেক করুন।</p>\n<p>এবার <span class=\"highlight-text\">gh-pages</span> নামে নতুন একটি ব্রাঞ্চ তৈরি করার জন্য নিচের কমান্ডটি রান করান ($ সাইন কমান্ডের অংশ না):</p>\n<pre><code class=\"language-bash\">$ git checkout -b gh-pages</code></pre>\n\n<p>ব্রাঞ্চ তৈরি হয়ে গেলে আপনার বানানো সাইটের দরকারি সব ফাইল কপি করে গিট থেকে ক্লোন করা ফোল্ডারটতে পেস্ট করুন। <span class=\"highlight-text\">index.html</span> ফাইলটি যেনো গিট ফোল্ডারটির ভেতরেই থাকে। তারপর নিচের কমান্ডগুলো একে একে রান করান:</p>\n<pre><code class=\"language-bash\">$ git add .\n$ git commit -m \"Added site to GitHub pages\"\n$ git push origin gh-pages</code></pre>\n\n<p>বিশ্বাস করুন আর নাইবা করুন। আপনার সাইট কিন্তু লাইভ অর্থাৎ দুনিয়াবাসীর দেখার জন্য উন্মুক্ত। সাইটের লিংকটি পেতে আপনার গিটহাব রিপোজিটরিটি ব্রাউজারে ওপেন করে তার সেটিংস অপশানটিতে ক্লিক করুন কিংবা নিচের ঠিকানাটি আপনার উপযুক্ত করে বদলিয়ে ব্রাউজারে ওপেন করুন।</p>\n<pre><code class=\"language-javascript\">https://username.github.io/repo-name</code></pre>\n\n\n<p>এখানে <span class=\"highlight-text\">username</span> এর জায়গায় আপনার গিটহাব ইউজারনেইম এবং <span class=\"highlight-text\">repo-name</span> এর জায়গায় আপনার রিপোজিটরিটির নাম দিন।</p>\n<h3 id=\"ReactJS-সাইট-হোস্ট-করা\"><a href=\"#ReactJS-সাইট-হোস্ট-করা\" class=\"headerlink\" title=\"ReactJS সাইট হোস্ট করা\"></a>ReactJS সাইট হোস্ট করা</h3><p>ReactJS হোস্ট করার জন্যও গিটহাবের একটি রিপোজিটরি এবং আপনার কম্পিউটারে তা ক্লোন করা থাকতে হবে। এবার আপনার প্রিয় কোড এডিটরে রিয়েক্ট প্রজেক্টটি ওপেন করুন। প্রজেক্টের <span class=\"highlight-text\">package.json</span> ফাইলের <span class=\"highlight-text\">scripts</span> অংশে নিচের লাইন দুটি যোগ করুন:</p>\n<pre><code class=\"language-bash\">\"predeploy\": \"npm run build\",\n\"deploy\": \"gh-pages -d build\"</code></pre>\n\n<p>একই ফাইলের শেষ <span class=\"highlight-text\">}</span>-টির আগে নিচের লাইনটি যোগ করুন:</p>\n<pre><code class=\"language-json\">\"homepage\": \"http://username.github.io/repo-name\"</code></pre>\n\n<p><span class=\"highlight-text\">package.json</span> ফাইলটি অনেকটা এরকম দেখাবে:</p>\n<pre><code class=\"language-json\">{\n  \"name\": \"my-awesome-website\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"react\": \"^16.3.0\",\n    \"react-dom\": \"^16.3.0\",\n    \"react-scripts\": \"1.1.1\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test --env=jsdom\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  },\n  \"homepage\": \"http://sh4hids.github.io/my-awesome-website\"\n}</code></pre>\n\n<p>এবার গিটহাব থেকে ক্লোন করা ফোল্ডারটিতে আপনার রিয়েক্ট প্রজেক্টের <code>README.md</code> ছাড়া বাকি সবগুলো ফাইল কপি করে পেস্ট করুন। পেস্ট করা হলে কমান্ড লাইন থেকে ফোল্ডারটিতে যান এবং নিচের কমান্ডগুলো একে একে রান করান:</p>\n<pre><code class=\"language-bash\">$ npm install\n$ npm install -D gh-pages\n$ npm run deploy</code></pre>\n\n<p>সবকিছু ঠিক থাকলে সাইটটি হোস্ট হয়ে যাওয়ার কথা। সাইটটিতে ভিজিট করার জন্য উপরে দেখানো পদ্ধতি অনুসরণ করুন। নির্দেশনাগুলোর মধ্যে কোনোটি বুঝতে অসুবিধা হলে মন্তব্যের ঘরে জানাতে পারেন। ইনশা আল্লাহ সর্বাত্মক সাহায্যের চেষ্টা করবো।</p>\n"},{"title":"HTML ও CSS পরিচিতি - পর্ব ১ - সূচনা","date":"2017-03-09T02:00:00.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।\n\nএরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।\n\nআমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।\n\nগল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।\n\n### ইন্টারনেট\nইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।\n\n### ওয়েব\nWWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।\n\n### ওয়েবসাইট\nওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।\n\n### ব্রাউজার\nব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।\n\nযেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।\n\nAtom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।\n\nধন্যবাদ।\n","source":"_posts/html-css-intro-01.md","raw":"---\ntitle: HTML ও CSS পরিচিতি - পর্ব ১ - সূচনা\ndate: 2017-03-09 08:00:00\nauthor: শহীদুল ইসলাম মজুমদার\ntags:\n- ওয়েব ডেভেলপমেন্ট\n- html\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nতখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।\n\nএরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।\n\nআমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।\n\nগল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।\n\n### ইন্টারনেট\nইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।\n\n### ওয়েব\nWWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।\n\n### ওয়েবসাইট\nওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।\n\n### ব্রাউজার\nব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।\n\nযেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।\n\nAtom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।\n\nধন্যবাদ।\n","slug":"html-css-intro-01","published":1,"updated":"2018-11-20T03:03:13.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6ovp0002gca23ow8h6xs","content":"<p>তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।</p>\n<p>এরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।</p>\n<p>আমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।</p>\n<p>গল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।</p>\n<h3 id=\"ইন্টারনেট\"><a href=\"#ইন্টারনেট\" class=\"headerlink\" title=\"ইন্টারনেট\"></a>ইন্টারনেট</h3><p>ইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।</p>\n<h3 id=\"ওয়েব\"><a href=\"#ওয়েব\" class=\"headerlink\" title=\"ওয়েব\"></a>ওয়েব</h3><p>WWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।</p>\n<h3 id=\"ওয়েবসাইট\"><a href=\"#ওয়েবসাইট\" class=\"headerlink\" title=\"ওয়েবসাইট\"></a>ওয়েবসাইট</h3><p>ওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।</p>\n<h3 id=\"ব্রাউজার\"><a href=\"#ব্রাউজার\" class=\"headerlink\" title=\"ব্রাউজার\"></a>ব্রাউজার</h3><p>ব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।</p>\n<p>যেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।</p>\n<p>Atom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।</p>\n<p>ধন্যবাদ।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।</p>\n<p>এরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।</p>\n<p>আমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।</p>\n<p>গল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।</p>\n<h3 id=\"ইন্টারনেট\"><a href=\"#ইন্টারনেট\" class=\"headerlink\" title=\"ইন্টারনেট\"></a>ইন্টারনেট</h3><p>ইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।</p>\n<h3 id=\"ওয়েব\"><a href=\"#ওয়েব\" class=\"headerlink\" title=\"ওয়েব\"></a>ওয়েব</h3><p>WWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।</p>\n<h3 id=\"ওয়েবসাইট\"><a href=\"#ওয়েবসাইট\" class=\"headerlink\" title=\"ওয়েবসাইট\"></a>ওয়েবসাইট</h3><p>ওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।</p>\n<h3 id=\"ব্রাউজার\"><a href=\"#ব্রাউজার\" class=\"headerlink\" title=\"ব্রাউজার\"></a>ব্রাউজার</h3><p>ব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।</p>\n<p>যেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।</p>\n<p>Atom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।</p>\n<p>ধন্যবাদ।</p>\n"},{"title":"জাভাস্ক্রিপ্ট শিখি - পর্ব ০২ - Development Environment সেট আপ করা","date":"2018-11-21T04:18:48.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"\nআসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।\n\nগত পর্বে আমরা জেনেছিলাম জাভাস্ক্রিপ্ট সম্পর্কে কিছু মৌলিক তথ্য। এ পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।\n\n### উইন্ডোজ\n\n১। প্রথমেই [https://atom.io](https://atom.io) অথবা [https://code.visualstudio.com](https://code.visualstudio.com/) ওয়েব সাইটে গিয়ে Atom অথবা VS Code এর মধ্যে যে কোনো একটি টেক্সট এডিটর ডাউনলোড করে ইন্সটল করে নিন। ডেক্সটপ বা টাস্কবারে Atom এডিটরের একটি শটকার্ট তৈরি করুন যাতে পরবর্তীতে সহজে খুঁজে পেতে পারেন।\n\n২। এরপর [https://nodejs.org](https://nodejs.org) থেকে Node ডাউনলোড করে ইন্সটল করে নিন। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইন চালু করুন (প্রোগ্রামিং করার জন্য কমান্ড লাইন টুলের বেসিক জ্ঞান থাকাটা জরুরি। আশা করি নিজ উদ্যোগে কিছুটা শিখে নিবেন।)। কমান্ড লাইনে কোনো সফ্টওয়্যার চালানোর উপায় হলো সফ্টওয়্যারটির নাম লিখে `Enter` বাটনে প্রেস করা। কমান্ড লাইনে লিখুন:\n\n```bash\nnode -v\n```\n\nনিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।\n\n![nodejs installation check](https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/39eebc8b7396da59f3cbcc37b739169b37567beb/images/ps-node-windows.jpg)\n\n### লিনাক্স\n\nযেহেতু লিনাক্স চালাচ্ছেন তাই আমি ধরেই নিচ্ছি টার্মিনাল থেকে কীভাবে সফ্টওয়্যার ইন্সটল করা যায় তা আপনার জানা। আপনার লিনাক্স কম্পিউটারে নোড ইন্সটল করার জন্য নিচের ধাপগুলো অনুসরণ করুন:\n\n১। nvm (Node Version Manager) ইন্সটল করার জন্য নিচের কমান্ডটি রান করুন।\n\n```bash\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\n২। nvm ইন্সটল হয়েছে কিনা তা দেখার জন্য নিচের কমান্ডটি রান করুন।\n\n```bash\ncommand -v nvm\n```\n\nযদি `nvm: command not found` লেখাটি দেখায় তবে বুঝতে হবে nvm ঠিকভাবে ইন্সটল হয়নি। সমস্যাটি সমাধানের জন্য [এখানে](https://github.com/creationix/nvm) দেখুন।\n\n৩। নোডের সর্বশেষ সংস্করনটি ইন্সটল করার জন্য নিচের কমান্ডটি লিখে `Enter` দিন।\n\n```bash\nnvm install node\n```\n\n৪। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইনে লিখুন:\n\n```bash\nnode -v\n```\n\nনিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।\n\n![nodejs installation check](https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/e35a2d1e6edd5ccd10ba99710f262f30f1edf1e3/images/ps-node-linux.png)\n\n**বি: দ্র:** পরবর্তী টিউটোরিয়ালগুলোতে আমি কেবল লিনাক্স টার্মিনালের ছবি দিবো। দেখতে উইন্ডোজের সাথে না মিললেও আউটপুট এক হলেই চলবে।\n","source":"_posts/জাভাস্ক্রিপ্ট-শিখি-পর্ব-০২.md","raw":"---\ntitle: জাভাস্ক্রিপ্ট শিখি - পর্ব ০২ - Development Environment সেট আপ করা\ndate: 2018-11-21 10:18:48\nauthor: শহীদুল ইসলাম মজুমদার\ntags:\n- javascript\n- জাভাস্ক্রিপ্ট\n- প্রোগ্রামিং\ncategory: প্রোগ্রামিং\n---\n\nআসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।\n\nগত পর্বে আমরা জেনেছিলাম জাভাস্ক্রিপ্ট সম্পর্কে কিছু মৌলিক তথ্য। এ পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।\n\n### উইন্ডোজ\n\n১। প্রথমেই [https://atom.io](https://atom.io) অথবা [https://code.visualstudio.com](https://code.visualstudio.com/) ওয়েব সাইটে গিয়ে Atom অথবা VS Code এর মধ্যে যে কোনো একটি টেক্সট এডিটর ডাউনলোড করে ইন্সটল করে নিন। ডেক্সটপ বা টাস্কবারে Atom এডিটরের একটি শটকার্ট তৈরি করুন যাতে পরবর্তীতে সহজে খুঁজে পেতে পারেন।\n\n২। এরপর [https://nodejs.org](https://nodejs.org) থেকে Node ডাউনলোড করে ইন্সটল করে নিন। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইন চালু করুন (প্রোগ্রামিং করার জন্য কমান্ড লাইন টুলের বেসিক জ্ঞান থাকাটা জরুরি। আশা করি নিজ উদ্যোগে কিছুটা শিখে নিবেন।)। কমান্ড লাইনে কোনো সফ্টওয়্যার চালানোর উপায় হলো সফ্টওয়্যারটির নাম লিখে `Enter` বাটনে প্রেস করা। কমান্ড লাইনে লিখুন:\n\n```bash\nnode -v\n```\n\nনিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।\n\n![nodejs installation check](https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/39eebc8b7396da59f3cbcc37b739169b37567beb/images/ps-node-windows.jpg)\n\n### লিনাক্স\n\nযেহেতু লিনাক্স চালাচ্ছেন তাই আমি ধরেই নিচ্ছি টার্মিনাল থেকে কীভাবে সফ্টওয়্যার ইন্সটল করা যায় তা আপনার জানা। আপনার লিনাক্স কম্পিউটারে নোড ইন্সটল করার জন্য নিচের ধাপগুলো অনুসরণ করুন:\n\n১। nvm (Node Version Manager) ইন্সটল করার জন্য নিচের কমান্ডটি রান করুন।\n\n```bash\nwget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\n২। nvm ইন্সটল হয়েছে কিনা তা দেখার জন্য নিচের কমান্ডটি রান করুন।\n\n```bash\ncommand -v nvm\n```\n\nযদি `nvm: command not found` লেখাটি দেখায় তবে বুঝতে হবে nvm ঠিকভাবে ইন্সটল হয়নি। সমস্যাটি সমাধানের জন্য [এখানে](https://github.com/creationix/nvm) দেখুন।\n\n৩। নোডের সর্বশেষ সংস্করনটি ইন্সটল করার জন্য নিচের কমান্ডটি লিখে `Enter` দিন।\n\n```bash\nnvm install node\n```\n\n৪। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইনে লিখুন:\n\n```bash\nnode -v\n```\n\nনিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।\n\n![nodejs installation check](https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/e35a2d1e6edd5ccd10ba99710f262f30f1edf1e3/images/ps-node-linux.png)\n\n**বি: দ্র:** পরবর্তী টিউটোরিয়ালগুলোতে আমি কেবল লিনাক্স টার্মিনালের ছবি দিবো। দেখতে উইন্ডোজের সাথে না মিললেও আউটপুট এক হলেই চলবে।\n","slug":"জাভাস্ক্রিপ্ট-শিখি-পর্ব-০২","published":1,"updated":"2018-11-21T04:24:54.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6ovv0005gca25ft4wwzw","content":"<p>আসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।</p>\n<p>গত পর্বে আমরা জেনেছিলাম জাভাস্ক্রিপ্ট সম্পর্কে কিছু মৌলিক তথ্য। এ পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।</p>\n<h3 id=\"উইন্ডোজ\"><a href=\"#উইন্ডোজ\" class=\"headerlink\" title=\"উইন্ডোজ\"></a>উইন্ডোজ</h3><p>১। প্রথমেই <a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener\">https://atom.io</a> অথবা <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com</a> ওয়েব সাইটে গিয়ে Atom অথবা VS Code এর মধ্যে যে কোনো একটি টেক্সট এডিটর ডাউনলোড করে ইন্সটল করে নিন। ডেক্সটপ বা টাস্কবারে Atom এডিটরের একটি শটকার্ট তৈরি করুন যাতে পরবর্তীতে সহজে খুঁজে পেতে পারেন।</p>\n<p>২। এরপর <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a> থেকে Node ডাউনলোড করে ইন্সটল করে নিন। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইন চালু করুন (প্রোগ্রামিং করার জন্য কমান্ড লাইন টুলের বেসিক জ্ঞান থাকাটা জরুরি। আশা করি নিজ উদ্যোগে কিছুটা শিখে নিবেন।)। কমান্ড লাইনে কোনো সফ্টওয়্যার চালানোর উপায় হলো সফ্টওয়্যারটির নাম লিখে <code>Enter</code> বাটনে প্রেস করা। কমান্ড লাইনে লিখুন:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>নিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।</p>\n<p><img src=\"https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/39eebc8b7396da59f3cbcc37b739169b37567beb/images/ps-node-windows.jpg\" alt=\"nodejs installation check\"></p>\n<h3 id=\"লিনাক্স\"><a href=\"#লিনাক্স\" class=\"headerlink\" title=\"লিনাক্স\"></a>লিনাক্স</h3><p>যেহেতু লিনাক্স চালাচ্ছেন তাই আমি ধরেই নিচ্ছি টার্মিনাল থেকে কীভাবে সফ্টওয়্যার ইন্সটল করা যায় তা আপনার জানা। আপনার লিনাক্স কম্পিউটারে নোড ইন্সটল করার জন্য নিচের ধাপগুলো অনুসরণ করুন:</p>\n<p>১। nvm (Node Version Manager) ইন্সটল করার জন্য নিচের কমান্ডটি রান করুন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>২। nvm ইন্সটল হয়েছে কিনা তা দেখার জন্য নিচের কমান্ডটি রান করুন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">command</span> -v nvm</span><br></pre></td></tr></table></figure>\n<p>যদি <code>nvm: command not found</code> লেখাটি দেখায় তবে বুঝতে হবে nvm ঠিকভাবে ইন্সটল হয়নি। সমস্যাটি সমাধানের জন্য <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">এখানে</a> দেখুন।</p>\n<p>৩। নোডের সর্বশেষ সংস্করনটি ইন্সটল করার জন্য নিচের কমান্ডটি লিখে <code>Enter</code> দিন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install node</span><br></pre></td></tr></table></figure>\n<p>৪। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইনে লিখুন:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>নিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।</p>\n<p><img src=\"https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/e35a2d1e6edd5ccd10ba99710f262f30f1edf1e3/images/ps-node-linux.png\" alt=\"nodejs installation check\"></p>\n<p><strong>বি: দ্র:</strong> পরবর্তী টিউটোরিয়ালগুলোতে আমি কেবল লিনাক্স টার্মিনালের ছবি দিবো। দেখতে উইন্ডোজের সাথে না মিললেও আউটপুট এক হলেই চলবে।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>আসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।</p>\n<p>গত পর্বে আমরা জেনেছিলাম জাভাস্ক্রিপ্ট সম্পর্কে কিছু মৌলিক তথ্য। এ পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।</p>\n<h3 id=\"উইন্ডোজ\"><a href=\"#উইন্ডোজ\" class=\"headerlink\" title=\"উইন্ডোজ\"></a>উইন্ডোজ</h3><p>১। প্রথমেই <a href=\"https://atom.io\" target=\"_blank\" rel=\"noopener\">https://atom.io</a> অথবা <a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">https://code.visualstudio.com</a> ওয়েব সাইটে গিয়ে Atom অথবা VS Code এর মধ্যে যে কোনো একটি টেক্সট এডিটর ডাউনলোড করে ইন্সটল করে নিন। ডেক্সটপ বা টাস্কবারে Atom এডিটরের একটি শটকার্ট তৈরি করুন যাতে পরবর্তীতে সহজে খুঁজে পেতে পারেন।</p>\n<p>২। এরপর <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noopener\">https://nodejs.org</a> থেকে Node ডাউনলোড করে ইন্সটল করে নিন। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইন চালু করুন (প্রোগ্রামিং করার জন্য কমান্ড লাইন টুলের বেসিক জ্ঞান থাকাটা জরুরি। আশা করি নিজ উদ্যোগে কিছুটা শিখে নিবেন।)। কমান্ড লাইনে কোনো সফ্টওয়্যার চালানোর উপায় হলো সফ্টওয়্যারটির নাম লিখে <code>Enter</code> বাটনে প্রেস করা। কমান্ড লাইনে লিখুন:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>নিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।</p>\n<p><img src=\"https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/39eebc8b7396da59f3cbcc37b739169b37567beb/images/ps-node-windows.jpg\" alt=\"nodejs installation check\"></p>\n<h3 id=\"লিনাক্স\"><a href=\"#লিনাক্স\" class=\"headerlink\" title=\"লিনাক্স\"></a>লিনাক্স</h3><p>যেহেতু লিনাক্স চালাচ্ছেন তাই আমি ধরেই নিচ্ছি টার্মিনাল থেকে কীভাবে সফ্টওয়্যার ইন্সটল করা যায় তা আপনার জানা। আপনার লিনাক্স কম্পিউটারে নোড ইন্সটল করার জন্য নিচের ধাপগুলো অনুসরণ করুন:</p>\n<p>১। nvm (Node Version Manager) ইন্সটল করার জন্য নিচের কমান্ডটি রান করুন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure>\n<p>২। nvm ইন্সটল হয়েছে কিনা তা দেখার জন্য নিচের কমান্ডটি রান করুন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">command</span> -v nvm</span><br></pre></td></tr></table></figure>\n<p>যদি <code>nvm: command not found</code> লেখাটি দেখায় তবে বুঝতে হবে nvm ঠিকভাবে ইন্সটল হয়নি। সমস্যাটি সমাধানের জন্য <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">এখানে</a> দেখুন।</p>\n<p>৩। নোডের সর্বশেষ সংস্করনটি ইন্সটল করার জন্য নিচের কমান্ডটি লিখে <code>Enter</code> দিন।</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install node</span><br></pre></td></tr></table></figure>\n<p>৪। Node ঠিকভাবে ইন্সটল হয়েছে কিনা তা চেক করার জন্য কমান্ড লাইনে লিখুন:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<p>নিচের ছবির মতো কিছু একটা আসলে বুঝতে হবে নোড ঠিকভাবে ইন্সটল হয়েছে।</p>\n<p><img src=\"https://cdn.staticaly.com/gh/bdTechies/prozuktischool-cdn/e35a2d1e6edd5ccd10ba99710f262f30f1edf1e3/images/ps-node-linux.png\" alt=\"nodejs installation check\"></p>\n<p><strong>বি: দ্র:</strong> পরবর্তী টিউটোরিয়ালগুলোতে আমি কেবল লিনাক্স টার্মিনালের ছবি দিবো। দেখতে উইন্ডোজের সাথে না মিললেও আউটপুট এক হলেই চলবে।</p>\n"},{"title":"ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ১ - কাজের পরিধি ও দায়িত্ব","date":"2016-12-13T04:00:00.000Z","author":"কামাল শরীফ","_content":"[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]\n\nএকটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল [jQuery](https://jquery.com/)। ২০০৯ সালে [node](https://nodejs.org/en/) এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।\n\n২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?\n\npsd থেকে html ও wireframe:\nএটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল ([sketch](https://www.sketchapp.com/)) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। [ডেভেলাপমেন্ট](https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm) সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত [wireframe](https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399) তৈরি করা জানতে হবে।\n\nডিজাইনে সক্রিয় ভূমিকাঃ\nসম্পূর্ণ ডিজাইন পাওয়ার পর অথবা [ডিজাইন প্রসেস](https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency) চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।\n\nক্লায়েন্ট সাইড লজিকঃ\nJavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।\n\nকিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার [api](https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az) ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।\n\nঅন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।\n\n[রেসপন্সিভ](https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/) এবং ক্রস-ব্রাউজার কম্পেটিবলঃ\nস্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে [ক্রস-ব্রাউজার/প্লাটফর্ম](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction) কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।\n\nপার্ফমেন্স অপ্টিমাইজেশনঃ\n[পার্ফমেন্স অপ্টিমাইজেশন](https://www.keycdn.com/blog/website-performance-optimization/) নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।\n\nপ্রতিষ্ঠানে যেই [টাস্ক রানার](https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/) অথবা [মডিউল বান্ডলার](https://www.sitepoint.com/javascript-modules-bundling-transpiling/) ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।\n\nআপ-টু-ডেট থাকাঃ\nFrontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। [নিউজলেটার](http://css-weekly.com/), ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে [টেস্ট](https://codepen.io/) করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।\n\nFrontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","source":"_posts/frontend-guideline-01.md","raw":"---\ntitle: ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ১ - কাজের পরিধি ও দায়িত্ব\ndate: 2016-12-13 10:00:00\nauthor: কামাল শরীফ\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\n[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]\n\nএকটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল [jQuery](https://jquery.com/)। ২০০৯ সালে [node](https://nodejs.org/en/) এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।\n\n২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?\n\npsd থেকে html ও wireframe:\nএটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল ([sketch](https://www.sketchapp.com/)) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। [ডেভেলাপমেন্ট](https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm) সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত [wireframe](https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399) তৈরি করা জানতে হবে।\n\nডিজাইনে সক্রিয় ভূমিকাঃ\nসম্পূর্ণ ডিজাইন পাওয়ার পর অথবা [ডিজাইন প্রসেস](https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency) চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।\n\nক্লায়েন্ট সাইড লজিকঃ\nJavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।\n\nকিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার [api](https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az) ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।\n\nঅন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।\n\n[রেসপন্সিভ](https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/) এবং ক্রস-ব্রাউজার কম্পেটিবলঃ\nস্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে [ক্রস-ব্রাউজার/প্লাটফর্ম](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction) কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।\n\nপার্ফমেন্স অপ্টিমাইজেশনঃ\n[পার্ফমেন্স অপ্টিমাইজেশন](https://www.keycdn.com/blog/website-performance-optimization/) নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।\n\nপ্রতিষ্ঠানে যেই [টাস্ক রানার](https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/) অথবা [মডিউল বান্ডলার](https://www.sitepoint.com/javascript-modules-bundling-transpiling/) ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।\n\nআপ-টু-ডেট থাকাঃ\nFrontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। [নিউজলেটার](http://css-weekly.com/), ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে [টেস্ট](https://codepen.io/) করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।\n\nFrontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","slug":"frontend-guideline-01","published":1,"updated":"2018-11-20T03:03:13.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6own000sgca2s75nbxqn","content":"<p>[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]</p>\n<p>একটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল <a href=\"https://jquery.com/\" target=\"_blank\" rel=\"noopener\">jQuery</a>। ২০০৯ সালে <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node</a> এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।</p>\n<p>২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?</p>\n<p>psd থেকে html ও wireframe:<br>এটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল (<a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">sketch</a>) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। <a href=\"https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm\" target=\"_blank\" rel=\"noopener\">ডেভেলাপমেন্ট</a> সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত <a href=\"https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399\" target=\"_blank\" rel=\"noopener\">wireframe</a> তৈরি করা জানতে হবে।</p>\n<p>ডিজাইনে সক্রিয় ভূমিকাঃ<br>সম্পূর্ণ ডিজাইন পাওয়ার পর অথবা <a href=\"https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency\" target=\"_blank\" rel=\"noopener\">ডিজাইন প্রসেস</a> চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।</p>\n<p>ক্লায়েন্ট সাইড লজিকঃ<br>JavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।</p>\n<p>কিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার <a href=\"https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az\" target=\"_blank\" rel=\"noopener\">api</a> ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।</p>\n<p>অন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।</p>\n<p><a href=\"https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/\" target=\"_blank\" rel=\"noopener\">রেসপন্সিভ</a> এবং ক্রস-ব্রাউজার কম্পেটিবলঃ<br>স্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\" target=\"_blank\" rel=\"noopener\">ক্রস-ব্রাউজার/প্লাটফর্ম</a> কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।</p>\n<p>পার্ফমেন্স অপ্টিমাইজেশনঃ<br><a href=\"https://www.keycdn.com/blog/website-performance-optimization/\" target=\"_blank\" rel=\"noopener\">পার্ফমেন্স অপ্টিমাইজেশন</a> নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।</p>\n<p>প্রতিষ্ঠানে যেই <a href=\"https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/\" target=\"_blank\" rel=\"noopener\">টাস্ক রানার</a> অথবা <a href=\"https://www.sitepoint.com/javascript-modules-bundling-transpiling/\" target=\"_blank\" rel=\"noopener\">মডিউল বান্ডলার</a> ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।</p>\n<p>আপ-টু-ডেট থাকাঃ<br>Frontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। <a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">নিউজলেটার</a>, ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"noopener\">টেস্ট</a> করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।</p>\n<p>Frontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]</p>\n<p>একটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল <a href=\"https://jquery.com/\" target=\"_blank\" rel=\"noopener\">jQuery</a>। ২০০৯ সালে <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node</a> এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।</p>\n<p>২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?</p>\n<p>psd থেকে html ও wireframe:<br>এটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল (<a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">sketch</a>) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। <a href=\"https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm\" target=\"_blank\" rel=\"noopener\">ডেভেলাপমেন্ট</a> সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত <a href=\"https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399\" target=\"_blank\" rel=\"noopener\">wireframe</a> তৈরি করা জানতে হবে।</p>\n<p>ডিজাইনে সক্রিয় ভূমিকাঃ<br>সম্পূর্ণ ডিজাইন পাওয়ার পর অথবা <a href=\"https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency\" target=\"_blank\" rel=\"noopener\">ডিজাইন প্রসেস</a> চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।</p>\n<p>ক্লায়েন্ট সাইড লজিকঃ<br>JavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।</p>\n<p>কিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার <a href=\"https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az\" target=\"_blank\" rel=\"noopener\">api</a> ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।</p>\n<p>অন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।</p>\n<p><a href=\"https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/\" target=\"_blank\" rel=\"noopener\">রেসপন্সিভ</a> এবং ক্রস-ব্রাউজার কম্পেটিবলঃ<br>স্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\" target=\"_blank\" rel=\"noopener\">ক্রস-ব্রাউজার/প্লাটফর্ম</a> কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।</p>\n<p>পার্ফমেন্স অপ্টিমাইজেশনঃ<br><a href=\"https://www.keycdn.com/blog/website-performance-optimization/\" target=\"_blank\" rel=\"noopener\">পার্ফমেন্স অপ্টিমাইজেশন</a> নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।</p>\n<p>প্রতিষ্ঠানে যেই <a href=\"https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/\" target=\"_blank\" rel=\"noopener\">টাস্ক রানার</a> অথবা <a href=\"https://www.sitepoint.com/javascript-modules-bundling-transpiling/\" target=\"_blank\" rel=\"noopener\">মডিউল বান্ডলার</a> ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।</p>\n<p>আপ-টু-ডেট থাকাঃ<br>Frontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। <a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">নিউজলেটার</a>, ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"noopener\">টেস্ট</a> করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।</p>\n<p>Frontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n"},{"title":"ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ২ - যা কিছু আয়ত্বে থাকা চাই","date":"2016-12-31T04:00:00.000Z","author":"কামাল শরীফ","_content":"\nআগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।\n\nযেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-\n\n### ওয়্যারফ্রেমিং:\n\nনতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত [wireframing](https://www.youtube.com/watch?v=i4Zg6_yKOh8) করা জানা থাকতে হবে। এটি করার জন্য [অনেক টুল/সার্ভিস](https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302) আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য [বেসিক](https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4) UX নিয়ে জানাশোনা থাকতে হবে।\n\n### বাস্তবায়ন পরিকল্পনা বা Implementation Planning:\n\nনতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী [reuse](http://css.world/dry-css/) করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে [পরিকল্পনা](https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x) করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।\n\n### Photoshop/Illustrator/Sketch:\n\nপ্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে [স্কেচ](https://www.sketchapp.com/) এর বেসিক knowledge খুবই উপকারে দিবে।\n\n### HTML ও CSS:\n\nএটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে [ব্রাউজার কীভাবে কাজ করে](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/) তা নিয়ে ধারণা থাকতে হবে।\n\n### CSS Processor:\n\n[Bootstrap](http://getbootstrap.com/) এ কাজ করার সুবাদে অনেকেই [Less](http://lesscss.org/) এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর [ভেরিয়েবল](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [মিক্সিন](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [প্লেসহোল্ডার](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA) সম্পর্কে জানতে হবে। ইদানিং [PostCSS](http://postcss.org/) এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।\n\n### রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\n\nResponsive এবং [cross browser compatible](https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/) করা জানতেই হবে। [CSS ফ্রেমওয়ার্ক](https://speckyboy.com/top-50-css/), বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।\n\n### জাভাস্ক্রিপ্টঃ\n\nJavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। [এখানে বেশ কিছু প্রশ্ন আছে](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f)। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।\n\nFE ডেভেলাপারদেরকে প্রধানত [দুইভাগে](https://css-tricks.com/the-front-end-developers-dilemma/) ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।\n\n[প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক](https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711) দুটোই শিখতে হবে। React নিয়ে [কমিনিউটিতে](https://www.facebook.com/groups/talkjs.net/) অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।\n\n### টাস্ক রানার/ মডিউল বান্ডলারঃ\n\nGrunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল [concat ও মিনিফাই](https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos) করা পর্যন্ত শিখতে হবে।\n\n### যোগাযোগ দক্ষতাঃ\n\nFE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।\n\nউল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ [কনফারেন্স টক](https://www.youtube.com/user/jsconfeu) দেখতে হবে।\n\nঅনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","source":"_posts/frontend-guideline-02.md","raw":"---\ntitle: ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ২ - যা কিছু আয়ত্বে থাকা চাই\ndate: 2016-12-31 10:00:00\nauthor: কামাল শরীফ\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\n\nআগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।\n\nযেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-\n\n### ওয়্যারফ্রেমিং:\n\nনতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত [wireframing](https://www.youtube.com/watch?v=i4Zg6_yKOh8) করা জানা থাকতে হবে। এটি করার জন্য [অনেক টুল/সার্ভিস](https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302) আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য [বেসিক](https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4) UX নিয়ে জানাশোনা থাকতে হবে।\n\n### বাস্তবায়ন পরিকল্পনা বা Implementation Planning:\n\nনতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী [reuse](http://css.world/dry-css/) করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে [পরিকল্পনা](https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x) করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।\n\n### Photoshop/Illustrator/Sketch:\n\nপ্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে [স্কেচ](https://www.sketchapp.com/) এর বেসিক knowledge খুবই উপকারে দিবে।\n\n### HTML ও CSS:\n\nএটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে [ব্রাউজার কীভাবে কাজ করে](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/) তা নিয়ে ধারণা থাকতে হবে।\n\n### CSS Processor:\n\n[Bootstrap](http://getbootstrap.com/) এ কাজ করার সুবাদে অনেকেই [Less](http://lesscss.org/) এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর [ভেরিয়েবল](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [মিক্সিন](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [প্লেসহোল্ডার](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA) সম্পর্কে জানতে হবে। ইদানিং [PostCSS](http://postcss.org/) এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।\n\n### রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\n\nResponsive এবং [cross browser compatible](https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/) করা জানতেই হবে। [CSS ফ্রেমওয়ার্ক](https://speckyboy.com/top-50-css/), বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।\n\n### জাভাস্ক্রিপ্টঃ\n\nJavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। [এখানে বেশ কিছু প্রশ্ন আছে](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f)। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।\n\nFE ডেভেলাপারদেরকে প্রধানত [দুইভাগে](https://css-tricks.com/the-front-end-developers-dilemma/) ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।\n\n[প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক](https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711) দুটোই শিখতে হবে। React নিয়ে [কমিনিউটিতে](https://www.facebook.com/groups/talkjs.net/) অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।\n\n### টাস্ক রানার/ মডিউল বান্ডলারঃ\n\nGrunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল [concat ও মিনিফাই](https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos) করা পর্যন্ত শিখতে হবে।\n\n### যোগাযোগ দক্ষতাঃ\n\nFE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।\n\nউল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ [কনফারেন্স টক](https://www.youtube.com/user/jsconfeu) দেখতে হবে।\n\nঅনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","slug":"frontend-guideline-02","published":1,"updated":"2018-11-21T04:27:16.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6owo000tgca2gkkvk8kk","content":"<p>আগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।</p>\n<p>যেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-</p>\n<h3 id=\"ওয়্যারফ্রেমিং\"><a href=\"#ওয়্যারফ্রেমিং\" class=\"headerlink\" title=\"ওয়্যারফ্রেমিং:\"></a>ওয়্যারফ্রেমিং:</h3><p>নতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত <a href=\"https://www.youtube.com/watch?v=i4Zg6_yKOh8\" target=\"_blank\" rel=\"noopener\">wireframing</a> করা জানা থাকতে হবে। এটি করার জন্য <a href=\"https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302\" target=\"_blank\" rel=\"noopener\">অনেক টুল/সার্ভিস</a> আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য <a href=\"https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4\" target=\"_blank\" rel=\"noopener\">বেসিক</a> UX নিয়ে জানাশোনা থাকতে হবে।</p>\n<h3 id=\"বাস্তবায়ন-পরিকল্পনা-বা-Implementation-Planning\"><a href=\"#বাস্তবায়ন-পরিকল্পনা-বা-Implementation-Planning\" class=\"headerlink\" title=\"বাস্তবায়ন পরিকল্পনা বা Implementation Planning:\"></a>বাস্তবায়ন পরিকল্পনা বা Implementation Planning:</h3><p>নতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী <a href=\"http://css.world/dry-css/\" target=\"_blank\" rel=\"noopener\">reuse</a> করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে <a href=\"https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x\" target=\"_blank\" rel=\"noopener\">পরিকল্পনা</a> করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।</p>\n<h3 id=\"Photoshop-Illustrator-Sketch\"><a href=\"#Photoshop-Illustrator-Sketch\" class=\"headerlink\" title=\"Photoshop/Illustrator/Sketch:\"></a>Photoshop/Illustrator/Sketch:</h3><p>প্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে <a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">স্কেচ</a> এর বেসিক knowledge খুবই উপকারে দিবে।</p>\n<h3 id=\"HTML-ও-CSS\"><a href=\"#HTML-ও-CSS\" class=\"headerlink\" title=\"HTML ও CSS:\"></a>HTML ও CSS:</h3><p>এটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে <a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\" target=\"_blank\" rel=\"noopener\">ব্রাউজার কীভাবে কাজ করে</a> তা নিয়ে ধারণা থাকতে হবে।</p>\n<h3 id=\"CSS-Processor\"><a href=\"#CSS-Processor\" class=\"headerlink\" title=\"CSS Processor:\"></a>CSS Processor:</h3><p><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"noopener\">Bootstrap</a> এ কাজ করার সুবাদে অনেকেই <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">Less</a> এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">ভেরিয়েবল</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">মিক্সিন</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">প্লেসহোল্ডার</a> সম্পর্কে জানতে হবে। ইদানিং <a href=\"http://postcss.org/\" target=\"_blank\" rel=\"noopener\">PostCSS</a> এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।</p>\n<h3 id=\"রেসপনসিভনেস-এবং-ক্রস-ব্রাউজার-কম্পেটিবলিটিঃ\"><a href=\"#রেসপনসিভনেস-এবং-ক্রস-ব্রাউজার-কম্পেটিবলিটিঃ\" class=\"headerlink\" title=\"রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\"></a>রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ</h3><p>Responsive এবং <a href=\"https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/\" target=\"_blank\" rel=\"noopener\">cross browser compatible</a> করা জানতেই হবে। <a href=\"https://speckyboy.com/top-50-css/\" target=\"_blank\" rel=\"noopener\">CSS ফ্রেমওয়ার্ক</a>, বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।</p>\n<h3 id=\"জাভাস্ক্রিপ্টঃ\"><a href=\"#জাভাস্ক্রিপ্টঃ\" class=\"headerlink\" title=\"জাভাস্ক্রিপ্টঃ\"></a>জাভাস্ক্রিপ্টঃ</h3><p>JavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f\" target=\"_blank\" rel=\"noopener\">এখানে বেশ কিছু প্রশ্ন আছে</a>। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।</p>\n<p>FE ডেভেলাপারদেরকে প্রধানত <a href=\"https://css-tricks.com/the-front-end-developers-dilemma/\" target=\"_blank\" rel=\"noopener\">দুইভাগে</a> ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।</p>\n<p><a href=\"https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711\" target=\"_blank\" rel=\"noopener\">প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক</a> দুটোই শিখতে হবে। React নিয়ে <a href=\"https://www.facebook.com/groups/talkjs.net/\" target=\"_blank\" rel=\"noopener\">কমিনিউটিতে</a> অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।</p>\n<h3 id=\"টাস্ক-রানার-মডিউল-বান্ডলারঃ\"><a href=\"#টাস্ক-রানার-মডিউল-বান্ডলারঃ\" class=\"headerlink\" title=\"টাস্ক রানার/ মডিউল বান্ডলারঃ\"></a>টাস্ক রানার/ মডিউল বান্ডলারঃ</h3><p>Grunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল <a href=\"https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos\" target=\"_blank\" rel=\"noopener\">concat ও মিনিফাই</a> করা পর্যন্ত শিখতে হবে।</p>\n<h3 id=\"যোগাযোগ-দক্ষতাঃ\"><a href=\"#যোগাযোগ-দক্ষতাঃ\" class=\"headerlink\" title=\"যোগাযোগ দক্ষতাঃ\"></a>যোগাযোগ দক্ষতাঃ</h3><p>FE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।</p>\n<p>উল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ <a href=\"https://www.youtube.com/user/jsconfeu\" target=\"_blank\" rel=\"noopener\">কনফারেন্স টক</a> দেখতে হবে।</p>\n<p>অনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>আগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।</p>\n<p>যেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-</p>\n<h3 id=\"ওয়্যারফ্রেমিং\"><a href=\"#ওয়্যারফ্রেমিং\" class=\"headerlink\" title=\"ওয়্যারফ্রেমিং:\"></a>ওয়্যারফ্রেমিং:</h3><p>নতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত <a href=\"https://www.youtube.com/watch?v=i4Zg6_yKOh8\" target=\"_blank\" rel=\"noopener\">wireframing</a> করা জানা থাকতে হবে। এটি করার জন্য <a href=\"https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302\" target=\"_blank\" rel=\"noopener\">অনেক টুল/সার্ভিস</a> আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য <a href=\"https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4\" target=\"_blank\" rel=\"noopener\">বেসিক</a> UX নিয়ে জানাশোনা থাকতে হবে।</p>\n<h3 id=\"বাস্তবায়ন-পরিকল্পনা-বা-Implementation-Planning\"><a href=\"#বাস্তবায়ন-পরিকল্পনা-বা-Implementation-Planning\" class=\"headerlink\" title=\"বাস্তবায়ন পরিকল্পনা বা Implementation Planning:\"></a>বাস্তবায়ন পরিকল্পনা বা Implementation Planning:</h3><p>নতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী <a href=\"http://css.world/dry-css/\" target=\"_blank\" rel=\"noopener\">reuse</a> করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে <a href=\"https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x\" target=\"_blank\" rel=\"noopener\">পরিকল্পনা</a> করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।</p>\n<h3 id=\"Photoshop-Illustrator-Sketch\"><a href=\"#Photoshop-Illustrator-Sketch\" class=\"headerlink\" title=\"Photoshop/Illustrator/Sketch:\"></a>Photoshop/Illustrator/Sketch:</h3><p>প্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে <a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">স্কেচ</a> এর বেসিক knowledge খুবই উপকারে দিবে।</p>\n<h3 id=\"HTML-ও-CSS\"><a href=\"#HTML-ও-CSS\" class=\"headerlink\" title=\"HTML ও CSS:\"></a>HTML ও CSS:</h3><p>এটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে <a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\" target=\"_blank\" rel=\"noopener\">ব্রাউজার কীভাবে কাজ করে</a> তা নিয়ে ধারণা থাকতে হবে।</p>\n<h3 id=\"CSS-Processor\"><a href=\"#CSS-Processor\" class=\"headerlink\" title=\"CSS Processor:\"></a>CSS Processor:</h3><p><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"noopener\">Bootstrap</a> এ কাজ করার সুবাদে অনেকেই <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">Less</a> এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">ভেরিয়েবল</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">মিক্সিন</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">প্লেসহোল্ডার</a> সম্পর্কে জানতে হবে। ইদানিং <a href=\"http://postcss.org/\" target=\"_blank\" rel=\"noopener\">PostCSS</a> এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।</p>\n<h3 id=\"রেসপনসিভনেস-এবং-ক্রস-ব্রাউজার-কম্পেটিবলিটিঃ\"><a href=\"#রেসপনসিভনেস-এবং-ক্রস-ব্রাউজার-কম্পেটিবলিটিঃ\" class=\"headerlink\" title=\"রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\"></a>রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ</h3><p>Responsive এবং <a href=\"https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/\" target=\"_blank\" rel=\"noopener\">cross browser compatible</a> করা জানতেই হবে। <a href=\"https://speckyboy.com/top-50-css/\" target=\"_blank\" rel=\"noopener\">CSS ফ্রেমওয়ার্ক</a>, বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।</p>\n<h3 id=\"জাভাস্ক্রিপ্টঃ\"><a href=\"#জাভাস্ক্রিপ্টঃ\" class=\"headerlink\" title=\"জাভাস্ক্রিপ্টঃ\"></a>জাভাস্ক্রিপ্টঃ</h3><p>JavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f\" target=\"_blank\" rel=\"noopener\">এখানে বেশ কিছু প্রশ্ন আছে</a>। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।</p>\n<p>FE ডেভেলাপারদেরকে প্রধানত <a href=\"https://css-tricks.com/the-front-end-developers-dilemma/\" target=\"_blank\" rel=\"noopener\">দুইভাগে</a> ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।</p>\n<p><a href=\"https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711\" target=\"_blank\" rel=\"noopener\">প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক</a> দুটোই শিখতে হবে। React নিয়ে <a href=\"https://www.facebook.com/groups/talkjs.net/\" target=\"_blank\" rel=\"noopener\">কমিনিউটিতে</a> অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।</p>\n<h3 id=\"টাস্ক-রানার-মডিউল-বান্ডলারঃ\"><a href=\"#টাস্ক-রানার-মডিউল-বান্ডলারঃ\" class=\"headerlink\" title=\"টাস্ক রানার/ মডিউল বান্ডলারঃ\"></a>টাস্ক রানার/ মডিউল বান্ডলারঃ</h3><p>Grunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল <a href=\"https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos\" target=\"_blank\" rel=\"noopener\">concat ও মিনিফাই</a> করা পর্যন্ত শিখতে হবে।</p>\n<h3 id=\"যোগাযোগ-দক্ষতাঃ\"><a href=\"#যোগাযোগ-দক্ষতাঃ\" class=\"headerlink\" title=\"যোগাযোগ দক্ষতাঃ\"></a>যোগাযোগ দক্ষতাঃ</h3><p>FE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।</p>\n<p>উল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ <a href=\"https://www.youtube.com/user/jsconfeu\" target=\"_blank\" rel=\"noopener\">কনফারেন্স টক</a> দেখতে হবে।</p>\n<p>অনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n"},{"title":"পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা","date":"2017-02-21T04:39:23.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।\n\nআজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।\n\n### ১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\nধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।\n\n### ২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\nধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।\n\n### ৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\nআপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।\n\n### ৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\nআপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।\n\n### ৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\nকিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।\n\n### ৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\nপ্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।\n\n### ৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\nআপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।\n\n### ৮. নিজের সম্পর্কে বলুনঃ\nসাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।\n\n### ৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\nআগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।\n\n### ১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\nআপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।\n\nএতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”\n","source":"_posts/portfolio-design-guideline.md","raw":"---\ntitle: পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা\ndate: 2017-02-21 10:39:23\nauthor: শহীদুল ইসলাম মজুমদার\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।\n\nআজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।\n\n### ১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\nধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।\n\n### ২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\nধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।\n\n### ৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\nআপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।\n\n### ৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\nআপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।\n\n### ৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\nকিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।\n\n### ৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\nপ্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।\n\n### ৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\nআপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।\n\n### ৮. নিজের সম্পর্কে বলুনঃ\nসাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।\n\n### ৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\nআগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।\n\n### ১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\nআপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।\n\nএতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”\n","slug":"portfolio-design-guideline","published":1,"updated":"2018-11-20T03:03:13.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6owq000vgca2yy6bkc55","content":"<p>ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।</p>\n<p>আজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।</p>\n<h3 id=\"১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\"><a href=\"#১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\"></a>১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ</h3><p>ধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।</p>\n<h3 id=\"২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\"><a href=\"#২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\"></a>২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ</h3><p>ধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।</p>\n<h3 id=\"৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\"><a href=\"#৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\" class=\"headerlink\" title=\"৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\"></a>৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ</h3><p>আপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।</p>\n<h3 id=\"৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\"><a href=\"#৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\"></a>৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ</h3><p>আপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।</p>\n<h3 id=\"৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\"><a href=\"#৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\" class=\"headerlink\" title=\"৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\"></a>৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ</h3><p>কিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।</p>\n<h3 id=\"৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\"><a href=\"#৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\" class=\"headerlink\" title=\"৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\"></a>৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ</h3><p>প্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।</p>\n<h3 id=\"৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\"><a href=\"#৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\"></a>৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ</h3><p>আপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।</p>\n<h3 id=\"৮-নিজের-সম্পর্কে-বলুনঃ\"><a href=\"#৮-নিজের-সম্পর্কে-বলুনঃ\" class=\"headerlink\" title=\"৮. নিজের সম্পর্কে বলুনঃ\"></a>৮. নিজের সম্পর্কে বলুনঃ</h3><p>সাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।</p>\n<h3 id=\"৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\"><a href=\"#৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\"></a>৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ</h3><p>আগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।</p>\n<h3 id=\"১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\"><a href=\"#১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\" class=\"headerlink\" title=\"১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\"></a>১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ</h3><p>আপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।</p>\n<p>এতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।</p>\n<p>আজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।</p>\n<h3 id=\"১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\"><a href=\"#১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\"></a>১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ</h3><p>ধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।</p>\n<h3 id=\"২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\"><a href=\"#২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\"></a>২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ</h3><p>ধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।</p>\n<h3 id=\"৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\"><a href=\"#৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\" class=\"headerlink\" title=\"৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\"></a>৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ</h3><p>আপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।</p>\n<h3 id=\"৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\"><a href=\"#৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\"></a>৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ</h3><p>আপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।</p>\n<h3 id=\"৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\"><a href=\"#৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\" class=\"headerlink\" title=\"৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\"></a>৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ</h3><p>কিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।</p>\n<h3 id=\"৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\"><a href=\"#৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\" class=\"headerlink\" title=\"৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\"></a>৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ</h3><p>প্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।</p>\n<h3 id=\"৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\"><a href=\"#৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\"></a>৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ</h3><p>আপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।</p>\n<h3 id=\"৮-নিজের-সম্পর্কে-বলুনঃ\"><a href=\"#৮-নিজের-সম্পর্কে-বলুনঃ\" class=\"headerlink\" title=\"৮. নিজের সম্পর্কে বলুনঃ\"></a>৮. নিজের সম্পর্কে বলুনঃ</h3><p>সাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।</p>\n<h3 id=\"৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\"><a href=\"#৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\"></a>৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ</h3><p>আগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।</p>\n<h3 id=\"১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\"><a href=\"#১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\" class=\"headerlink\" title=\"১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\"></a>১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ</h3><p>আপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।</p>\n<p>এতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”</p>\n"},{"title":"জাভাস্ক্রিপ্ট শিখি - পর্ব ০১ - শুরুর কথা","date":"2018-03-22T04:39:02.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"\nআসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।\n\nবর্তমান সময়ের সবচেয়ে জনপ্রিয় প্রোগ্রামিং ভাষাগুলোর মধ্যে জাভাস্ক্রিপ্ট অন্যতম। ফ্রন্ট-এন্ড, সার্ভার, মোবাইল অ্যাপ এমনকি [নাসায়ও](https://foundation.nodejs.org/wp-content/uploads/sites/50/2017/09/Node_CaseStudy_Nasa_FNL.pdf) ব্যবহৃত হচ্ছে জাভাস্ক্রিপ্ট। আমাদের দেশেও দিন দিন এর ব্যবহার বাড়ছে; বিশেষ করে ফ্রন্ট-এন্ড সেক্টরে। কিন্তু দু:খের ব্যাপার হলো প্রয়োজনের তুলনায় আমাদের দেশে জাভাস্ক্রিপ্ট ডেভেলপারের সংখ্যা অনেক কম। এর উল্লেখযোগ্য কিছু কারণ হলো: বিশ্ববিদ্যালয় পর্যায়ে জাভাস্ক্রিপ্ট না শেখানো, কেবল ফ্রন্ট-এন্ড ডেভেলপমেন্টেই জাভাস্ক্রিপ্ট ব্যবহৃত হয় এমন ধারণা করা, জাভাস্ক্রিপ্টও যে অন্যান্য প্রোগ্রামিং ভাষার মতোই শক্তিশালি তার সম্পর্কে ধারণা না থাকা।\n\nআমাদের এই টিউটোরিয়াল সিরিজটিতে আমরা জাভাস্ক্রিপ্টকে শেখার চেষ্টা করবো একটি পূর্ণাঙ্গ প্রোগ্রামিং ভাষা হিসেবে। জানার চেষ্টা করবো অন্যান্য প্রোগ্রামিং ভাষার মতো জাভাস্ক্রিপ্ট দিয়ে কীভাবে নানা প্রোগ্রামিং সমস্যার সমাধান করা যায়। তাহলে চলুন আর কথা না বাড়িয়ে আমরা আমাদের আজকের পাঠ শুরু করি।\n\nকোড লেখালেখিতে ঝাপিয়ে পড়ার আগে আমরা কিছু তথ্য ও তত্ত্ব নিয়ে আলোচনা করবো। এতে একদিকে আমাদের প্রোগ্রামিংয়ের ভিত্তি মজবুত হবে, অন্যদিকে মজার মজার তথ্য দিবে অনুপ্রেরণা। যেহেতু এটি আমাদের প্রথম পর্ব তাই আজকের পর্বটিতে আমরা জানার চেষ্টা করবো জাভাস্ক্রিপ্ট নিয়ে কিছু তথ্য।\n\nজাভাস্ক্রিপ্টের ইতিহাসটা কিছুটা মজার। ১৯৯৫ সালে নেটস্কেপ কমিউনিকেশন নামের এক কোম্পানি ব্র্যান্ডন এইখ নামের এক কম্পিউটার প্রকৌশলীকে দায়িত্ব দেয় তাদের ব্রাউজারে ব্যবহারের জন্য একটি প্রোগ্রামিং ভাষা তৈরি করতে। ব্রাউজারটির নাম ছিলো নেটস্কেপ নেভিগেটর, যা পরবর্তীতে ফায়ারফক্সে রূপান্তরিত হয়। ব্র্যান্ডন এইখ তার কাজ শুরু করার আগেই নেটস্কেপ সান মাইক্রোসিস্টেমের সাথে আলোচনা করে ঠিক করে নেয় তাদের ব্রাউজারে সানের জাভা প্রোগ্রামিং ভাষাটি ব্যবহার করার। এর কারণ ছিলো তখনকার সেরা প্রোগ্রামিং ভাষা জাভা ব্যবহার করে সেরা ব্রাউজার নির্মাতা মাইক্রসফটের সাথে পাল্লা দেয়া।\n\nতাই তারা সিদ্ধান্ত নেয় তাদের নির্মিত ভাষা দেখতে জাভার মতো হবে; তখনকার অন্যান্য প্রোগ্রামিং ভাষা পার্ল, পাইথন কিংবা স্কিমের মতো না। প্রতিযোগীতার দৌড়ে এগিয়ে থাকার জন্য ব্র্যান্ডন এইখ জাভাস্ক্রিপ্টের প্রথম খসরাটি (প্রোটোটাইপটি) তৈরি করেন মাত্র ১০ দিনে। মকা নামে এই ভাষাটি নির্মিত হলেও, প্রথম যখন এটি নেটস্কেপ নেভিগেটর ২.০ এ সংযুক্ত হয় তখন এর অফিসিয়াল নাম ছিলো লাইভস্ক্রিপ্ট। পরবর্তীতে নেটস্কেপ নেভিগেটর ৩.০ এ নাম পরিবর্তন করে রাখা হয় জাভাস্ক্রিপ্ট। এই নামটি মানুষের মাঝে বিভ্রান্তি সৃষ্টি করেছিলো। নামের সাথে জাভা থাকায় অনেকে মনে করতো এটি জাভারই একটি অংশ (যা এখনো অনেকে মনে করেন)। এটা আসলে ছিলো একটা মার্কেটিং পলিসি। তখনকার সেরা ভাষা জাভার জনপ্রিয়তাকে কাজে লাগানোই ছিলো মূল উদ্দেশ্য।\n\n১৯৯৬ সালে নেটস্কেপ ইকমা ইন্টারন্যাশনালের কাছে জাভাস্ক্রিপ্ট ভাষাটি প্রেরণ করে একটি স্টান্ডার্ড তৈরি করার জন্য। আর এ পথ ধরেই ১৯৯৭ সাথে প্রকাশিত হয় জাভাস্ক্রিপ্টের প্রথম ল্যাঙ্গুয়েজ স্ট্যান্ডার্ড, যার অফিসিয়াল নাম ছিলো ইকমাস্ক্রিপ্ট। ইকমাস্ক্রিপ্ট স্ট্যান্ডার্ডের সবচেয়ে জনপ্রিয় ইমপ্লিমেন্টেশান হচ্ছে আমাদের আলোচ্য জাভাস্ক্রিপ্ট। নানা চড়াই-উতড়াই পেরিয়ে, ধাপে ধাপে পরিবর্তন-পরিবর্ধন হয়ে বর্তমানে ইকমাস্ক্রিপ্ট ভার্শন ৭ এ এসে পৌঁছেছে। আর আমাদের আলোচনাও হবে জাভাস্ক্রিপ্টের সাম্প্রতিক সংস্করণগুলো নিয়ে।\n\nআশা করি একদিনের জন্য যথেষ্ট পরিমাণ আলোচনা হয়েছে। আজ এখানেই থামছি। আগামী পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।\n\nধন্যবাদ। আল্লাহ হাফেজ।\n","source":"_posts/জাভাস্ক্রিপ্ট-শিখি-পর্ব-১.md","raw":"---\ntitle: জাভাস্ক্রিপ্ট শিখি - পর্ব ০১ - শুরুর কথা\ndate: 2018-03-22 10:39:02\nauthor: শহীদুল ইসলাম মজুমদার\ntags:\n- javascript\n- জাভাস্ক্রিপ্ট\n- প্রোগ্রামিং\ncategory: প্রোগ্রামিং\n---\n\nআসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।\n\nবর্তমান সময়ের সবচেয়ে জনপ্রিয় প্রোগ্রামিং ভাষাগুলোর মধ্যে জাভাস্ক্রিপ্ট অন্যতম। ফ্রন্ট-এন্ড, সার্ভার, মোবাইল অ্যাপ এমনকি [নাসায়ও](https://foundation.nodejs.org/wp-content/uploads/sites/50/2017/09/Node_CaseStudy_Nasa_FNL.pdf) ব্যবহৃত হচ্ছে জাভাস্ক্রিপ্ট। আমাদের দেশেও দিন দিন এর ব্যবহার বাড়ছে; বিশেষ করে ফ্রন্ট-এন্ড সেক্টরে। কিন্তু দু:খের ব্যাপার হলো প্রয়োজনের তুলনায় আমাদের দেশে জাভাস্ক্রিপ্ট ডেভেলপারের সংখ্যা অনেক কম। এর উল্লেখযোগ্য কিছু কারণ হলো: বিশ্ববিদ্যালয় পর্যায়ে জাভাস্ক্রিপ্ট না শেখানো, কেবল ফ্রন্ট-এন্ড ডেভেলপমেন্টেই জাভাস্ক্রিপ্ট ব্যবহৃত হয় এমন ধারণা করা, জাভাস্ক্রিপ্টও যে অন্যান্য প্রোগ্রামিং ভাষার মতোই শক্তিশালি তার সম্পর্কে ধারণা না থাকা।\n\nআমাদের এই টিউটোরিয়াল সিরিজটিতে আমরা জাভাস্ক্রিপ্টকে শেখার চেষ্টা করবো একটি পূর্ণাঙ্গ প্রোগ্রামিং ভাষা হিসেবে। জানার চেষ্টা করবো অন্যান্য প্রোগ্রামিং ভাষার মতো জাভাস্ক্রিপ্ট দিয়ে কীভাবে নানা প্রোগ্রামিং সমস্যার সমাধান করা যায়। তাহলে চলুন আর কথা না বাড়িয়ে আমরা আমাদের আজকের পাঠ শুরু করি।\n\nকোড লেখালেখিতে ঝাপিয়ে পড়ার আগে আমরা কিছু তথ্য ও তত্ত্ব নিয়ে আলোচনা করবো। এতে একদিকে আমাদের প্রোগ্রামিংয়ের ভিত্তি মজবুত হবে, অন্যদিকে মজার মজার তথ্য দিবে অনুপ্রেরণা। যেহেতু এটি আমাদের প্রথম পর্ব তাই আজকের পর্বটিতে আমরা জানার চেষ্টা করবো জাভাস্ক্রিপ্ট নিয়ে কিছু তথ্য।\n\nজাভাস্ক্রিপ্টের ইতিহাসটা কিছুটা মজার। ১৯৯৫ সালে নেটস্কেপ কমিউনিকেশন নামের এক কোম্পানি ব্র্যান্ডন এইখ নামের এক কম্পিউটার প্রকৌশলীকে দায়িত্ব দেয় তাদের ব্রাউজারে ব্যবহারের জন্য একটি প্রোগ্রামিং ভাষা তৈরি করতে। ব্রাউজারটির নাম ছিলো নেটস্কেপ নেভিগেটর, যা পরবর্তীতে ফায়ারফক্সে রূপান্তরিত হয়। ব্র্যান্ডন এইখ তার কাজ শুরু করার আগেই নেটস্কেপ সান মাইক্রোসিস্টেমের সাথে আলোচনা করে ঠিক করে নেয় তাদের ব্রাউজারে সানের জাভা প্রোগ্রামিং ভাষাটি ব্যবহার করার। এর কারণ ছিলো তখনকার সেরা প্রোগ্রামিং ভাষা জাভা ব্যবহার করে সেরা ব্রাউজার নির্মাতা মাইক্রসফটের সাথে পাল্লা দেয়া।\n\nতাই তারা সিদ্ধান্ত নেয় তাদের নির্মিত ভাষা দেখতে জাভার মতো হবে; তখনকার অন্যান্য প্রোগ্রামিং ভাষা পার্ল, পাইথন কিংবা স্কিমের মতো না। প্রতিযোগীতার দৌড়ে এগিয়ে থাকার জন্য ব্র্যান্ডন এইখ জাভাস্ক্রিপ্টের প্রথম খসরাটি (প্রোটোটাইপটি) তৈরি করেন মাত্র ১০ দিনে। মকা নামে এই ভাষাটি নির্মিত হলেও, প্রথম যখন এটি নেটস্কেপ নেভিগেটর ২.০ এ সংযুক্ত হয় তখন এর অফিসিয়াল নাম ছিলো লাইভস্ক্রিপ্ট। পরবর্তীতে নেটস্কেপ নেভিগেটর ৩.০ এ নাম পরিবর্তন করে রাখা হয় জাভাস্ক্রিপ্ট। এই নামটি মানুষের মাঝে বিভ্রান্তি সৃষ্টি করেছিলো। নামের সাথে জাভা থাকায় অনেকে মনে করতো এটি জাভারই একটি অংশ (যা এখনো অনেকে মনে করেন)। এটা আসলে ছিলো একটা মার্কেটিং পলিসি। তখনকার সেরা ভাষা জাভার জনপ্রিয়তাকে কাজে লাগানোই ছিলো মূল উদ্দেশ্য।\n\n১৯৯৬ সালে নেটস্কেপ ইকমা ইন্টারন্যাশনালের কাছে জাভাস্ক্রিপ্ট ভাষাটি প্রেরণ করে একটি স্টান্ডার্ড তৈরি করার জন্য। আর এ পথ ধরেই ১৯৯৭ সাথে প্রকাশিত হয় জাভাস্ক্রিপ্টের প্রথম ল্যাঙ্গুয়েজ স্ট্যান্ডার্ড, যার অফিসিয়াল নাম ছিলো ইকমাস্ক্রিপ্ট। ইকমাস্ক্রিপ্ট স্ট্যান্ডার্ডের সবচেয়ে জনপ্রিয় ইমপ্লিমেন্টেশান হচ্ছে আমাদের আলোচ্য জাভাস্ক্রিপ্ট। নানা চড়াই-উতড়াই পেরিয়ে, ধাপে ধাপে পরিবর্তন-পরিবর্ধন হয়ে বর্তমানে ইকমাস্ক্রিপ্ট ভার্শন ৭ এ এসে পৌঁছেছে। আর আমাদের আলোচনাও হবে জাভাস্ক্রিপ্টের সাম্প্রতিক সংস্করণগুলো নিয়ে।\n\nআশা করি একদিনের জন্য যথেষ্ট পরিমাণ আলোচনা হয়েছে। আজ এখানেই থামছি। আগামী পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।\n\nধন্যবাদ। আল্লাহ হাফেজ।\n","slug":"জাভাস্ক্রিপ্ট-শিখি-পর্ব-১","published":1,"updated":"2018-11-21T04:25:33.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoqo6ows000xgca2bhqcnksz","content":"<p>আসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।</p>\n<p>বর্তমান সময়ের সবচেয়ে জনপ্রিয় প্রোগ্রামিং ভাষাগুলোর মধ্যে জাভাস্ক্রিপ্ট অন্যতম। ফ্রন্ট-এন্ড, সার্ভার, মোবাইল অ্যাপ এমনকি <a href=\"https://foundation.nodejs.org/wp-content/uploads/sites/50/2017/09/Node_CaseStudy_Nasa_FNL.pdf\" target=\"_blank\" rel=\"noopener\">নাসায়ও</a> ব্যবহৃত হচ্ছে জাভাস্ক্রিপ্ট। আমাদের দেশেও দিন দিন এর ব্যবহার বাড়ছে; বিশেষ করে ফ্রন্ট-এন্ড সেক্টরে। কিন্তু দু:খের ব্যাপার হলো প্রয়োজনের তুলনায় আমাদের দেশে জাভাস্ক্রিপ্ট ডেভেলপারের সংখ্যা অনেক কম। এর উল্লেখযোগ্য কিছু কারণ হলো: বিশ্ববিদ্যালয় পর্যায়ে জাভাস্ক্রিপ্ট না শেখানো, কেবল ফ্রন্ট-এন্ড ডেভেলপমেন্টেই জাভাস্ক্রিপ্ট ব্যবহৃত হয় এমন ধারণা করা, জাভাস্ক্রিপ্টও যে অন্যান্য প্রোগ্রামিং ভাষার মতোই শক্তিশালি তার সম্পর্কে ধারণা না থাকা।</p>\n<p>আমাদের এই টিউটোরিয়াল সিরিজটিতে আমরা জাভাস্ক্রিপ্টকে শেখার চেষ্টা করবো একটি পূর্ণাঙ্গ প্রোগ্রামিং ভাষা হিসেবে। জানার চেষ্টা করবো অন্যান্য প্রোগ্রামিং ভাষার মতো জাভাস্ক্রিপ্ট দিয়ে কীভাবে নানা প্রোগ্রামিং সমস্যার সমাধান করা যায়। তাহলে চলুন আর কথা না বাড়িয়ে আমরা আমাদের আজকের পাঠ শুরু করি।</p>\n<p>কোড লেখালেখিতে ঝাপিয়ে পড়ার আগে আমরা কিছু তথ্য ও তত্ত্ব নিয়ে আলোচনা করবো। এতে একদিকে আমাদের প্রোগ্রামিংয়ের ভিত্তি মজবুত হবে, অন্যদিকে মজার মজার তথ্য দিবে অনুপ্রেরণা। যেহেতু এটি আমাদের প্রথম পর্ব তাই আজকের পর্বটিতে আমরা জানার চেষ্টা করবো জাভাস্ক্রিপ্ট নিয়ে কিছু তথ্য।</p>\n<p>জাভাস্ক্রিপ্টের ইতিহাসটা কিছুটা মজার। ১৯৯৫ সালে নেটস্কেপ কমিউনিকেশন নামের এক কোম্পানি ব্র্যান্ডন এইখ নামের এক কম্পিউটার প্রকৌশলীকে দায়িত্ব দেয় তাদের ব্রাউজারে ব্যবহারের জন্য একটি প্রোগ্রামিং ভাষা তৈরি করতে। ব্রাউজারটির নাম ছিলো নেটস্কেপ নেভিগেটর, যা পরবর্তীতে ফায়ারফক্সে রূপান্তরিত হয়। ব্র্যান্ডন এইখ তার কাজ শুরু করার আগেই নেটস্কেপ সান মাইক্রোসিস্টেমের সাথে আলোচনা করে ঠিক করে নেয় তাদের ব্রাউজারে সানের জাভা প্রোগ্রামিং ভাষাটি ব্যবহার করার। এর কারণ ছিলো তখনকার সেরা প্রোগ্রামিং ভাষা জাভা ব্যবহার করে সেরা ব্রাউজার নির্মাতা মাইক্রসফটের সাথে পাল্লা দেয়া।</p>\n<p>তাই তারা সিদ্ধান্ত নেয় তাদের নির্মিত ভাষা দেখতে জাভার মতো হবে; তখনকার অন্যান্য প্রোগ্রামিং ভাষা পার্ল, পাইথন কিংবা স্কিমের মতো না। প্রতিযোগীতার দৌড়ে এগিয়ে থাকার জন্য ব্র্যান্ডন এইখ জাভাস্ক্রিপ্টের প্রথম খসরাটি (প্রোটোটাইপটি) তৈরি করেন মাত্র ১০ দিনে। মকা নামে এই ভাষাটি নির্মিত হলেও, প্রথম যখন এটি নেটস্কেপ নেভিগেটর ২.০ এ সংযুক্ত হয় তখন এর অফিসিয়াল নাম ছিলো লাইভস্ক্রিপ্ট। পরবর্তীতে নেটস্কেপ নেভিগেটর ৩.০ এ নাম পরিবর্তন করে রাখা হয় জাভাস্ক্রিপ্ট। এই নামটি মানুষের মাঝে বিভ্রান্তি সৃষ্টি করেছিলো। নামের সাথে জাভা থাকায় অনেকে মনে করতো এটি জাভারই একটি অংশ (যা এখনো অনেকে মনে করেন)। এটা আসলে ছিলো একটা মার্কেটিং পলিসি। তখনকার সেরা ভাষা জাভার জনপ্রিয়তাকে কাজে লাগানোই ছিলো মূল উদ্দেশ্য।</p>\n<p>১৯৯৬ সালে নেটস্কেপ ইকমা ইন্টারন্যাশনালের কাছে জাভাস্ক্রিপ্ট ভাষাটি প্রেরণ করে একটি স্টান্ডার্ড তৈরি করার জন্য। আর এ পথ ধরেই ১৯৯৭ সাথে প্রকাশিত হয় জাভাস্ক্রিপ্টের প্রথম ল্যাঙ্গুয়েজ স্ট্যান্ডার্ড, যার অফিসিয়াল নাম ছিলো ইকমাস্ক্রিপ্ট। ইকমাস্ক্রিপ্ট স্ট্যান্ডার্ডের সবচেয়ে জনপ্রিয় ইমপ্লিমেন্টেশান হচ্ছে আমাদের আলোচ্য জাভাস্ক্রিপ্ট। নানা চড়াই-উতড়াই পেরিয়ে, ধাপে ধাপে পরিবর্তন-পরিবর্ধন হয়ে বর্তমানে ইকমাস্ক্রিপ্ট ভার্শন ৭ এ এসে পৌঁছেছে। আর আমাদের আলোচনাও হবে জাভাস্ক্রিপ্টের সাম্প্রতিক সংস্করণগুলো নিয়ে।</p>\n<p>আশা করি একদিনের জন্য যথেষ্ট পরিমাণ আলোচনা হয়েছে। আজ এখানেই থামছি। আগামী পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।</p>\n<p>ধন্যবাদ। আল্লাহ হাফেজ।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>আসসালামু আলাইকুম। আমি শহীদ, প্রযুক্তি স্কুলের পক্ষ থেকে আপনাদের সবাইকে জানাই স্বাগতম।</p>\n<p>বর্তমান সময়ের সবচেয়ে জনপ্রিয় প্রোগ্রামিং ভাষাগুলোর মধ্যে জাভাস্ক্রিপ্ট অন্যতম। ফ্রন্ট-এন্ড, সার্ভার, মোবাইল অ্যাপ এমনকি <a href=\"https://foundation.nodejs.org/wp-content/uploads/sites/50/2017/09/Node_CaseStudy_Nasa_FNL.pdf\" target=\"_blank\" rel=\"noopener\">নাসায়ও</a> ব্যবহৃত হচ্ছে জাভাস্ক্রিপ্ট। আমাদের দেশেও দিন দিন এর ব্যবহার বাড়ছে; বিশেষ করে ফ্রন্ট-এন্ড সেক্টরে। কিন্তু দু:খের ব্যাপার হলো প্রয়োজনের তুলনায় আমাদের দেশে জাভাস্ক্রিপ্ট ডেভেলপারের সংখ্যা অনেক কম। এর উল্লেখযোগ্য কিছু কারণ হলো: বিশ্ববিদ্যালয় পর্যায়ে জাভাস্ক্রিপ্ট না শেখানো, কেবল ফ্রন্ট-এন্ড ডেভেলপমেন্টেই জাভাস্ক্রিপ্ট ব্যবহৃত হয় এমন ধারণা করা, জাভাস্ক্রিপ্টও যে অন্যান্য প্রোগ্রামিং ভাষার মতোই শক্তিশালি তার সম্পর্কে ধারণা না থাকা।</p>\n<p>আমাদের এই টিউটোরিয়াল সিরিজটিতে আমরা জাভাস্ক্রিপ্টকে শেখার চেষ্টা করবো একটি পূর্ণাঙ্গ প্রোগ্রামিং ভাষা হিসেবে। জানার চেষ্টা করবো অন্যান্য প্রোগ্রামিং ভাষার মতো জাভাস্ক্রিপ্ট দিয়ে কীভাবে নানা প্রোগ্রামিং সমস্যার সমাধান করা যায়। তাহলে চলুন আর কথা না বাড়িয়ে আমরা আমাদের আজকের পাঠ শুরু করি।</p>\n<p>কোড লেখালেখিতে ঝাপিয়ে পড়ার আগে আমরা কিছু তথ্য ও তত্ত্ব নিয়ে আলোচনা করবো। এতে একদিকে আমাদের প্রোগ্রামিংয়ের ভিত্তি মজবুত হবে, অন্যদিকে মজার মজার তথ্য দিবে অনুপ্রেরণা। যেহেতু এটি আমাদের প্রথম পর্ব তাই আজকের পর্বটিতে আমরা জানার চেষ্টা করবো জাভাস্ক্রিপ্ট নিয়ে কিছু তথ্য।</p>\n<p>জাভাস্ক্রিপ্টের ইতিহাসটা কিছুটা মজার। ১৯৯৫ সালে নেটস্কেপ কমিউনিকেশন নামের এক কোম্পানি ব্র্যান্ডন এইখ নামের এক কম্পিউটার প্রকৌশলীকে দায়িত্ব দেয় তাদের ব্রাউজারে ব্যবহারের জন্য একটি প্রোগ্রামিং ভাষা তৈরি করতে। ব্রাউজারটির নাম ছিলো নেটস্কেপ নেভিগেটর, যা পরবর্তীতে ফায়ারফক্সে রূপান্তরিত হয়। ব্র্যান্ডন এইখ তার কাজ শুরু করার আগেই নেটস্কেপ সান মাইক্রোসিস্টেমের সাথে আলোচনা করে ঠিক করে নেয় তাদের ব্রাউজারে সানের জাভা প্রোগ্রামিং ভাষাটি ব্যবহার করার। এর কারণ ছিলো তখনকার সেরা প্রোগ্রামিং ভাষা জাভা ব্যবহার করে সেরা ব্রাউজার নির্মাতা মাইক্রসফটের সাথে পাল্লা দেয়া।</p>\n<p>তাই তারা সিদ্ধান্ত নেয় তাদের নির্মিত ভাষা দেখতে জাভার মতো হবে; তখনকার অন্যান্য প্রোগ্রামিং ভাষা পার্ল, পাইথন কিংবা স্কিমের মতো না। প্রতিযোগীতার দৌড়ে এগিয়ে থাকার জন্য ব্র্যান্ডন এইখ জাভাস্ক্রিপ্টের প্রথম খসরাটি (প্রোটোটাইপটি) তৈরি করেন মাত্র ১০ দিনে। মকা নামে এই ভাষাটি নির্মিত হলেও, প্রথম যখন এটি নেটস্কেপ নেভিগেটর ২.০ এ সংযুক্ত হয় তখন এর অফিসিয়াল নাম ছিলো লাইভস্ক্রিপ্ট। পরবর্তীতে নেটস্কেপ নেভিগেটর ৩.০ এ নাম পরিবর্তন করে রাখা হয় জাভাস্ক্রিপ্ট। এই নামটি মানুষের মাঝে বিভ্রান্তি সৃষ্টি করেছিলো। নামের সাথে জাভা থাকায় অনেকে মনে করতো এটি জাভারই একটি অংশ (যা এখনো অনেকে মনে করেন)। এটা আসলে ছিলো একটা মার্কেটিং পলিসি। তখনকার সেরা ভাষা জাভার জনপ্রিয়তাকে কাজে লাগানোই ছিলো মূল উদ্দেশ্য।</p>\n<p>১৯৯৬ সালে নেটস্কেপ ইকমা ইন্টারন্যাশনালের কাছে জাভাস্ক্রিপ্ট ভাষাটি প্রেরণ করে একটি স্টান্ডার্ড তৈরি করার জন্য। আর এ পথ ধরেই ১৯৯৭ সাথে প্রকাশিত হয় জাভাস্ক্রিপ্টের প্রথম ল্যাঙ্গুয়েজ স্ট্যান্ডার্ড, যার অফিসিয়াল নাম ছিলো ইকমাস্ক্রিপ্ট। ইকমাস্ক্রিপ্ট স্ট্যান্ডার্ডের সবচেয়ে জনপ্রিয় ইমপ্লিমেন্টেশান হচ্ছে আমাদের আলোচ্য জাভাস্ক্রিপ্ট। নানা চড়াই-উতড়াই পেরিয়ে, ধাপে ধাপে পরিবর্তন-পরিবর্ধন হয়ে বর্তমানে ইকমাস্ক্রিপ্ট ভার্শন ৭ এ এসে পৌঁছেছে। আর আমাদের আলোচনাও হবে জাভাস্ক্রিপ্টের সাম্প্রতিক সংস্করণগুলো নিয়ে।</p>\n<p>আশা করি একদিনের জন্য যথেষ্ট পরিমাণ আলোচনা হয়েছে। আজ এখানেই থামছি। আগামী পর্বে আমরা জানার চেষ্টা করবো কীভাবে একটি জাভাস্ক্রিপ্ট Dev Environment সেট আপ করা যায়।</p>\n<p>ধন্যবাদ। আল্লাহ হাফেজ।</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjoqo6ovj0001gca26l64pb7b","category_id":"cjoqo6ovt0003gca26d8pra9z","_id":"cjoqo6ow70009gca2q9yrw8g8"},{"post_id":"cjoqo6ovp0002gca23ow8h6xs","category_id":"cjoqo6ovt0003gca26d8pra9z","_id":"cjoqo6ow9000bgca26gz9pxb3"},{"post_id":"cjoqo6ovv0005gca25ft4wwzw","category_id":"cjoqo6ow70008gca2wksvypez","_id":"cjoqo6owa000dgca2c81474at"},{"post_id":"cjoqo6own000sgca2s75nbxqn","category_id":"cjoqo6ovt0003gca26d8pra9z","_id":"cjoqo6owt000ygca2t74zw7ul"},{"post_id":"cjoqo6owo000tgca2gkkvk8kk","category_id":"cjoqo6ovt0003gca26d8pra9z","_id":"cjoqo6owv0010gca2y2s5vcch"},{"post_id":"cjoqo6owq000vgca2yy6bkc55","category_id":"cjoqo6ovt0003gca26d8pra9z","_id":"cjoqo6oww0012gca2d0x816wx"},{"post_id":"cjoqo6ows000xgca2bhqcnksz","category_id":"cjoqo6ow70008gca2wksvypez","_id":"cjoqo6owx0014gca25fcmbpgq"}],"PostTag":[{"post_id":"cjoqo6ovj0001gca26l64pb7b","tag_id":"cjoqo6ovu0004gca2d8ki9vj9","_id":"cjoqo6owb000fgca2z17mc1hy"},{"post_id":"cjoqo6ovj0001gca26l64pb7b","tag_id":"cjoqo6ovy0007gca2sl75nrvb","_id":"cjoqo6owb000ggca2fdtf7zba"},{"post_id":"cjoqo6ovj0001gca26l64pb7b","tag_id":"cjoqo6ow7000agca2nu4rfq9e","_id":"cjoqo6owc000igca2d0dslho0"},{"post_id":"cjoqo6ovj0001gca26l64pb7b","tag_id":"cjoqo6ow9000cgca2otg3bs52","_id":"cjoqo6owc000jgca2zhtocdq3"},{"post_id":"cjoqo6ovp0002gca23ow8h6xs","tag_id":"cjoqo6ovu0004gca2d8ki9vj9","_id":"cjoqo6owd000lgca2139bn2hm"},{"post_id":"cjoqo6ovp0002gca23ow8h6xs","tag_id":"cjoqo6ovy0007gca2sl75nrvb","_id":"cjoqo6owd000mgca2j179umkl"},{"post_id":"cjoqo6ovv0005gca25ft4wwzw","tag_id":"cjoqo6owc000kgca2a4de8jfv","_id":"cjoqo6owe000pgca2q8t2kp7f"},{"post_id":"cjoqo6ovv0005gca25ft4wwzw","tag_id":"cjoqo6owd000ngca24cnydu48","_id":"cjoqo6owe000qgca20skwf8nm"},{"post_id":"cjoqo6ovv0005gca25ft4wwzw","tag_id":"cjoqo6owe000ogca2uuu6fx26","_id":"cjoqo6owe000rgca22t8n20tw"},{"post_id":"cjoqo6own000sgca2s75nbxqn","tag_id":"cjoqo6ovu0004gca2d8ki9vj9","_id":"cjoqo6owq000ugca2i3xekqe2"},{"post_id":"cjoqo6owo000tgca2gkkvk8kk","tag_id":"cjoqo6ovu0004gca2d8ki9vj9","_id":"cjoqo6ows000wgca28o6h1oam"},{"post_id":"cjoqo6owq000vgca2yy6bkc55","tag_id":"cjoqo6ovu0004gca2d8ki9vj9","_id":"cjoqo6owv000zgca21gvppwqh"},{"post_id":"cjoqo6ows000xgca2bhqcnksz","tag_id":"cjoqo6owc000kgca2a4de8jfv","_id":"cjoqo6oww0011gca2e5it9yso"},{"post_id":"cjoqo6ows000xgca2bhqcnksz","tag_id":"cjoqo6owd000ngca24cnydu48","_id":"cjoqo6owx0013gca2obmfiqas"},{"post_id":"cjoqo6ows000xgca2bhqcnksz","tag_id":"cjoqo6owe000ogca2uuu6fx26","_id":"cjoqo6owy0015gca26bhvie5r"}],"Tag":[{"name":"ওয়েব ডেভেলপমেন্ট","_id":"cjoqo6ovu0004gca2d8ki9vj9"},{"name":"html","_id":"cjoqo6ovy0007gca2sl75nrvb"},{"name":"reactjs","_id":"cjoqo6ow7000agca2nu4rfq9e"},{"name":"github","_id":"cjoqo6ow9000cgca2otg3bs52"},{"name":"javascript","_id":"cjoqo6owc000kgca2a4de8jfv"},{"name":"জাভাস্ক্রিপ্ট","_id":"cjoqo6owd000ngca24cnydu48"},{"name":"প্রোগ্রামিং","_id":"cjoqo6owe000ogca2uuu6fx26"}]}}