{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/programmers/source/css/prism (copy).css","path":"css/prism (copy).css","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/prism.css","path":"css/prism.css","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/programmers/source/img/bg.dark.jpg","path":"img/bg.dark.jpg","modified":0,"renderable":1},{"_id":"themes/programmers/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/programmers/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/programmers/source/js/prism.js","path":"js/prism.js","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/img/bg.dark.jpg","path":"css/img/bg.dark.jpg","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/material.min.css","path":"css/material.min.css","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/img/bg.jpg","path":"css/img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/programmers/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"13ec401be1da06329c44c4d3f8f64611cc42979a","modified":1518840194152},{"_id":"themes/programmers/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1518621045698},{"_id":"themes/programmers/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1518621045698},{"_id":"themes/programmers/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1518621045698},{"_id":"themes/programmers/_config.yml","hash":"486316d7a0ff395c971b26e43ee2e1d85b6d84f7","modified":1518836161478},{"_id":"themes/programmers/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1518621045698},{"_id":"source/_posts/frontend-guideline-01.md","hash":"b0adeeba9c7ae39dedf877bde0ee01c4c10aaba0","modified":1518842168924},{"_id":"source/_posts/frontend-guideline-02.md","hash":"e4103631ce6438bba4173c7e0d31ff6dc17c777a","modified":1518842212928},{"_id":"source/_posts/html-css-intro-01.md","hash":"6182eb099ea47a89b398dc93eebb9daca4b0fd12","modified":1518839202872},{"_id":"source/_posts/portfolio-design-guideline.md","hash":"d2e7e5fb1d1eadc7895d3247c35866a4c1532805","modified":1518842508445},{"_id":"themes/programmers/languages/bn.yml","hash":"1c749e5c7001b39f42ebc6a239cf9a3c1489cdf9","modified":1518776489047},{"_id":"themes/programmers/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1518621045698},{"_id":"themes/programmers/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1518621045698},{"_id":"themes/programmers/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1518621045698},{"_id":"themes/programmers/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1518621045698},{"_id":"themes/programmers/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1518621045698},{"_id":"themes/programmers/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1518621045698},{"_id":"themes/programmers/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1518621045698},{"_id":"themes/programmers/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1518621045698},{"_id":"themes/programmers/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1518621045698},{"_id":"themes/programmers/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1518621045698},{"_id":"themes/programmers/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1518621045698},{"_id":"themes/programmers/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1518621045698},{"_id":"themes/programmers/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1518621045698},{"_id":"themes/programmers/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1518621045698},{"_id":"themes/programmers/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1518621045698},{"_id":"themes/programmers/layout/layout.ejs","hash":"2a998d0053d1fe914dce58d5eac7756939af4ab8","modified":1518741726794},{"_id":"themes/programmers/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1518621045698},{"_id":"themes/programmers/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1518621045698},{"_id":"themes/programmers/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1518621045698},{"_id":"themes/programmers/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/after-footer.ejs","hash":"25a8700e253e337775472bdc091defc91d5ad27a","modified":1518750209665},{"_id":"themes/programmers/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/article.ejs","hash":"1cf38a311440957c7d08fb1e3f3c3aa8ae33530a","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/blog-posts.ejs","hash":"e77826c0c058f2a08d5777cd07b3c95811f7dce7","modified":1518839359569},{"_id":"themes/programmers/layout/_partial/course-card.ejs","hash":"9e2f0fb9fb7f0b2e575f01a0914b184cb49e9091","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/footer.ejs","hash":"03416b8fad646ba2b45c76b384ede7dd8d74bdfb","modified":1518835572760},{"_id":"themes/programmers/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/head.ejs","hash":"957944a7e2f1e316f5018e9965858414f9b3ffcb","modified":1518842861962},{"_id":"themes/programmers/layout/_partial/header.ejs","hash":"5324d6c7b55d0ca41a90212b3d85d246a0f18420","modified":1518742645097},{"_id":"themes/programmers/layout/_partial/home-posts.ejs","hash":"0cdb73a65bf4e3855a9ebeecba1a9c48f4667c24","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/main-nav.ejs","hash":"72ecfb0c6fef3a1bdfc4b3081b67d93d87b040c7","modified":1518742308463},{"_id":"themes/programmers/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1518621045698},{"_id":"themes/programmers/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1518621045698},{"_id":"themes/programmers/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1518621045698},{"_id":"themes/programmers/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1518621045698},{"_id":"themes/programmers/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1518621045698},{"_id":"themes/programmers/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1518621045698},{"_id":"themes/programmers/source/css/prism (copy).css","hash":"a415dcc0bbf9676f3ee7f48138a505931a5d52c8","modified":1518621045698},{"_id":"themes/programmers/source/css/prism.css","hash":"2c82536e391169c105061885751f4b66759defee","modified":1518621045698},{"_id":"themes/programmers/source/css/style.scss","hash":"e5a8c66d2c2bde47dccc4745b5e23221764f0260","modified":1518621045698},{"_id":"themes/programmers/source/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1518621045702},{"_id":"themes/programmers/source/js/script.js","hash":"02b1238125d008e56198b045994b30482b7894d0","modified":1518750635048},{"_id":"themes/programmers/layout/_partial/post/share.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1518621045698},{"_id":"themes/programmers/source/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1518621045702},{"_id":"themes/programmers/source/js/prism.js","hash":"b0fc5d5ecb7061e6917fab97abe93882c2451dda","modified":1518621045702},{"_id":"themes/programmers/layout/_partial/post/author.ejs","hash":"178d6249d1037c69897bd980fba226027fcd444b","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/category.ejs","hash":"5002d3307815b96400ea7c3cc8bb78382ec9701a","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/date.ejs","hash":"8a3e750d89555e76086185e51248a0eed7d68547","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/nav.ejs","hash":"08f8baa8efea4bf12fba9c0fabc33514b0a29288","modified":1518841219548},{"_id":"themes/programmers/layout/_partial/post/pageview.ejs","hash":"b1fa971daab77857586258fdb09fc7cff983cef9","modified":1518750682156},{"_id":"themes/programmers/layout/_partial/post/reading-time.ejs","hash":"1d6b827b5f9c06d34e8721cb29228235d8f2f667","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1518621045698},{"_id":"themes/programmers/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1518621045698},{"_id":"themes/programmers/source/css/components/_article-nav.scss","hash":"9a8048d9c16e869568d988d21e3477171aa8fc0a","modified":1518835314143},{"_id":"themes/programmers/source/css/components/_article.scss","hash":"c3226fa7550021782aa8da60b0eb256cfdba7027","modified":1518840146648},{"_id":"themes/programmers/source/css/components/_blog-posts.scss","hash":"7de9d5ae0d6a75bd1a8539f4fdb0a15f056813c3","modified":1518840140784},{"_id":"themes/programmers/source/css/components/_code-highlight.scss","hash":"0b8ea8f9888743c9b01565bee8376e94af884d7a","modified":1518748680211},{"_id":"themes/programmers/source/css/components/_colors.scss","hash":"aaa8ff5b5d2f61948fc4c31d5cff54d25b47d57d","modified":1518743635182},{"_id":"themes/programmers/source/css/components/_common.scss","hash":"a2a0c12b327613610c6f68e09977d8f8c535c0cb","modified":1518742738225},{"_id":"themes/programmers/source/css/components/_fonts.scss","hash":"a85806362447ff6288d5cbafc7bdec75bc78cad2","modified":1518621045698},{"_id":"themes/programmers/source/css/components/_footer.scss","hash":"72617f7eb4baeac0365e38853d07f7fe4bd68a0f","modified":1518621045698},{"_id":"themes/programmers/source/css/components/_header.scss","hash":"b71e7e6abad782a8bfba3a04cbbd3bdaa0d61ead","modified":1518879682546},{"_id":"themes/programmers/source/css/components/_home-posts.scss","hash":"4b0637b2e37f2c4d962ed2bbbfb0d7ff32fa3910","modified":1518621045698},{"_id":"themes/programmers/source/css/components/_main.scss","hash":"f995e197a1bdf618aa13da8f98fa9f039a1b89cc","modified":1518879423157},{"_id":"themes/programmers/source/css/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1518621045698},{"_id":"themes/programmers/source/css/material.min.css","hash":"112e9fc902e1b0f0361318cae20beaeddedec9e8","modified":1518621045698},{"_id":"themes/programmers/source/css/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1518621045698},{"_id":"themes/programmers/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1518621045698},{"_id":"public/archives/index.html","hash":"5b7bdb09fe5a46baaeeac6cd843333359f6f5421","modified":1518879451933},{"_id":"public/archives/2016/index.html","hash":"20d492b00072c587daeebc1cd860159432858440","modified":1518879451933},{"_id":"public/archives/2016/12/index.html","hash":"3d86b2adfd05f4547daaa1c7c2d471d1040b05c6","modified":1518879451933},{"_id":"public/archives/2017/index.html","hash":"f2d5defc771718035a5d303e181d8589c8b0acf4","modified":1518879451933},{"_id":"public/archives/2017/02/index.html","hash":"0ad72c6694e9307e7f1660b5dfe258a64fe7929f","modified":1518879451933},{"_id":"public/archives/2017/03/index.html","hash":"3aac444be2115569b73c33d60b9e90e61d606bd1","modified":1518879451933},{"_id":"public/courses/ওয়েব-ডেভেলপমেন্ট/index.html","hash":"5c1b5437c52582f0ef437915c7488a8ab5d854d3","modified":1518879451933},{"_id":"public/index.html","hash":"58afe92684a4a7c7f8f3581742b9417920e66e7b","modified":1518879451933},{"_id":"public/tags/ওয়েব-ডেভেলপমেন্ট/index.html","hash":"ec33f27c5d77d5818900f89648aaefdf960eb989","modified":1518879451933},{"_id":"public/2017/03/09/html-css-intro-01/index.html","hash":"8047a2b46f1aa9367f953f1f348f89a80152b469","modified":1518879451934},{"_id":"public/2017/02/21/portfolio-design-guideline/index.html","hash":"ab5c57aeeb328c8503c2361e8c18b5e6a0297499","modified":1518879451934},{"_id":"public/2016/12/31/frontend-guideline-02/index.html","hash":"09b185347dcf47f1c840b3eceb1a45c8436f8d8d","modified":1518879451934},{"_id":"public/2016/12/13/frontend-guideline-01/index.html","hash":"e48ce328973448a594a667d9435c47387b05babd","modified":1518879451934},{"_id":"public/CNAME","hash":"13ec401be1da06329c44c4d3f8f64611cc42979a","modified":1518879451936},{"_id":"public/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1518879451936},{"_id":"public/css/img/bg.dark.jpg","hash":"3ee9258a517cc28733c657e5b22bf7ee58c59648","modified":1518879451936},{"_id":"public/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1518879451940},{"_id":"public/css/img/bg.jpg","hash":"cfaf3a551ad524d25f1da17f6973af6b255c2fda","modified":1518879451941},{"_id":"public/css/prism (copy).css","hash":"a415dcc0bbf9676f3ee7f48138a505931a5d52c8","modified":1518879451949},{"_id":"public/js/script.js","hash":"02b1238125d008e56198b045994b30482b7894d0","modified":1518879451949},{"_id":"public/css/prism.css","hash":"2c82536e391169c105061885751f4b66759defee","modified":1518879451949},{"_id":"public/js/prism.js","hash":"b0fc5d5ecb7061e6917fab97abe93882c2451dda","modified":1518879451950},{"_id":"public/css/material.min.css","hash":"112e9fc902e1b0f0361318cae20beaeddedec9e8","modified":1518879451950},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1518879451952},{"_id":"public/css/style.css","hash":"59c707662983e0b2c676637dd51f981e6cc4967e","modified":1518879451972}],"Category":[{"name":"ওয়েব ডেভেলপমেন্ট","_id":"cjdrhlxix0002o4a2uhn2yz4q"}],"Data":[],"Page":[],"Post":[{"title":"ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ১ - কাজের পরিধি ও দায়িত্ব","date":"2016-12-13T04:00:00.000Z","author":"কামাল শরীফ","_content":"[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]\n\nএকটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল [jQuery](https://jquery.com/)। ২০০৯ সালে [node](https://nodejs.org/en/) এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।\n\n২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?\n\npsd থেকে html ও wireframe:\nএটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল ([sketch](https://www.sketchapp.com/)) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। [ডেভেলাপমেন্ট](https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm) সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত [wireframe](https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399) তৈরি করা জানতে হবে।\n\nডিজাইনে সক্রিয় ভূমিকাঃ\nসম্পূর্ণ ডিজাইন পাওয়ার পর অথবা [ডিজাইন প্রসেস](https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency) চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।\n\nক্লায়েন্ট সাইড লজিকঃ\nJavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।\n\nকিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার [api](https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az) ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।\n\nঅন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।\n\n[রেসপন্সিভ](https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/) এবং ক্রস-ব্রাউজার কম্পেটিবলঃ\nস্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে [ক্রস-ব্রাউজার/প্লাটফর্ম](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction) কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।\n\nপার্ফমেন্স অপ্টিমাইজেশনঃ\n[পার্ফমেন্স অপ্টিমাইজেশন](https://www.keycdn.com/blog/website-performance-optimization/) নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।\n\nপ্রতিষ্ঠানে যেই [টাস্ক রানার](https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/) অথবা [মডিউল বান্ডলার](https://www.sitepoint.com/javascript-modules-bundling-transpiling/) ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।\n\nআপ-টু-ডেট থাকাঃ\nFrontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। [নিউজলেটার](http://css-weekly.com/), ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে [টেস্ট](https://codepen.io/) করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।\n\nFrontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","source":"_posts/frontend-guideline-01.md","raw":"---\ntitle: ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ১ - কাজের পরিধি ও দায়িত্ব\ndate: 2016-12-13 10:00:00\nauthor: কামাল শরীফ\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\n[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]\n\nএকটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল [jQuery](https://jquery.com/)। ২০০৯ সালে [node](https://nodejs.org/en/) এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।\n\n২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?\n\npsd থেকে html ও wireframe:\nএটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল ([sketch](https://www.sketchapp.com/)) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। [ডেভেলাপমেন্ট](https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm) সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত [wireframe](https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399) তৈরি করা জানতে হবে।\n\nডিজাইনে সক্রিয় ভূমিকাঃ\nসম্পূর্ণ ডিজাইন পাওয়ার পর অথবা [ডিজাইন প্রসেস](https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency) চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।\n\nক্লায়েন্ট সাইড লজিকঃ\nJavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।\n\nকিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার [api](https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az) ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।\n\nঅন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।\n\n[রেসপন্সিভ](https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/) এবং ক্রস-ব্রাউজার কম্পেটিবলঃ\nস্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে [ক্রস-ব্রাউজার/প্লাটফর্ম](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction) কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।\n\nপার্ফমেন্স অপ্টিমাইজেশনঃ\n[পার্ফমেন্স অপ্টিমাইজেশন](https://www.keycdn.com/blog/website-performance-optimization/) নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।\n\nপ্রতিষ্ঠানে যেই [টাস্ক রানার](https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/) অথবা [মডিউল বান্ডলার](https://www.sitepoint.com/javascript-modules-bundling-transpiling/) ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।\n\nআপ-টু-ডেট থাকাঃ\nFrontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। [নিউজলেটার](http://css-weekly.com/), ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে [টেস্ট](https://codepen.io/) করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।\n\nFrontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","slug":"frontend-guideline-01","published":1,"updated":"2018-02-17T04:36:08.924Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdrhlxiq0000o4a2mvdwtcbx","content":"<p>[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]</p>\n<p>একটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল <a href=\"https://jquery.com/\" target=\"_blank\" rel=\"noopener\">jQuery</a>। ২০০৯ সালে <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node</a> এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।</p>\n<p>২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?</p>\n<p>psd থেকে html ও wireframe:<br>এটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল (<a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">sketch</a>) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। <a href=\"https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm\" target=\"_blank\" rel=\"noopener\">ডেভেলাপমেন্ট</a> সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত <a href=\"https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399\" target=\"_blank\" rel=\"noopener\">wireframe</a> তৈরি করা জানতে হবে।</p>\n<p>ডিজাইনে সক্রিয় ভূমিকাঃ<br>সম্পূর্ণ ডিজাইন পাওয়ার পর অথবা <a href=\"https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency\" target=\"_blank\" rel=\"noopener\">ডিজাইন প্রসেস</a> চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।</p>\n<p>ক্লায়েন্ট সাইড লজিকঃ<br>JavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।</p>\n<p>কিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার <a href=\"https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az\" target=\"_blank\" rel=\"noopener\">api</a> ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।</p>\n<p>অন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।</p>\n<p><a href=\"https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/\" target=\"_blank\" rel=\"noopener\">রেসপন্সিভ</a> এবং ক্রস-ব্রাউজার কম্পেটিবলঃ<br>স্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\" target=\"_blank\" rel=\"noopener\">ক্রস-ব্রাউজার/প্লাটফর্ম</a> কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।</p>\n<p>পার্ফমেন্স অপ্টিমাইজেশনঃ<br><a href=\"https://www.keycdn.com/blog/website-performance-optimization/\" target=\"_blank\" rel=\"noopener\">পার্ফমেন্স অপ্টিমাইজেশন</a> নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।</p>\n<p>প্রতিষ্ঠানে যেই <a href=\"https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/\" target=\"_blank\" rel=\"noopener\">টাস্ক রানার</a> অথবা <a href=\"https://www.sitepoint.com/javascript-modules-bundling-transpiling/\" target=\"_blank\" rel=\"noopener\">মডিউল বান্ডলার</a> ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।</p>\n<p>আপ-টু-ডেট থাকাঃ<br>Frontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। <a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">নিউজলেটার</a>, ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"noopener\">টেস্ট</a> করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।</p>\n<p>Frontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>[লেখালেখির অভ্যাস তেমন নেই বললেই চলে। যেটুকু আছে তা বাংলায় করা হয় না। তাই দৃষ্টিকটু ভুল থাকা খুবই স্বাভাবিক। ক্ষমাসুন্দর দৃষ্টিতে দেখার অনুরোধ রইলো।]</p>\n<p>একটা সময় ছিল যখন html এবং CSS খুব কঠিন কিছু ছিল না। কিছু রুল জানলেই যথেষ্ট ছিল। সাথে ছিল <a href=\"https://jquery.com/\" target=\"_blank\" rel=\"noopener\">jQuery</a>। ২০০৯ সালে <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node</a> এবং ২০১০ সালে npm ও angularjs আসার পরে ক্লায়েন্ট সাইড ডেভেলাপমেন্টে সৃষ্টিশীলতার সুযোগ ও জটিলতা উভয়ই ক্রমবর্ধমান হারে বৃদ্ধি পেতে থাকে। Full stack developer এর প্রচলিত প্রথা ভেঙে আলাদা হতে থাকে ক্লায়েন্ট সাইড ও সার্ভার সাইড ডেভেলাপমেন্ট। তৈরি হয় দক্ষ frontend developer (FE Dev) এর চাহিদা এবং তা বাড়তেও থাকে। এই ধারা আজও অব্যাহত আছে।</p>\n<p>২০১৭ সালের সূচনালঘ্নে এসে FE Dev এর কাজের পরিধিও অনেক বেড়ে গেছে। ডেভেলাপমেন্ট টিমে একজন FE Dev কে ডিজাইনার এবং backend ডেভেলাপার উভয়ের সাথে কাজ করতে হয়। তাই নিজের কাজের পাশাপাশি তাদের কাজ সম্পর্কেও মৌলিক ধারণা রাখতে হবে। আচ্ছা, ফ্রন্ট-এন্ড ডেভেলাপারের নিজের কাজগুলো কী কী?</p>\n<p>psd থেকে html ও wireframe:<br>এটা প্রায় সবাই জানি। ফটোশপ ফাইল (psd), ইলাস্ট্রেটার ফাইল (ai) বা স্কেচ ফাইল (<a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">sketch</a>) থেকে html ও CSS এ রূপ দেওয়া। যেটা অনেকেই জানি না সেটা হলো, FE Dev কে photoshop, illustrator ও sketch দিয়ে ডিজাইনে একটু-আধটু পরিবর্তন করার মতো বেসিক ধারণা থাকতে হবে। <a href=\"https://www.tutorialspoint.com/software_engineering/software_development_life_cycle.htm\" target=\"_blank\" rel=\"noopener\">ডেভেলাপমেন্ট</a> সাইকেলে যে কোনো সময়ে আইডিয়া বা কনসেপ্ট টিম মেম্বারদের সাথে আলোচনা করার জন্য দ্রুত <a href=\"https://webdesign.tutsplus.com/articles/a-beginners-guide-to-wireframing--webdesign-7399\" target=\"_blank\" rel=\"noopener\">wireframe</a> তৈরি করা জানতে হবে।</p>\n<p>ডিজাইনে সক্রিয় ভূমিকাঃ<br>সম্পূর্ণ ডিজাইন পাওয়ার পর অথবা <a href=\"https://www.shopify.com/partners/blog/109299398-6-tips-for-building-a-web-design-process-that-boosts-your-team-s-efficiency\" target=\"_blank\" rel=\"noopener\">ডিজাইন প্রসেস</a> চলাকালীন সময়ে যদি এমন মনে হয় যে বতর্মান ডিজাইনে ফাইনাল প্রডাক্টে বিরূপ প্রভাব পড়বে তবে তা ডিজাইনার সহ অন্যান্য টিম মেম্বারদের সাথে আলোচনা করতে হবে এবং সমাধান প্রক্রিয়ায় সক্রিয় অংশগ্রহণ করতে হবে।</p>\n<p>ক্লায়েন্ট সাইড লজিকঃ<br>JavaScript দিয়ে ক্লায়েন্ট সাইড লজিক লিখতে হবে। এক্ষেত্রে প্রতিষ্ঠানভেদে কাজের প্রকৃতি দুই ধরণের হতে পারে।</p>\n<p>কিছু প্রতিষ্ঠান আছে যেখানে backend ডেভেলাপার <a href=\"https://medium.freecodecamp.com/what-is-an-api-in-english-please-b880a3214a82#.sig0sa6az\" target=\"_blank\" rel=\"noopener\">api</a> ডেভেলাপ করে। FE Dev ক্লায়েন্টে api integrate করে। তবে এক্ষেত্রে সাধারণত দুই জন ডেভেলাপার থাকেন। একজনের কাজ html ও CSS এ রূপ দেওয়া এবং অন্যজন শুধু জাভাস্ক্রিপ্ট নিয়ে কাজ করেন। তিনি শুধু ক্লায়েন্ট সাইড JavaScript ডেভেলাপার হতে পারেন অথবা full stack JavaScript Developer হতে পারেন।</p>\n<p>অন্য প্রতিষ্ঠানগুলোতে FE Dev html ও CSS এর সাথে কিছু জাভাস্ক্রিপ্ট লেখেন। বাকি কাজসহ backend অন্যজন করেন।</p>\n<p><a href=\"https://thenextweb.com/dd/2015/12/22/the-web-in-2016-long-live-responsive-design/\" target=\"_blank\" rel=\"noopener\">রেসপন্সিভ</a> এবং ক্রস-ব্রাউজার কম্পেটিবলঃ<br>স্মার্টফোন, ট্যাবের আবির্ভাব ও এগুলোর ব্যাপক ব্যবহার FE Dev এর কদর বৃদ্ধির অন্যতম প্রধান কারণ। একই কথা বলা যেতে পারে <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\" target=\"_blank\" rel=\"noopener\">ক্রস-ব্রাউজার/প্লাটফর্ম</a> কম্পেটিবেলিটির ক্ষেত্রেও। বিভিন্ন আকারের ডিভাইসে ডিজাইন দৃষ্টিনন্দন ও ফাংশনাল রাখতে হবে।</p>\n<p>পার্ফমেন্স অপ্টিমাইজেশনঃ<br><a href=\"https://www.keycdn.com/blog/website-performance-optimization/\" target=\"_blank\" rel=\"noopener\">পার্ফমেন্স অপ্টিমাইজেশন</a> নিজেই একটা বিরাট ক্ষেত্র। অনেক বড় প্রতিষ্ঠানে বা প্রডাক্টে শুধু এই কাজের জন্যই একজন Performance Engineer থাকেন। পার্ফমেন্স ইঞ্জিনিয়ারিং ফ্রন্ট-এন্ড ডেভেলাপমেন্টের একটি শাখা।</p>\n<p>প্রতিষ্ঠানে যেই <a href=\"https://www.smashingmagazine.com/2016/06/harness-machines-productive-task-runners/\" target=\"_blank\" rel=\"noopener\">টাস্ক রানার</a> অথবা <a href=\"https://www.sitepoint.com/javascript-modules-bundling-transpiling/\" target=\"_blank\" rel=\"noopener\">মডিউল বান্ডলার</a> ব্যবহার হয় তা সম্পর্কে সম্যক ধারণা রাখতে হবে। অপ্টিমাইজেশন করার জন্য ব্যাক-এন্ড সম্পর্কে মৌলিক ধারণা থাকতে হবে।</p>\n<p>আপ-টু-ডেট থাকাঃ<br>Frontend development ফিল্ডে প্রতিদিনই বর্তমানের চেয়ে অধিকতর উন্নত নতুন কিছুর আগমন ঘটছে। FE Dev কে যতটুকু সম্ভব নিজেকে হালনাগাদ রাখতে হবে। <a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">নিউজলেটার</a>, ব্লগ ফলো করতে হবে, পড়তে হবে, নতুন কনসেপ্ট মাথায় আসলে <a href=\"https://codepen.io/\" target=\"_blank\" rel=\"noopener\">টেস্ট</a> করতে হবে। এ কাজটি নিজ দায়িত্বে এবং নিজের ফ্রি সময়ে করতে হবে।</p>\n<p>Frontend মানে শুধু psd to html বা শুধু JavaScript নয়। ফ্রন্ট-এন্ডের ব্যাপ্তি সুদূর প্রসারিত। কাজ করার অবারিত ক্ষেত্র। ফ্রন্ট-এন্ড মানে নিত্য-নতুন বাঁধা টপকানোর আনন্দ।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n"},{"title":"ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ২ - যা কিছু আয়ত্বে থাকা চাই","date":"2016-12-31T04:00:00.000Z","author":"কামাল শরীফ","_content":"আগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।\n\nযেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-\n\nওয়্যারফ্রেমিং:\nনতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত [wireframing](https://www.youtube.com/watch?v=i4Zg6_yKOh8) করা জানা থাকতে হবে। এটি করার জন্য [অনেক টুল/সার্ভিস](https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302) আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য [বেসিক](https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4) UX নিয়ে জানাশোনা থাকতে হবে।\n\nবাস্তবায়ন পরিকল্পনা বা Implementation Planning:\nনতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী [reuse](http://css.world/dry-css/) করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে [পরিকল্পনা](https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x) করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।\n\nPhotoshop/Illustrator/Sketch:\nপ্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে [স্কেচ](https://www.sketchapp.com/) এর বেসিক knowledge খুবই উপকারে দিবে।\n\nHTML ও CSS:\nএটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে [ব্রাউজার কীভাবে কাজ করে](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/) তা নিয়ে ধারণা থাকতে হবে।\n\nCSS Processor:\n[Bootstrap](http://getbootstrap.com/) এ কাজ করার সুবাদে অনেকেই [Less](http://lesscss.org/) এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর [ভেরিয়েবল](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [মিক্সিন](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [প্লেসহোল্ডার](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA) সম্পর্কে জানতে হবে। ইদানিং [PostCSS](http://postcss.org/) এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।\n\nরেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\nResponsive এবং [cross browser compatible](https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/) করা জানতেই হবে। [CSS ফ্রেমওয়ার্ক](https://speckyboy.com/top-50-css/), বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।\n\nজাভাস্ক্রিপ্টঃ\nJavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। [এখানে বেশ কিছু প্রশ্ন আছে](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f)। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।\n\nFE ডেভেলাপারদেরকে প্রধানত [দুইভাগে](https://css-tricks.com/the-front-end-developers-dilemma/) ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।\n\n[প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক](https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711) দুটোই শিখতে হবে। React নিয়ে [কমিনিউটিতে](https://www.facebook.com/groups/talkjs.net/) অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।\n\nটাস্ক রানার/ মডিউল বান্ডলারঃ\nGrunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল [concat ও মিনিফাই](https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos) করা পর্যন্ত শিখতে হবে।\n\nযোগাযোগ দক্ষতাঃ\nFE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।\n\nউল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ [কনফারেন্স টক](https://www.youtube.com/user/jsconfeu) দেখতে হবে।\n\nঅনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","source":"_posts/frontend-guideline-02.md","raw":"---\ntitle: ফ্রন্ট-এন্ড ডেভেলপার গাইড - পর্ব ২ - যা কিছু আয়ত্বে থাকা চাই\ndate: 2016-12-31 10:00:00\nauthor: কামাল শরীফ\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nআগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।\n\nযেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-\n\nওয়্যারফ্রেমিং:\nনতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত [wireframing](https://www.youtube.com/watch?v=i4Zg6_yKOh8) করা জানা থাকতে হবে। এটি করার জন্য [অনেক টুল/সার্ভিস](https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302) আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য [বেসিক](https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4) UX নিয়ে জানাশোনা থাকতে হবে।\n\nবাস্তবায়ন পরিকল্পনা বা Implementation Planning:\nনতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী [reuse](http://css.world/dry-css/) করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে [পরিকল্পনা](https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x) করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।\n\nPhotoshop/Illustrator/Sketch:\nপ্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে [স্কেচ](https://www.sketchapp.com/) এর বেসিক knowledge খুবই উপকারে দিবে।\n\nHTML ও CSS:\nএটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে [ব্রাউজার কীভাবে কাজ করে](https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/) তা নিয়ে ধারণা থাকতে হবে।\n\nCSS Processor:\n[Bootstrap](http://getbootstrap.com/) এ কাজ করার সুবাদে অনেকেই [Less](http://lesscss.org/) এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর [ভেরিয়েবল](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [মিক্সিন](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA), [প্লেসহোল্ডার](https://www.youtube.com/playlist?list=PL2CB1F80266E986EA) সম্পর্কে জানতে হবে। ইদানিং [PostCSS](http://postcss.org/) এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।\n\nরেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ\nResponsive এবং [cross browser compatible](https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/) করা জানতেই হবে। [CSS ফ্রেমওয়ার্ক](https://speckyboy.com/top-50-css/), বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।\n\nজাভাস্ক্রিপ্টঃ\nJavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। [এখানে বেশ কিছু প্রশ্ন আছে](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f)। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।\n\nFE ডেভেলাপারদেরকে প্রধানত [দুইভাগে](https://css-tricks.com/the-front-end-developers-dilemma/) ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।\n\n[প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক](https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711) দুটোই শিখতে হবে। React নিয়ে [কমিনিউটিতে](https://www.facebook.com/groups/talkjs.net/) অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।\n\nটাস্ক রানার/ মডিউল বান্ডলারঃ\nGrunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল [concat ও মিনিফাই](https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos) করা পর্যন্ত শিখতে হবে।\n\nযোগাযোগ দক্ষতাঃ\nFE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।\n\nউল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ [কনফারেন্স টক](https://www.youtube.com/user/jsconfeu) দেখতে হবে।\n\nঅনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।\n\nলেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।\n","slug":"frontend-guideline-02","published":1,"updated":"2018-02-17T04:36:52.928Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdrhlxiu0001o4a26xkyz5vt","content":"<p>আগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।</p>\n<p>যেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-</p>\n<p>ওয়্যারফ্রেমিং:<br>নতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত <a href=\"https://www.youtube.com/watch?v=i4Zg6_yKOh8\" target=\"_blank\" rel=\"noopener\">wireframing</a> করা জানা থাকতে হবে। এটি করার জন্য <a href=\"https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302\" target=\"_blank\" rel=\"noopener\">অনেক টুল/সার্ভিস</a> আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য <a href=\"https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4\" target=\"_blank\" rel=\"noopener\">বেসিক</a> UX নিয়ে জানাশোনা থাকতে হবে।</p>\n<p>বাস্তবায়ন পরিকল্পনা বা Implementation Planning:<br>নতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী <a href=\"http://css.world/dry-css/\" target=\"_blank\" rel=\"noopener\">reuse</a> করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে <a href=\"https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x\" target=\"_blank\" rel=\"noopener\">পরিকল্পনা</a> করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।</p>\n<p>Photoshop/Illustrator/Sketch:<br>প্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে <a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">স্কেচ</a> এর বেসিক knowledge খুবই উপকারে দিবে।</p>\n<p>HTML ও CSS:<br>এটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে <a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\" target=\"_blank\" rel=\"noopener\">ব্রাউজার কীভাবে কাজ করে</a> তা নিয়ে ধারণা থাকতে হবে।</p>\n<p>CSS Processor:<br><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"noopener\">Bootstrap</a> এ কাজ করার সুবাদে অনেকেই <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">Less</a> এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">ভেরিয়েবল</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">মিক্সিন</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">প্লেসহোল্ডার</a> সম্পর্কে জানতে হবে। ইদানিং <a href=\"http://postcss.org/\" target=\"_blank\" rel=\"noopener\">PostCSS</a> এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।</p>\n<p>রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ<br>Responsive এবং <a href=\"https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/\" target=\"_blank\" rel=\"noopener\">cross browser compatible</a> করা জানতেই হবে। <a href=\"https://speckyboy.com/top-50-css/\" target=\"_blank\" rel=\"noopener\">CSS ফ্রেমওয়ার্ক</a>, বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।</p>\n<p>জাভাস্ক্রিপ্টঃ<br>JavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f\" target=\"_blank\" rel=\"noopener\">এখানে বেশ কিছু প্রশ্ন আছে</a>। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।</p>\n<p>FE ডেভেলাপারদেরকে প্রধানত <a href=\"https://css-tricks.com/the-front-end-developers-dilemma/\" target=\"_blank\" rel=\"noopener\">দুইভাগে</a> ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।</p>\n<p><a href=\"https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711\" target=\"_blank\" rel=\"noopener\">প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক</a> দুটোই শিখতে হবে। React নিয়ে <a href=\"https://www.facebook.com/groups/talkjs.net/\" target=\"_blank\" rel=\"noopener\">কমিনিউটিতে</a> অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।</p>\n<p>টাস্ক রানার/ মডিউল বান্ডলারঃ<br>Grunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল <a href=\"https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos\" target=\"_blank\" rel=\"noopener\">concat ও মিনিফাই</a> করা পর্যন্ত শিখতে হবে।</p>\n<p>যোগাযোগ দক্ষতাঃ<br>FE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।</p>\n<p>উল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ <a href=\"https://www.youtube.com/user/jsconfeu\" target=\"_blank\" rel=\"noopener\">কনফারেন্স টক</a> দেখতে হবে।</p>\n<p>অনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>আগের লেখাটিতে একজন frontend developer (FE Dev) এর দায়িত্বের প্রতি আলোকপাত করা হয়েছিল। ওই দায়িত্বগুলো সুষ্ঠুভাবে পালন করার জন্য যে দক্ষতাগুলো আয়ত্বে রাখতে হবে সেগুলি নিয়েই এই পোষ্ট।</p>\n<p>যেহেতু দায়িত্ব অনেক সেহেতু জানার তালিকাও বেশ বড়। সব বিষয়েই যে বিশেষজ্ঞ হতে হবে এমন নয়। হওয়া সম্ভবও নয়। তবে কিছু বিষয়ে হতে হবে। তাহলে শুরু করা যাক-</p>\n<p>ওয়্যারফ্রেমিং:<br>নতুন কোনো কনসেপ্ট বা ধারণা সহকর্মীদের সাথে আলোচনা বা তাদের থেকে ফিডব্যাক নেওয়ার জন্য দ্রুত <a href=\"https://www.youtube.com/watch?v=i4Zg6_yKOh8\" target=\"_blank\" rel=\"noopener\">wireframing</a> করা জানা থাকতে হবে। এটি করার জন্য <a href=\"https://www.creativebloq.com/wireframes/top-wireframing-tools-11121302\" target=\"_blank\" rel=\"noopener\">অনেক টুল/সার্ভিস</a> আছে। কনসেপ্টের গ্রহণযোগ্যতা বাড়ানোর জন্য <a href=\"https://medium.com/@uxhow/ux-design-resource-guide-926676be3e0#.dzmvmcpm4\" target=\"_blank\" rel=\"noopener\">বেসিক</a> UX নিয়ে জানাশোনা থাকতে হবে।</p>\n<p>বাস্তবায়ন পরিকল্পনা বা Implementation Planning:<br>নতুন ডিজাইন আসার পরে প্রথমে কি ভাবে html ও CSS লিখলে বেশী <a href=\"http://css.world/dry-css/\" target=\"_blank\" rel=\"noopener\">reuse</a> করা যাবে, ক্লাসের মধে্য conflict এড়ানো যাবে প্রভৃতি নিয়ে <a href=\"https://www.edx.org/course/advanced-css-concepts-microsoft-dev218x\" target=\"_blank\" rel=\"noopener\">পরিকল্পনা</a> করতে হবে। প্রজেক্টের শুরুতে এই প্ল্যানিং ফেইজকে অহেতুক সময় নষ্ট মনে হলেও, প্রজেক্ট লাইফ সাইকেলে এটি অনেকগুণ সময় বাঁচিয়ে দিবে। শুরু থেকেই পরিকল্পনা করার প্র্যাকটিস করতে থাকলে এই দক্ষতা অভিজ্ঞতা বৃদ্ধির সাথে সাথে শাণিত হতে থাকবে। এই ফেইজটিই একজন এক্সপার্টকে গড়পড়তা ডেভেলাপার থেকে পৃথক করে।</p>\n<p>Photoshop/Illustrator/Sketch:<br>প্রজেক্ট লাইফ সাইকেলে ডিজাইনে বেশ কিছু পরিবর্তন হয়। কিছু যোগ হয়, কিছু হয় বিয়োগ। ডিজাইনারকে সবসময় হাতের কাছে নাও পাওয়া যেতে পারে। তখন FE Dev কেই এই দায়িত্ব নিতে হবে। ফটোশপের বেসিক অপারেশনগুলি দখলে থাকতে হবে। Psd থেকে HTML করতে গেলে অবশ্যই ফটোশপে দক্ষতা লাগবে। ইলাস্ট্রেটর নিয়ে বেসিক ধারণা থাকলে উত্তম। উদাহরণস্বরূপ, আমার বর্তমান প্রজেক্টের ডিজাইন ক্লায়েন্ট Illustrator এ দিয়েছে। Mac এ কাজ করলে <a href=\"https://www.sketchapp.com/\" target=\"_blank\" rel=\"noopener\">স্কেচ</a> এর বেসিক knowledge খুবই উপকারে দিবে।</p>\n<p>HTML ও CSS:<br>এটি হয়ত না উল্লেখ করলেও হতো। কিন্তু কিছু বিষয় আমরা অনেকেই উপেক্ষা করে যাই। উদাহরণস্বরূপ, position:absolute অথবা display:inline-block রুল আপাতদৃষ্টিতে ব্রাউজারে কী পরিবর্তন আনে জানলেও পেছনের লজিক বুঝি না। ফলে কমপ্লেক্স ডিজাইন মার্কআপ করতে গেলে নানামুখী সংকটে পড়তে হয়। একই কথা বলা যেতে পারে html এর ক্ষেত্রেও। পেছনের লজিকগুলো জানতে হবে। css ডিসপ্লে, পজিশন, ফ্লোট, অ্যানিমেশন নখদর্পণে থাকতে হবে। CSS আর্কিটেক্ট হতে গেলে <a href=\"https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/\" target=\"_blank\" rel=\"noopener\">ব্রাউজার কীভাবে কাজ করে</a> তা নিয়ে ধারণা থাকতে হবে।</p>\n<p>CSS Processor:<br><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"noopener\">Bootstrap</a> এ কাজ করার সুবাদে অনেকেই <a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">Less</a> এর সাথে পরিচিত। কিন্তু মার্কেট Sass এর দখলে। অধিকাংশ জব পোস্টে এটি requirement। তাই সাসের গুরুত্ব নিয়ে আর শব্দ খরচ না করলেও চলছে। Sass এর <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">ভেরিয়েবল</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">মিক্সিন</a>, <a href=\"https://www.youtube.com/playlist?list=PL2CB1F80266E986EA\" target=\"_blank\" rel=\"noopener\">প্লেসহোল্ডার</a> সম্পর্কে জানতে হবে। ইদানিং <a href=\"http://postcss.org/\" target=\"_blank\" rel=\"noopener\">PostCSS</a> এর কদর বাড়ছে তবে এটি সম্পর্কে জানা এ মুহূর্তে আবশ্যিক না।</p>\n<p>রেসপনসিভনেস এবং ক্রস-ব্রাউজার কম্পেটিবলিটিঃ<br>Responsive এবং <a href=\"https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/\" target=\"_blank\" rel=\"noopener\">cross browser compatible</a> করা জানতেই হবে। <a href=\"https://speckyboy.com/top-50-css/\" target=\"_blank\" rel=\"noopener\">CSS ফ্রেমওয়ার্ক</a>, বিশেষ করে বুটস্ট্র্যাপ সম্পর্কে স্বচ্ছ ধারণা থাকতে হবে। নিখুঁত টেস্টিং প্রক্রিয়া অনুসরণ করলে ক্রস-ব্রাউজার কম্পেটিবিলিটি স্কিল অভিজ্ঞতার সাথে বাড়তে থাকবে।</p>\n<p>জাভাস্ক্রিপ্টঃ<br>JavaScript (JS) ছাড়া ফ্রন্ট-এন্ড অসম্পূর্ণ। <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f\" target=\"_blank\" rel=\"noopener\">এখানে বেশ কিছু প্রশ্ন আছে</a>। কতটুকু জানতে হবে? কোর ল্যাংগুয়েজ নাকি ফ্রেমওয়ার্ক? কোন ফ্রেমওয়ার্ক? ফাংশনাল প্রোগ্রামিং নাকি অবজেক্ট ওরিয়েন্টেড? ইত্যাদি..ইত্যাদি…।</p>\n<p>FE ডেভেলাপারদেরকে প্রধানত <a href=\"https://css-tricks.com/the-front-end-developers-dilemma/\" target=\"_blank\" rel=\"noopener\">দুইভাগে</a> ভাগ করা যায়। CSS সেন্ট্রিক এবং JS সেন্ট্রিক। প্রথম দলের ডেভরা সিএসএস এক্সপার্ট এবং যতটুকু জাভাস্ক্রিপ্ট জানলে কাজ চালানো যায় ততটুকু বা তার থেকে একটু বেশী জানেন। দেশীয় বাজারে এদের কদর তুলনামূলক কম। দ্বিতীয় দলের ডেভদের দক্ষতা এবং দেশের বাজারে চাহিদা ঠিক প্রথম দলের উল্টো।</p>\n<p><a href=\"https://medium.com/javascript-scene/top-javascript-frameworks-topics-to-learn-in-2017-700a397b711\" target=\"_blank\" rel=\"noopener\">প্লেইন JavaScript এবং কোনো একটি ফ্রেমওয়ার্ক</a> দুটোই শিখতে হবে। React নিয়ে <a href=\"https://www.facebook.com/groups/talkjs.net/\" target=\"_blank\" rel=\"noopener\">কমিনিউটিতে</a> অনেক কথা হলেও দেশে এখনও AngularJS এর জয়জয়কার। Angular2 নিয়ে বাহ্যত সমালোচনা থাকলেও ২০১৭ সালে যদি এটি stable থাকে তাহলে ২০১৮ থেকে ক্রমবর্ধমান হারে ব্যবহার হতে থাকবে।</p>\n<p>টাস্ক রানার/ মডিউল বান্ডলারঃ<br>Grunt/Gulp/Webpack এর যেকোনো একটি সম্পর্কে ধারণা থাকলেই হবে। সোর্স ফাইল <a href=\"https://www.youtube.com/playlist?list=PLLnpHn493BHE2RsdyUNpbiVn-cfuV7Fos\" target=\"_blank\" rel=\"noopener\">concat ও মিনিফাই</a> করা পর্যন্ত শিখতে হবে।</p>\n<p>যোগাযোগ দক্ষতাঃ<br>FE Dev এর জন্য কমিউনিকেশন স্কিল অপরিহার্য কারণ সে ডিজাইন ও ব্যাক-এন্ডের মধে্য সংযোগ সেতু স্বরূপ। এই দক্ষতা অনেক stress থেকে ডেভেলাপারকে রক্ষা করবে। টেকনিক্যাল যোগ্যতা যত বেশীই থাকুক না কেন, যোগাযোগে ঘাটতি থাকলে সফল ক্যারিয়ার গড়া খুবই কঠিন হয়ে যাবে।</p>\n<p>উল্লিখিত বিষয়গুলোর উপর ভালো দখল থাকার পাশাপাশি প্রজেক্টের উপর নির্ভর করে তালিকাটি আরও বড় হতে পারে। নতুন কিছু শেখার প্রতি তীব্র আসক্তি থাকতে হবে। বই পড়তে হবে। Youtube এ <a href=\"https://www.youtube.com/user/jsconfeu\" target=\"_blank\" rel=\"noopener\">কনফারেন্স টক</a> দেখতে হবে।</p>\n<p>অনুৎসাহিত হওয়ার কিছু নেই। লেগে থাকলে সময়ের ব্যাপার মাত্র। কিন্তু শেখা শুরু করব কোথা থেকে? কোন পথ ধরে এগোব? রোডম্যাপ কী? Roadmap — এটিই হবে পরবর্তী পোস্টের আলোচ্য বিষয়।</p>\n<p>লেখাটি নিয়ে আপনার মতামত বা প্রশ্ন থাকলে কমেন্ট করুন। ভালো লাগলে শেয়ার করুন।</p>\n"},{"title":"HTML ও CSS পরিচিতি - পর্ব ১ - সূচনা","date":"2017-03-09T02:00:00.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।\n\nএরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।\n\nআমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।\n\nগল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।\n\n### ইন্টারনেট\nইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।\n\n### ওয়েব\nWWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।\n\n### ওয়েবসাইট\nওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।\n\n### ব্রাউজার\nব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।\n\nযেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।\n\nAtom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।\n\nধন্যবাদ।\n","source":"_posts/html-css-intro-01.md","raw":"---\ntitle: HTML ও CSS পরিচিতি - পর্ব ১ - সূচনা\ndate: 2017-03-09 08:00:00\nauthor: শহীদুল ইসলাম মজুমদার\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nতখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।\n\nএরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।\n\nআমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।\n\nগল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।\n\n### ইন্টারনেট\nইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।\n\n### ওয়েব\nWWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।\n\n### ওয়েবসাইট\nওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।\n\n### ব্রাউজার\nব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।\n\nযেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।\n\nAtom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।\n\nধন্যবাদ।\n","slug":"html-css-intro-01","published":1,"updated":"2018-02-17T03:46:42.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdrhlxiz0004o4a2ssqnztbp","content":"<p>তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।</p>\n<p>এরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।</p>\n<p>আমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।</p>\n<p>গল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।</p>\n<h3 id=\"ইন্টারনেট\"><a href=\"#ইন্টারনেট\" class=\"headerlink\" title=\"ইন্টারনেট\"></a>ইন্টারনেট</h3><p>ইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।</p>\n<h3 id=\"ওয়েব\"><a href=\"#ওয়েব\" class=\"headerlink\" title=\"ওয়েব\"></a>ওয়েব</h3><p>WWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।</p>\n<h3 id=\"ওয়েবসাইট\"><a href=\"#ওয়েবসাইট\" class=\"headerlink\" title=\"ওয়েবসাইট\"></a>ওয়েবসাইট</h3><p>ওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।</p>\n<h3 id=\"ব্রাউজার\"><a href=\"#ব্রাউজার\" class=\"headerlink\" title=\"ব্রাউজার\"></a>ব্রাউজার</h3><p>ব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।</p>\n<p>যেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।</p>\n<p>Atom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।</p>\n<p>ধন্যবাদ।</p>\n","site":{"data":{}},"excerpt":"","more":"<p>তখন আমি এইচ.এস.সি. দ্বিতীয়বর্ষের ছাত্র। বন্ধুরা মিলে ‘প্রভাতের আহ্বান’ নামে একটি সামাজিক উন্নয়নমূলক সংগঠন বানিয়েছিলাম। ইচ্ছে ছিলো সংগঠনের নিয়মকানুন ও রেজিস্ট্রেশনের জন্য একটি ওয়েবসাইট বানাবো। তাই মোবাইল থেকেই wapka নামক এক সাইটে অ্যাকাউন্ট খুলেছিলাম। কিন্তু জানতাম না ওয়েব কীভাবে কাজ করে, কীভাবে একটি ওয়েবসাইট বানাতে হয়। ফলে ‘প্রভাতের আহ্বান’ এর ওয়েবসাইট বানানোর ইচ্ছে সেখানেই থামিয়ে দিতে হলো।</p>\n<p>এরপর সময় গড়িয়েছে অনেক। বিশ্ববিদ্যালয়ে ভর্তি হলাম কম্পিউটার বিজ্ঞান ও প্রকৌশল বিভাগে। হাতে কম্পিউটার আসলো, বছরের মাথায় ইন্টারনেট সংযোগও পেয়ে গেলাম। বিশ্ববিদ্যালয়ে জাভা প্রোগ্রামিং শেখার পাশাপাশি নিজে নিজে শিখতে লাগলাম ওয়েব ডেভেলপমেন্ট। জাভার চাইতে ওয়েব প্রোগ্রামিংই আমাকে বেশি টানতে লাগলো। আলহামদুলিল্লাহ! প্রায় দুবছর ধরে শেখার ফলে এখন আমি জাভার চাইতে ওয়েব প্রোগ্রামিংই বেশি জানি।</p>\n<p>আমার মতো ছোট ছোট স্বপ্নগুলোকে যারা একেবারে নিজের মতো করে ওয়েবের দুনিয়ায় সাজাতে চান, কিন্তু কীভাবে সাজানো যায় তা জানেন না, তাদের জন্যই এই টিউটোরিয়াল সিরিজ। আমি যে খুব জানি ব্যাপারটা তেমন না। আপনাদের জানাতে গিয়ে যদি একটু আধটু জানতে পারি এটাই আমার টিউটোরিয়াল লেখার মূল উদ্দেশ্য। আশা করি সকলকেই পাশে পাবো ইনশা আল্লাহ।</p>\n<p>গল্প তো অনেক হলো, এবার চলুন জেনে নেয়া যাক সেই বিষয়গুলো, ওয়েব ডেভেলপমেন্ট শুরুর আগে যেগুলো একেবারে না জনলেই নয়।</p>\n<h3 id=\"ইন্টারনেট\"><a href=\"#ইন্টারনেট\" class=\"headerlink\" title=\"ইন্টারনেট\"></a>ইন্টারনেট</h3><p>ইন্টারনেট হলো পরস্পর সংযুক্ত অনেকগুলো কম্পিউটারের একটি নেটওয়ার্ক। এই নেটওয়ার্কের মধ্যে ব্যক্তিগত, উন্মুক্ত, শিক্ষামূলক, সরকারি ইত্যাদি নানা ধরনের ছোট ছোট নেটওয়ার্ক থাকে। পরস্পরের সাথে যুক্ত হওয়ার জন্য সকলকে কিছু প্রটোকল কিংবা নীতিমালা মেনে চলতে হয়।</p>\n<h3 id=\"ওয়েব\"><a href=\"#ওয়েব\" class=\"headerlink\" title=\"ওয়েব\"></a>ওয়েব</h3><p>WWW (world wide web) তথা ওয়েব হচ্ছে একটি তথ্যের দুনিয়া যেখানে বিভিন্ন ডকুমেন্ট ও ওয়েব রিসোর্সগুলো চিহ্নিত করা হয় URL অর্থাৎ ইউনিক লিংক এর মাধ্যমে। এই ডকুমেন্ট ও রিসোর্সগুলো পরস্পরের সাথে যুক্ত থাকে হাইপারটেক্সট লিংক এর মাধ্যমে। ওয়েব আবিষ্কার করেন টিম বার্নাস-লী ১৯৮৯ সালে।</p>\n<h3 id=\"ওয়েবসাইট\"><a href=\"#ওয়েবসাইট\" class=\"headerlink\" title=\"ওয়েবসাইট\"></a>ওয়েবসাইট</h3><p>ওয়েবসাইট হচ্ছে একই ধরনের কিছু ওয়েব পেইজের সমষ্টি যার ভেতর মাল্টিমিডিয়া কনটেন্টও (ছবি, ভিডিও ইত্যাদি) থাকতে পারে। আর ওয়েব পেইজ হচ্ছে এমন একটি ডকুমেন্ট যা ওয়েব এবং ওয়েব ব্রাউজার বুঝতে পারে। সাধারণত প্রতিটি ওয়েবসাইটের একটি ইউনিক ডোমেইন (prozuktischool.com) থাকে, যা ব্রাউজারে লিখে যে কেউ ওয়েবসাইটটিতে ভিজিট করতে পারে। ওয়েবসাইট নানা ধরনের ও আকারের হয়ে থাকে, তবে উল্লেখযোগ্য হলো ব্যক্তিগত, কমার্শিয়াল, সরকারি ইত্যাদি।</p>\n<h3 id=\"ব্রাউজার\"><a href=\"#ব্রাউজার\" class=\"headerlink\" title=\"ব্রাউজার\"></a>ব্রাউজার</h3><p>ব্রাউজার হচ্ছে এমন একটি বিশেষ সফ্‌টয়্যার যা ওয়েব ডকুমেন্ট পড়ে তা ব্যবহারকারী বোঝে এমনভাবে প্রদর্শন করে থাকে। উল্লেখযোগ্য কিছু ব্রাউজার হচ্ছে গুগল ক্রোম, ফায়ারফক্স, অপেরা ইত্যাদি।</p>\n<p>যেহেতু এই লেখাটি আপনি পড়তে পারছেন, আমি ধরে নিচ্ছি আপনার কম্পিউটারে অন্ততপক্ষে একটি ব্রাউজার ইন্সটল করা আছে। HTML শেখার জন্য আপনার আর মাত্র একটি টুল হলেই চলবে। উইন্ডোজ অপারেটিং সিস্টেমে থাকা নোটপ্যাড দিয়েই কাজ চালিয়ে নেয়া যেতো। তবে কাজকে সহজ ও আকর্ষণীয় করে তোলার জন্য আমরা প্রফেশনাল লেভেলের একটি টেক্সট এডিটর ব্যবহার করবো। এজন্য আপনাকে Atom নামের টেক্সট এডিটরটি ডাউনলোড করে ইন্সটল করে নিতে হবে। Atom এডিটরটি আপনি ডাউনলোড করতে পারবেন এখান থেকে।</p>\n<p>Atom ও গুগল ক্রোম কিংবা ফায়ারফক্স ইন্সটল করে তৈরি হয়ে নিন। ইনশা আল্লাহ্‌ পরবর্তী টিউটোরিয়াল থেকেই আমরা আমাদের কোডিং যাত্রা শুরু করবো।</p>\n<p>ধন্যবাদ।</p>\n"},{"title":"পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা","date":"2017-02-21T04:39:23.000Z","author":"শহীদুল ইসলাম মজুমদার","_content":"ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।\n\nআজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।\n\n### ১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\nধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।\n\n### ২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\nধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।\n\n### ৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\nআপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।\n\n### ৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\nআপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।\n\n### ৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\nকিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।\n\n### ৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\nপ্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।\n\n### ৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\nআপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।\n\n### ৮. নিজের সম্পর্কে বলুনঃ\nসাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।\n\n### ৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\nআগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।\n\n### ১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\nআপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।\n\nএতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”\n","source":"_posts/portfolio-design-guideline.md","raw":"---\ntitle: পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা\ndate: 2017-02-21 10:39:23\nauthor: শহীদুল ইসলাম মজুমদার\ntags: ওয়েব ডেভেলপমেন্ট\ncategory: ওয়েব ডেভেলপমেন্ট\n---\nফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।\n\nআজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।\n\n### ১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\nধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।\n\n### ২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\nধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।\n\n### ৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\nআপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।\n\n### ৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\nআপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।\n\n### ৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\nকিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।\n\n### ৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\nপ্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।\n\n### ৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\nআপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।\n\n### ৮. নিজের সম্পর্কে বলুনঃ\nসাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।\n\n### ৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\nআগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।\n\n### ১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\nআপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।\n\nএতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”\n","slug":"portfolio-design-guideline","published":1,"updated":"2018-02-17T04:41:48.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdrhlxj00005o4a2sifsyfam","content":"<p>ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।</p>\n<p>আজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।</p>\n<h3 id=\"১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\"><a href=\"#১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\"></a>১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ</h3><p>ধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।</p>\n<h3 id=\"২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\"><a href=\"#২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\"></a>২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ</h3><p>ধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।</p>\n<h3 id=\"৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\"><a href=\"#৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\" class=\"headerlink\" title=\"৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\"></a>৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ</h3><p>আপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।</p>\n<h3 id=\"৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\"><a href=\"#৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\"></a>৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ</h3><p>আপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।</p>\n<h3 id=\"৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\"><a href=\"#৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\" class=\"headerlink\" title=\"৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\"></a>৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ</h3><p>কিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।</p>\n<h3 id=\"৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\"><a href=\"#৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\" class=\"headerlink\" title=\"৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\"></a>৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ</h3><p>প্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।</p>\n<h3 id=\"৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\"><a href=\"#৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\"></a>৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ</h3><p>আপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।</p>\n<h3 id=\"৮-নিজের-সম্পর্কে-বলুনঃ\"><a href=\"#৮-নিজের-সম্পর্কে-বলুনঃ\" class=\"headerlink\" title=\"৮. নিজের সম্পর্কে বলুনঃ\"></a>৮. নিজের সম্পর্কে বলুনঃ</h3><p>সাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।</p>\n<h3 id=\"৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\"><a href=\"#৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\"></a>৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ</h3><p>আগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।</p>\n<h3 id=\"১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\"><a href=\"#১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\" class=\"headerlink\" title=\"১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\"></a>১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ</h3><p>আপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।</p>\n<p>এতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ফ্রন্ট-এন্ড বা ব্যাক-এন্ড যে ধরনের ডেভেলপারই আপনি হয়ে থাকুন না, দুনিয়ার সামনে নিজের অভিজ্ঞতাগুলো তুলে ধরার সবচেয়ে সাধারণ (কমন), নির্ভরযোগ্য ও আকর্ষণীয় উপায় হলো একটি পোর্টফোলিও সাইট বানানো। চাকরির ইন্টারভিউ কিংবা সিভিতে যখন চাকরিদাতা আপনার পোর্টফোলিও সাইটের উল্লেখ দেখতে পাবেন তখন ইন্টারভিউর অধিকাংশ প্রশ্নই হবে আপনার করা কাজগুলো নিয়ে। ভাগ্য ভালো হলে হয়তো আপনাকে ইন্টারভিউর ধকল সহ্য করতেই হবে না। আপনার সাজানো-গোছানো পোর্টফোলিও আপনার পক্ষে ইন্তারভিউটি দিয়ে দিবে। কিন্তু একই পোর্টফোলিও সাইটই আপনার চাকরি না পাওয়ার কারণ হতে পারে যদি তা ‘হ-য-ব-র-ল’ ধরণের কিছু হয়ে থাকে।</p>\n<p>আজকের লেখাটির মাধ্যমে আমরা জানতে চেষ্টা করবো পোর্টফোলিও সাইট বানানোর কিছু সাধারণ নীতিমালা যা আপনার করা কাজগুলো দুনিয়ার সামনে তুলে ধরবে আকর্ষণীয় ও সাজানো-গোছানোভাবে। তাহলে চলুন কথা না বাড়িয়ে ‘কিলার পোর্টফোলিও’ সাইট বানানোর নীতিমালাগুলো জেনে নেই।</p>\n<h3 id=\"১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\"><a href=\"#১-আপনার-যোগ্যতার-সাথে-মিল-আছে-এমন-কাজগুলো-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ\"></a>১. আপনার যোগ্যতার সাথে মিল আছে এমন কাজগুলো প্রদর্শন করুনঃ</h3><p>ধরুন, আমি একজন ফ্রন্ট-এন্ড ডেভেলপার। কিন্তু আমার পোর্টফোলিও সাইটে আমি উল্লেখ করেছি php দিয়ে লগ ইন সিস্টেম বানানোর প্রজেক্ট, অনলাইন শপের জন্য ডেটাবেজ ডিজাইন প্রজেক্ট ইত্যাদি। আপনি কি আমাকে ফ্রন্ট-এন্ড ডেভেলপার হিসেবে চাকরি দিবেন? তাই নিজের দক্ষতাকে ফুটিয়ে তোলার জন্য সেই প্রজেক্টগুলোই প্রদর্শন করুন যেগুলো আপনার মূল দক্ষতাকে প্রকাশ করে।</p>\n<h3 id=\"২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\"><a href=\"#২-যোগাযোগের-সঠিক-ও-পূর্ণ-ঠিকানা-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ\"></a>২. যোগাযোগের সঠিক ও পূর্ণ ঠিকানা উল্লেখ করুনঃ</h3><p>ধরুন আপনার দক্ষতা ও কাজ দেখে এক চাকরিদাতা মুগ্ধ। তিনি আপনাকে নিয়োগ দেওয়ার জন্য এক পায়ে খাড়া। কিন্তু অনেক খোঁজাখুঁজি করেও আপনার সাথে যোগাযোগের কোনো উপায় খুঁজে পেলো না। কিংবা আপনার দেওয়া ইমেইল/ফোন নম্বরটি কাজ করে না/বন্ধ। তাহলে এমন পোর্টফোলিও সাইট বানিয়ে আপনার কিংবা চাকরিদাতা কারো কোনো উপকার হবে? তাই নিজের পূর্ণাঙ্গ ঠিকানা পরিষ্কারভাবে উল্লেখ করুন। ফোন নম্বর/ইমেইল ঠিকানা পরিবর্তন করে থাকলে তা নিয়মিত আপডেট করুন।</p>\n<h3 id=\"৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\"><a href=\"#৩-নিজের-অনন্যতা-ফুটিয়ে-তুলুনঃ\" class=\"headerlink\" title=\"৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ\"></a>৩. নিজের অনন্যতা ফুটিয়ে তুলুনঃ</h3><p>আপনার পোর্টফোলিও সাইট হচ্ছে আপনার বিজ্ঞাপন। তাই এই বিজ্ঞাপনকে এমনভাবে তৈরি করুন যা আপনার অনন্যতাকে ফুটিয়ে তোলে, যা আপনাকে অন্যদের চাইতে আলাদা করে তোলে। কিন্তু খুব বেশি অনন্যতা দেখাতে গিয়ে সাইটটিকে এলিয়েনদের সাইটে পরিণত করবেন না। দুনিয়ার মানুষ বোঝে এমন ডিজাইন, প্যাটার্ন, মেথড প্রদর্শন করুন। তা না হলে আমাদের দুনিয়ার পরিবর্তে এলিয়নদের দুনিয়ায় আপনার চাকরি হয়ে যেতে পারে।</p>\n<h3 id=\"৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\"><a href=\"#৪-সাম্প্রতিক-সময়ে-করা-সেরা-কাজগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ\"></a>৪. সাম্প্রতিক সময়ে করা সেরা কাজগুলো উল্লেখ করুনঃ</h3><p>আপনি যদি একশোটি সাইট বানিয়ে থাকেন তবে প্রথম বানানো সাইটটির সাথে সর্বশেষ বানানো সাইটটির একটি বিশাল ফারাক দেখতে পাবেন। এর কারণ টেকনোলোজি, ট্রেন্ড, ডিজাইন প্যাটার্ন ইত্যাদির পরিবর্তন। আপনি প্রথম যখন সাইট বানিয়েছিলেন তখন হয়তো স্মার্টফোনের প্রচলন ছিলো না। তাই রেসপন্সিভ ডিজাইন নিয়ে হয়তো তখন কোনো কাজই করেননি। তাই কেবল তখনকার করা কাজগুলোই যদি পোর্টফোলিওতে উল্লেখ করে থাকেন, তবে চাকরিদাতা হয়তো ভাববে আধুনিক প্রযুক্তি সম্পর্কে আপনার কোনো ধারণা নেই (যদিও এ ব্যাপারে আপনি একজন গুরু)। কারণ, আপনার পোর্টফোলিওতে সাম্প্রতিক কাজের কোনো উল্লেখ নেই। তাই সেই কাজগুলোই আগে উল্লেখ করুন যেগুলো সাম্প্রতিক প্রযুক্তি ও ট্রেন্ডের প্রকাশ ঘটায়।</p>\n<h3 id=\"৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\"><a href=\"#৫-সহজ-নেভিগেশান-সিস্টেম-রাখুনঃ\" class=\"headerlink\" title=\"৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ\"></a>৫. সহজ নেভিগেশান সিস্টেম রাখুনঃ</h3><p>কিলার সাইট বানালেন, নিজের করা সেরা কাজগুলোও উল্লেখ করলেন, কিন্তু নেভিগেশান মেন্যুটি খুঁজে পেতে ভিজিটরের অনেক খোঁজাখুঁজি করতে হলো। কিংবা এতো ভারি প্রযুক্তি ব্যবহার করলেন যে ভিজিটরের ডিভাইসে তা দেখাই গেলো না। তাহলে ভাবুন তখন ভিজিটরের কেমন লাগবে? আপনার কিলার প্রজেক্টগুলোই বা সে কীভাবে ভেবে দেখবে? তাই এমন নেভিগেশান ব্যবস্থা রাখুন যাতে ভিজিটর আপনার সাইটে বিনা বাধায় ভ্রমণ করতে পারে।</p>\n<h3 id=\"৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\"><a href=\"#৬-কাজের-সাথে-সম্পর্কিত-ছবি-ব্যবহার-করুনঃ\" class=\"headerlink\" title=\"৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ\"></a>৬. কাজের সাথে সম্পর্কিত ছবি ব্যবহার করুনঃ</h3><p>প্রজেক্ট গ্যালারি বানানোর সময় যথাসম্ভব প্রজক্টের প্রকৃত ছবি ব্যবহার করুন। মোবাইল UI প্রজেক্টে ডেক্সটপ সাইটের ছবি দিলে মোবাইল ডেভেলপার খুঁজছে যারা তারা হয়তো প্রজেক্টের লিংকে ক্লিকই করবে না। ফলে আপনার করা সেরা মোবাইল UI টি অদেখাই রয়ে যাবে। সাথে সাথে চাকরি পাওয়ার যে সম্ভাবনা ছিলো তাও হয়তো উড়ে যাবে।</p>\n<h3 id=\"৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\"><a href=\"#৭-কাজগুলো-বিভিন্ন-বিভাগে-ভাগ-করে-প্রদর্শন-করুনঃ\" class=\"headerlink\" title=\"৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ\"></a>৭. কাজগুলো বিভিন্ন বিভাগে ভাগ করে প্রদর্শন করুনঃ</h3><p>আপনি যদি বিভিন্ন ধরনের কাজ যেমনঃ UI/UX ডিজাইন, ফ্রন্ট-এন্ড/ব্যাক-এন্ড ডেভেলপমেন্ট ইত্যাদি করে থাকেন তবে কাজগুলো বিভিন্ন বিভাগে সাজিয়ে রাখুন। এতে করে ভিজিটর সহজেই যে বিভাগের কাজ দেখতে চান তা দেখতে পাবেন।</p>\n<h3 id=\"৮-নিজের-সম্পর্কে-বলুনঃ\"><a href=\"#৮-নিজের-সম্পর্কে-বলুনঃ\" class=\"headerlink\" title=\"৮. নিজের সম্পর্কে বলুনঃ\"></a>৮. নিজের সম্পর্কে বলুনঃ</h3><p>সাইটের কোনো এক জায়াগায় অল্প করে নিজের সম্পর্কে বলুন। কী খেতে, করতে, পরতে ও পড়তে ভালোবাসেন ইত্যাদি। চাকরিদাতা যদি একবারে সাড়ে একান্ন বার পুশ আপ দিতে পারে এমন লোকের খোঁজে আসে আর আপনার পোর্টফোলিওতে এমন কোনো তথ্যের উল্লেখ পায়, তবে আপনার ভাগ্য খুলেও যেতে পারে।</p>\n<h3 id=\"৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\"><a href=\"#৯-আগে-কোনো-ক্লায়েন্ট-প্রজেক্ট-করে-থাকলে-তাদের-প্রশংসাবাণীগুলো-উল্লেখ-করুনঃ\" class=\"headerlink\" title=\"৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ\"></a>৯. আগে কোনো ক্লায়েন্ট প্রজেক্ট করে থাকলে, তাদের প্রশংসাবাণীগুলো উল্লেখ করুনঃ</h3><p>আগে কোনো ফ্রীল্যান্স প্রজেক্ট করে থাকলে, ক্লায়েন্টের কাছ থেকে আপনার কাজ সম্পর্কে দু-চারটি প্রশংসাবাক্য সংগ্রহের চেষ্টা করুন এবং তা আপনার পোর্টফোলিও সাইটে যোগ করে দিন। অনেকটা রেফারেন্সের মতো কাজ করবে এটি।</p>\n<h3 id=\"১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\"><a href=\"#১০-পরিষ্কারভাবে-উল্লেখ-করুন-আপনি-কোন-কাজটি-করতে-চানঃ\" class=\"headerlink\" title=\"১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ\"></a>১০. পরিষ্কারভাবে উল্লেখ করুন আপনি কোন কাজটি করতে চানঃ</h3><p>আপনার পোর্টফোলিও দেখে ভিজিটর যাতে বুঝতে পারে আপনি কোন ধরনের কাজ করতে প্রস্তুত। সম্ভব হলে পরিষ্কারভাবে উল্লেখ করুন, “আমি অমুক কাজের জন্য প্রস্তুত”।</p>\n<p>এতোক্ষণ ধরে যা কিছু বললাম, এগুলো কোনো ধরাবাধা নিয়ম নয়। আপনি আপনার মতো করে কাটছাট মেরে এমন কিছু তৈরি করুন যা দেখে ভিজিটরের কাছে আপনার প্রয়োজনীয়তা প্রকাশ পায়। আপনার সাইট দেখে ভিজিটর যাতে মনে মনে বলে, “একে আমার চাই-ই চাই!”</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjdrhlxj00005o4a2sifsyfam","category_id":"cjdrhlxix0002o4a2uhn2yz4q","_id":"cjdrhlxj5000ao4a28cy2j8ot"},{"post_id":"cjdrhlxiq0000o4a2mvdwtcbx","category_id":"cjdrhlxix0002o4a2uhn2yz4q","_id":"cjdrhlxj7000eo4a2ckfl5d0n"},{"post_id":"cjdrhlxiu0001o4a26xkyz5vt","category_id":"cjdrhlxix0002o4a2uhn2yz4q","_id":"cjdrhlxj7000fo4a2rd2j618u"},{"post_id":"cjdrhlxiz0004o4a2ssqnztbp","category_id":"cjdrhlxix0002o4a2uhn2yz4q","_id":"cjdrhlxj8000ho4a2jfoizstu"}],"PostTag":[{"post_id":"cjdrhlxj00005o4a2sifsyfam","tag_id":"cjdrhlxiy0003o4a2m58a4xhv","_id":"cjdrhlxj40008o4a2mk1b9svx"},{"post_id":"cjdrhlxiq0000o4a2mvdwtcbx","tag_id":"cjdrhlxiy0003o4a2m58a4xhv","_id":"cjdrhlxj50009o4a2vm0caexn"},{"post_id":"cjdrhlxiu0001o4a26xkyz5vt","tag_id":"cjdrhlxiy0003o4a2m58a4xhv","_id":"cjdrhlxj7000do4a29snyvhjm"},{"post_id":"cjdrhlxiz0004o4a2ssqnztbp","tag_id":"cjdrhlxiy0003o4a2m58a4xhv","_id":"cjdrhlxj8000go4a2has2q8vv"}],"Tag":[{"name":"ওয়েব ডেভেলপমেন্ট","_id":"cjdrhlxiy0003o4a2m58a4xhv"}]}}